// <auto-generated />
using System;
using MenuPlanner.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MenuPlanner.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20240217204704_ReSeedAdministrator")]
    partial class ReSeedAdministrator
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MenuPlanner.Models.Entities.Allergen", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Icon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsPublished")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Allergens");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateCreated = new DateTime(2024, 2, 17, 21, 47, 2, 276, DateTimeKind.Local).AddTicks(4925),
                            DateUpdated = new DateTime(2024, 2, 17, 21, 47, 2, 278, DateTimeKind.Local).AddTicks(9559),
                            Description = "Informasjon",
                            Icon = "",
                            Image = "crustacean.png",
                            IsPublished = true,
                            Name = "Krepsdyr",
                            Url = "krepsdyr"
                        },
                        new
                        {
                            Id = 2,
                            DateCreated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(788),
                            DateUpdated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(799),
                            Description = "Informasjon",
                            Icon = "",
                            Image = "sesame.png",
                            IsPublished = true,
                            Name = "Sesamfrø",
                            Url = "sesamfro"
                        },
                        new
                        {
                            Id = 3,
                            DateCreated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(806),
                            DateUpdated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(808),
                            Description = "Informasjon",
                            Icon = "",
                            Image = "nuts.png",
                            IsPublished = true,
                            Name = "Nøtter",
                            Url = "notter"
                        },
                        new
                        {
                            Id = 4,
                            DateCreated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(814),
                            DateUpdated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(816),
                            Description = "Informasjon",
                            Icon = "",
                            Image = "gluten.png",
                            IsPublished = true,
                            Name = "Gluten",
                            Url = "gluten"
                        },
                        new
                        {
                            Id = 5,
                            DateCreated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(821),
                            DateUpdated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(823),
                            Description = "Informasjon",
                            Icon = "",
                            Image = "egg.png",
                            IsPublished = true,
                            Name = "Egg",
                            Url = "egg"
                        },
                        new
                        {
                            Id = 6,
                            DateCreated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(839),
                            DateUpdated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(842),
                            Description = "Informasjon",
                            Icon = "",
                            Image = "fish.png",
                            IsPublished = true,
                            Name = "Fisk",
                            Url = "fisk"
                        },
                        new
                        {
                            Id = 7,
                            DateCreated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(847),
                            DateUpdated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(886),
                            Description = "Informasjon",
                            Icon = "",
                            Image = "shellfish.png",
                            IsPublished = true,
                            Name = "Skalldyr",
                            Url = "skalldyr"
                        },
                        new
                        {
                            Id = 8,
                            DateCreated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(893),
                            DateUpdated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(895),
                            Description = "Informasjon",
                            Icon = "",
                            Image = "mustard.png",
                            IsPublished = true,
                            Name = "Sennep",
                            Url = "sennep"
                        },
                        new
                        {
                            Id = 9,
                            DateCreated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(901),
                            DateUpdated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(903),
                            Description = "Informasjon",
                            Icon = "",
                            Image = "celery.png",
                            IsPublished = true,
                            Name = "Selleri",
                            Url = "selleri"
                        },
                        new
                        {
                            Id = 10,
                            DateCreated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(911),
                            DateUpdated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(914),
                            Description = "Informasjon",
                            Icon = "",
                            Image = "peanuts.png",
                            IsPublished = true,
                            Name = "Peanøtter",
                            Url = "peanotter"
                        },
                        new
                        {
                            Id = 11,
                            DateCreated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(919),
                            DateUpdated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(921),
                            Description = "Informasjon",
                            Icon = "",
                            Image = "milk.png",
                            IsPublished = true,
                            Name = "Melk",
                            Url = "melk"
                        },
                        new
                        {
                            Id = 12,
                            DateCreated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(927),
                            DateUpdated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(929),
                            Description = "Informasjon",
                            Icon = "",
                            Image = "sulphite.png",
                            IsPublished = true,
                            Name = "Sulfitt",
                            Url = "sulfitt"
                        },
                        new
                        {
                            Id = 13,
                            DateCreated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(934),
                            DateUpdated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(936),
                            Description = "Informasjon",
                            Icon = "",
                            Image = "",
                            IsPublished = true,
                            Name = "Soya",
                            Url = "soya"
                        },
                        new
                        {
                            Id = 14,
                            DateCreated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(942),
                            DateUpdated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(944),
                            Description = "Informasjon",
                            Icon = "",
                            Image = "",
                            IsPublished = true,
                            Name = "Lupin",
                            Url = "lupin"
                        });
                });

            modelBuilder.Entity("MenuPlanner.Models.Entities.Country", b =>
                {
                    b.Property<string>("ISO3166_2")
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ISO3166_2");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            ISO3166_2 = "DE",
                            Name = "Tyskland"
                        },
                        new
                        {
                            ISO3166_2 = "DK",
                            Name = "Danmark"
                        },
                        new
                        {
                            ISO3166_2 = "ES",
                            Name = "Spania"
                        },
                        new
                        {
                            ISO3166_2 = "FR",
                            Name = "Frankrike"
                        },
                        new
                        {
                            ISO3166_2 = "GR",
                            Name = "Hellas"
                        },
                        new
                        {
                            ISO3166_2 = "IT",
                            Name = "Italia"
                        },
                        new
                        {
                            ISO3166_2 = "JP",
                            Name = "Japan"
                        },
                        new
                        {
                            ISO3166_2 = "MX",
                            Name = "Mexico"
                        },
                        new
                        {
                            ISO3166_2 = "NO",
                            Name = "Norge"
                        },
                        new
                        {
                            ISO3166_2 = "PT",
                            Name = "Portugal"
                        },
                        new
                        {
                            ISO3166_2 = "SE",
                            Name = "Sverige"
                        },
                        new
                        {
                            ISO3166_2 = "TH",
                            Name = "Thailand"
                        },
                        new
                        {
                            ISO3166_2 = "GB",
                            Name = "Storbritannia"
                        },
                        new
                        {
                            ISO3166_2 = "US",
                            Name = "USA"
                        });
                });

            modelBuilder.Entity("MenuPlanner.Models.Entities.Ingredient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateVerified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("EnergyKcalPer100g")
                        .HasColumnType("float");

                    b.Property<bool>("HasImage")
                        .HasColumnType("bit");

                    b.Property<bool>("IsNutritionallyVerified")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPublished")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VerificationAuthority")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VerificationAuthorityPerson")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Ingredients");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateCreated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(2700),
                            DateUpdated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(3022),
                            Description = "Informasjon",
                            EnergyKcalPer100g = 0.0,
                            HasImage = false,
                            IsNutritionallyVerified = false,
                            IsPublished = true,
                            Name = "Hvetemel",
                            Type = 4,
                            Url = "hvetemel"
                        },
                        new
                        {
                            Id = 2,
                            DateCreated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(4707),
                            DateUpdated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(4719),
                            Description = "Informasjon",
                            EnergyKcalPer100g = 0.0,
                            HasImage = false,
                            IsNutritionallyVerified = false,
                            IsPublished = true,
                            Name = "Sammalt hvete, grovmalt",
                            Type = 4,
                            Url = "sammalt-hvete-grovmalt"
                        },
                        new
                        {
                            Id = 3,
                            DateCreated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(4726),
                            DateUpdated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(4728),
                            Description = "Informasjon",
                            EnergyKcalPer100g = 0.0,
                            HasImage = false,
                            IsNutritionallyVerified = false,
                            IsPublished = true,
                            Name = "Sammalt hvete, finmalt",
                            Type = 4,
                            Url = "sammalt-hvete-finmalt"
                        },
                        new
                        {
                            Id = 4,
                            DateCreated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(4734),
                            DateUpdated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(4736),
                            Description = "Informasjon",
                            EnergyKcalPer100g = 0.0,
                            HasImage = false,
                            IsNutritionallyVerified = false,
                            IsPublished = true,
                            Name = "Hvete helkorn",
                            Type = 4,
                            Url = "hvete-helkorn"
                        },
                        new
                        {
                            Id = 5,
                            DateCreated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(4742),
                            DateUpdated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(4744),
                            Description = "Informasjon",
                            EnergyKcalPer100g = 0.0,
                            HasImage = false,
                            IsNutritionallyVerified = false,
                            IsPublished = true,
                            Name = "Havregryn, lettkokt",
                            Type = 4,
                            Url = "havregryn-lettkokt"
                        },
                        new
                        {
                            Id = 6,
                            DateCreated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(4752),
                            DateUpdated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(4755),
                            Description = "Informasjon",
                            EnergyKcalPer100g = 0.0,
                            HasImage = false,
                            IsNutritionallyVerified = false,
                            IsPublished = true,
                            Name = "Havregryn, store",
                            Type = 4,
                            Url = "havregryn-store"
                        },
                        new
                        {
                            Id = 7,
                            DateCreated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(4788),
                            DateUpdated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(4790),
                            Description = "Informasjon",
                            EnergyKcalPer100g = 0.0,
                            HasImage = false,
                            IsNutritionallyVerified = false,
                            IsPublished = true,
                            Name = "Havregryn, glutenfri",
                            Type = 4,
                            Url = "havregryn-glutenfri"
                        },
                        new
                        {
                            Id = 8,
                            DateCreated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(4796),
                            DateUpdated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(4798),
                            Description = "Informasjon",
                            EnergyKcalPer100g = 0.0,
                            HasImage = false,
                            IsNutritionallyVerified = false,
                            IsPublished = true,
                            Name = "Havremel",
                            Type = 4,
                            Url = "havremel"
                        },
                        new
                        {
                            Id = 9,
                            DateCreated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(4803),
                            DateUpdated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(4805),
                            Description = "Informasjon",
                            EnergyKcalPer100g = 0.0,
                            HasImage = false,
                            IsNutritionallyVerified = false,
                            IsPublished = true,
                            Name = "Rug, helkorn",
                            Type = 4,
                            Url = "rug-helkorn"
                        },
                        new
                        {
                            Id = 10,
                            DateCreated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(4812),
                            DateUpdated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(4815),
                            Description = "Informasjon",
                            EnergyKcalPer100g = 0.0,
                            HasImage = false,
                            IsNutritionallyVerified = false,
                            IsPublished = true,
                            Name = "Rugmel",
                            Type = 4,
                            Url = "rugmel"
                        },
                        new
                        {
                            Id = 11,
                            DateCreated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(4820),
                            DateUpdated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(4822),
                            Description = "Informasjon",
                            EnergyKcalPer100g = 0.0,
                            HasImage = false,
                            IsNutritionallyVerified = false,
                            IsPublished = true,
                            Name = "Bygg, helkorn",
                            Type = 4,
                            Url = "bygg-helkorn"
                        },
                        new
                        {
                            Id = 12,
                            DateCreated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(4828),
                            DateUpdated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(4830),
                            Description = "Informasjon",
                            EnergyKcalPer100g = 0.0,
                            HasImage = false,
                            IsNutritionallyVerified = false,
                            IsPublished = true,
                            Name = "Byggmel",
                            Type = 4,
                            Url = "byggmel"
                        },
                        new
                        {
                            Id = 13,
                            DateCreated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(4835),
                            DateUpdated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(4837),
                            Description = "Informasjon",
                            EnergyKcalPer100g = 0.0,
                            HasImage = false,
                            IsNutritionallyVerified = false,
                            IsPublished = true,
                            Name = "Gresskarkjerner",
                            Type = 4,
                            Url = "gresskarkjerner"
                        },
                        new
                        {
                            Id = 14,
                            DateCreated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(4843),
                            DateUpdated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(4845),
                            Description = "Informasjon",
                            EnergyKcalPer100g = 0.0,
                            HasImage = false,
                            IsNutritionallyVerified = false,
                            IsPublished = true,
                            Name = "Skummet melk",
                            Type = 2,
                            Url = "skummet-melk"
                        },
                        new
                        {
                            Id = 15,
                            DateCreated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(4850),
                            DateUpdated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(4852),
                            Description = "Informasjon",
                            EnergyKcalPer100g = 41.0,
                            HasImage = false,
                            IsNutritionallyVerified = false,
                            IsPublished = true,
                            Name = "Lettmelk",
                            Type = 2,
                            Url = "lettmelk"
                        },
                        new
                        {
                            Id = 16,
                            DateCreated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(5187),
                            DateUpdated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(5195),
                            Description = "Informasjon",
                            EnergyKcalPer100g = 0.0,
                            HasImage = false,
                            IsNutritionallyVerified = false,
                            IsPublished = true,
                            Name = "Helmelk",
                            Type = 2,
                            Url = "helmelk"
                        },
                        new
                        {
                            Id = 17,
                            DateCreated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(5202),
                            DateUpdated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(5204),
                            Description = "Informasjon",
                            EnergyKcalPer100g = 0.0,
                            HasImage = false,
                            IsNutritionallyVerified = false,
                            IsPublished = true,
                            Name = "Kremfløte",
                            Type = 2,
                            Url = "kremflote"
                        },
                        new
                        {
                            Id = 18,
                            DateCreated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(5291),
                            DateUpdated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(5294),
                            Description = "Informasjon",
                            EnergyKcalPer100g = 0.0,
                            HasImage = false,
                            IsNutritionallyVerified = false,
                            IsPublished = true,
                            Name = "Matfløte",
                            Type = 2,
                            Url = "matflote"
                        },
                        new
                        {
                            Id = 19,
                            DateCreated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(5300),
                            DateUpdated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(5302),
                            Description = "Informasjon",
                            EnergyKcalPer100g = 0.0,
                            HasImage = false,
                            IsNutritionallyVerified = false,
                            IsPublished = true,
                            Name = "Lettrømme",
                            Type = 2,
                            Url = "lettromme"
                        },
                        new
                        {
                            Id = 20,
                            DateCreated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(5308),
                            DateUpdated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(5310),
                            Description = "Informasjon",
                            EnergyKcalPer100g = 0.0,
                            HasImage = false,
                            IsNutritionallyVerified = false,
                            IsPublished = true,
                            Name = "Seterrømme",
                            Type = 2,
                            Url = "seterromme"
                        },
                        new
                        {
                            Id = 21,
                            DateCreated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(5332),
                            DateUpdated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(5334),
                            Description = "Informasjon",
                            EnergyKcalPer100g = 0.0,
                            HasImage = false,
                            IsNutritionallyVerified = false,
                            IsPublished = true,
                            Name = "Rømmekolle",
                            Type = 2,
                            Url = "rommekolle"
                        },
                        new
                        {
                            Id = 22,
                            DateCreated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(5340),
                            DateUpdated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(5342),
                            Description = "Informasjon",
                            EnergyKcalPer100g = 0.0,
                            HasImage = false,
                            IsNutritionallyVerified = false,
                            IsPublished = true,
                            Name = "Kvarg",
                            Type = 2,
                            Url = "kvarg"
                        },
                        new
                        {
                            Id = 23,
                            DateCreated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(5348),
                            DateUpdated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(5350),
                            Description = "Egg fra høne. Oppskrifter tar som regel utgangspunkt i middels store egg. Dersom eggene du har er spesielt små eller store kan du måtte justere antallet.",
                            EnergyKcalPer100g = 0.0,
                            HasImage = false,
                            IsNutritionallyVerified = false,
                            IsPublished = true,
                            Name = "Egg",
                            Type = 8,
                            Url = "egg"
                        },
                        new
                        {
                            Id = 24,
                            DateCreated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(5356),
                            DateUpdated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(5358),
                            Description = "Eggeplomme fra hønseegg. Oppskrifter tar som regel utgangspunkt i middels store egg. Dersom oppskriften oppgir eggeplommer i antall, og eggene du har er spesielt små eller store kan du måtte justere antallet.",
                            EnergyKcalPer100g = 0.0,
                            HasImage = false,
                            IsNutritionallyVerified = false,
                            IsPublished = true,
                            Name = "Eggeplomme",
                            Type = 8,
                            Url = "eggeplomme"
                        },
                        new
                        {
                            Id = 25,
                            DateCreated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(5364),
                            DateUpdated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(5366),
                            Description = "Eggehvite fra hønseegg. Oppskrifter tar som regel utgangspunkt i middels store egg. Dersom oppskriften oppgir eggehviter i antall, og eggene du har er spesielt små eller store kan du måtte justere antallet.",
                            EnergyKcalPer100g = 0.0,
                            HasImage = false,
                            IsNutritionallyVerified = false,
                            IsPublished = true,
                            Name = "Eggehvite",
                            Type = 8,
                            Url = "eggehvite"
                        },
                        new
                        {
                            Id = 26,
                            DateCreated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(5372),
                            DateUpdated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(5374),
                            Description = "Egg fra vaktel.",
                            EnergyKcalPer100g = 0.0,
                            HasImage = false,
                            IsNutritionallyVerified = false,
                            IsPublished = true,
                            Name = "Vaktelegg",
                            Type = 8,
                            Url = "vaktelegg"
                        },
                        new
                        {
                            Id = 27,
                            DateCreated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(5379),
                            DateUpdated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(5382),
                            Description = "Egg fra måke (måse).",
                            EnergyKcalPer100g = 0.0,
                            HasImage = false,
                            IsNutritionallyVerified = false,
                            IsPublished = true,
                            Name = "Måsegg",
                            Type = 8,
                            Url = "masegg"
                        },
                        new
                        {
                            Id = 28,
                            DateCreated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(5387),
                            DateUpdated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(5389),
                            Description = "Informasjon",
                            EnergyKcalPer100g = 0.0,
                            HasImage = false,
                            IsNutritionallyVerified = false,
                            IsPublished = true,
                            Name = "Salt",
                            Type = 14,
                            Url = "salt"
                        },
                        new
                        {
                            Id = 29,
                            DateCreated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(5395),
                            DateUpdated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(5397),
                            Description = "Informasjon",
                            EnergyKcalPer100g = 0.0,
                            HasImage = false,
                            IsNutritionallyVerified = false,
                            IsPublished = true,
                            Name = "Tomatketsjup",
                            Type = 14,
                            Url = "tomatketsjup"
                        },
                        new
                        {
                            Id = 30,
                            DateCreated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(5402),
                            DateUpdated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(5404),
                            Description = "Informasjon",
                            EnergyKcalPer100g = 0.0,
                            HasImage = false,
                            IsNutritionallyVerified = false,
                            IsPublished = true,
                            Name = "Søt sennep",
                            Type = 14,
                            Url = "sot-sennep"
                        },
                        new
                        {
                            Id = 31,
                            DateCreated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(5410),
                            DateUpdated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(5412),
                            Description = "Informasjon",
                            EnergyKcalPer100g = 0.0,
                            HasImage = false,
                            IsNutritionallyVerified = false,
                            IsPublished = true,
                            Name = "Sterk sennep",
                            Type = 14,
                            Url = "sterk-sennep"
                        },
                        new
                        {
                            Id = 32,
                            DateCreated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(5418),
                            DateUpdated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(5420),
                            Description = "Informasjon",
                            EnergyKcalPer100g = 0.0,
                            HasImage = false,
                            IsNutritionallyVerified = false,
                            IsPublished = true,
                            Name = "Dijonsennep",
                            Type = 14,
                            Url = "dijonsennep"
                        },
                        new
                        {
                            Id = 33,
                            DateCreated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(5426),
                            DateUpdated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(5428),
                            Description = "Informasjon",
                            EnergyKcalPer100g = 0.0,
                            HasImage = false,
                            IsNutritionallyVerified = false,
                            IsPublished = true,
                            Name = "Grov sennep",
                            Type = 14,
                            Url = "grov-sennep"
                        },
                        new
                        {
                            Id = 34,
                            DateCreated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(5436),
                            DateUpdated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(5438),
                            Description = "Informasjon",
                            EnergyKcalPer100g = 0.0,
                            HasImage = false,
                            IsNutritionallyVerified = false,
                            IsPublished = true,
                            Name = "Soyasaus",
                            Type = 14,
                            Url = "soyasaus"
                        },
                        new
                        {
                            Id = 35,
                            DateCreated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(5444),
                            DateUpdated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(5446),
                            Description = "Informasjon",
                            EnergyKcalPer100g = 0.0,
                            HasImage = false,
                            IsNutritionallyVerified = false,
                            IsPublished = true,
                            Name = "Saltredusert soyasaus",
                            Type = 14,
                            Url = "saltredusert-soyasaus"
                        },
                        new
                        {
                            Id = 36,
                            DateCreated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(5466),
                            DateUpdated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(5468),
                            Description = "35%",
                            EnergyKcalPer100g = 0.0,
                            HasImage = false,
                            IsNutritionallyVerified = false,
                            IsPublished = true,
                            Name = "Eddikessens",
                            Type = 14,
                            Url = "eddikessens"
                        },
                        new
                        {
                            Id = 37,
                            DateCreated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(5474),
                            DateUpdated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(5476),
                            Description = "7%",
                            EnergyKcalPer100g = 0.0,
                            HasImage = false,
                            IsNutritionallyVerified = false,
                            IsPublished = true,
                            Name = "Klar eddik",
                            Type = 14,
                            Url = "klar-eddik"
                        },
                        new
                        {
                            Id = 38,
                            DateCreated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(5481),
                            DateUpdated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(5483),
                            Description = "7%",
                            EnergyKcalPer100g = 0.0,
                            HasImage = false,
                            IsNutritionallyVerified = false,
                            IsPublished = true,
                            Name = "Brun eddik",
                            Type = 14,
                            Url = "brun-eddik"
                        },
                        new
                        {
                            Id = 39,
                            DateCreated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(5488),
                            DateUpdated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(5490),
                            Description = "Informasjon",
                            EnergyKcalPer100g = 0.0,
                            HasImage = false,
                            IsNutritionallyVerified = false,
                            IsPublished = true,
                            Name = "Eplecidereddik",
                            Type = 14,
                            Url = "eplecidereddik"
                        },
                        new
                        {
                            Id = 40,
                            DateCreated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(5496),
                            DateUpdated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(5498),
                            Description = "Informasjon",
                            EnergyKcalPer100g = 0.0,
                            HasImage = false,
                            IsNutritionallyVerified = false,
                            IsPublished = true,
                            Name = "Hvitvinseddik",
                            Type = 14,
                            Url = "hvitvinseddik"
                        },
                        new
                        {
                            Id = 41,
                            DateCreated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(5503),
                            DateUpdated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(5505),
                            Description = "Informasjon",
                            EnergyKcalPer100g = 0.0,
                            HasImage = false,
                            IsNutritionallyVerified = false,
                            IsPublished = true,
                            Name = "Rødvinseddik",
                            Type = 14,
                            Url = "rodvinseddik"
                        },
                        new
                        {
                            Id = 42,
                            DateCreated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(5511),
                            DateUpdated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(5513),
                            Description = "Informasjon",
                            EnergyKcalPer100g = 0.0,
                            HasImage = false,
                            IsNutritionallyVerified = false,
                            IsPublished = true,
                            Name = "Sitrondråper",
                            Type = 14,
                            Url = "sitrondråper"
                        },
                        new
                        {
                            Id = 43,
                            DateCreated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(5518),
                            DateUpdated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(5520),
                            Description = "Informasjon",
                            EnergyKcalPer100g = 0.0,
                            HasImage = false,
                            IsNutritionallyVerified = false,
                            IsPublished = true,
                            Name = "Smør",
                            Type = 2,
                            Url = "smor"
                        },
                        new
                        {
                            Id = 44,
                            DateCreated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(5526),
                            DateUpdated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(5528),
                            Description = "Informasjon",
                            EnergyKcalPer100g = 0.0,
                            HasImage = false,
                            IsNutritionallyVerified = false,
                            IsPublished = true,
                            Name = "Margarin",
                            Type = 3,
                            Url = "margarin"
                        },
                        new
                        {
                            Id = 45,
                            DateCreated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(5534),
                            DateUpdated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(5536),
                            Description = "Informasjon",
                            EnergyKcalPer100g = 0.0,
                            HasImage = false,
                            IsNutritionallyVerified = false,
                            IsPublished = true,
                            Name = "Rapsolje",
                            Type = 15,
                            Url = "rapsolje"
                        },
                        new
                        {
                            Id = 46,
                            DateCreated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(5541),
                            DateUpdated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(5544),
                            Description = "Informasjon",
                            EnergyKcalPer100g = 0.0,
                            HasImage = false,
                            IsNutritionallyVerified = false,
                            IsPublished = true,
                            Name = "Maisolje",
                            Type = 15,
                            Url = "maisolje"
                        },
                        new
                        {
                            Id = 47,
                            DateCreated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(5549),
                            DateUpdated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(5551),
                            Description = "Informasjon",
                            EnergyKcalPer100g = 0.0,
                            HasImage = false,
                            IsNutritionallyVerified = false,
                            IsPublished = true,
                            Name = "Olivenolje",
                            Type = 15,
                            Url = "Olivenolje"
                        },
                        new
                        {
                            Id = 48,
                            DateCreated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(5557),
                            DateUpdated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(5559),
                            Description = "Informasjon",
                            EnergyKcalPer100g = 0.0,
                            HasImage = false,
                            IsNutritionallyVerified = false,
                            IsPublished = true,
                            Name = "Sesamolje",
                            Type = 15,
                            Url = "sesamolje"
                        },
                        new
                        {
                            Id = 49,
                            DateCreated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(5565),
                            DateUpdated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(5567),
                            Description = "Informasjon",
                            EnergyKcalPer100g = 0.0,
                            HasImage = false,
                            IsNutritionallyVerified = false,
                            IsPublished = true,
                            Name = "Kokosolje",
                            Type = 15,
                            Url = "kokosolje"
                        },
                        new
                        {
                            Id = 50,
                            DateCreated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(5640),
                            DateUpdated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(5643),
                            Description = "Informasjon",
                            EnergyKcalPer100g = 0.0,
                            HasImage = false,
                            IsNutritionallyVerified = false,
                            IsPublished = true,
                            Name = "Frityrolje",
                            Type = 15,
                            Url = "frityrolje"
                        },
                        new
                        {
                            Id = 51,
                            DateCreated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(5649),
                            DateUpdated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(5651),
                            Description = "Informasjon",
                            EnergyKcalPer100g = 0.0,
                            HasImage = false,
                            IsNutritionallyVerified = false,
                            IsPublished = true,
                            Name = "Sukker",
                            Type = 13,
                            Url = "sukker"
                        },
                        new
                        {
                            Id = 52,
                            DateCreated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(5657),
                            DateUpdated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(5659),
                            Description = "Informasjon",
                            EnergyKcalPer100g = 0.0,
                            HasImage = false,
                            IsNutritionallyVerified = false,
                            IsPublished = true,
                            Name = "Blåbær",
                            Type = 1,
                            Url = "blabar"
                        },
                        new
                        {
                            Id = 53,
                            DateCreated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(5665),
                            DateUpdated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(5667),
                            Description = "Informasjon",
                            EnergyKcalPer100g = 0.0,
                            HasImage = false,
                            IsNutritionallyVerified = false,
                            IsPublished = true,
                            Name = "Jordbær",
                            Type = 1,
                            Url = "jordbar"
                        },
                        new
                        {
                            Id = 54,
                            DateCreated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(5673),
                            DateUpdated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(5675),
                            Description = "Informasjon",
                            EnergyKcalPer100g = 0.0,
                            HasImage = false,
                            IsNutritionallyVerified = false,
                            IsPublished = true,
                            Name = "Bringebær",
                            Type = 1,
                            Url = "bringebar"
                        },
                        new
                        {
                            Id = 55,
                            DateCreated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(5680),
                            DateUpdated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(5682),
                            Description = "Informasjon",
                            EnergyKcalPer100g = 0.0,
                            HasImage = false,
                            IsNutritionallyVerified = false,
                            IsPublished = true,
                            Name = "Grønne epler",
                            Type = 1,
                            Url = "gronne-epler"
                        },
                        new
                        {
                            Id = 56,
                            DateCreated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(5688),
                            DateUpdated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(5690),
                            Description = "Informasjon",
                            EnergyKcalPer100g = 0.0,
                            HasImage = false,
                            IsNutritionallyVerified = false,
                            IsPublished = true,
                            Name = "Røde epler",
                            Type = 1,
                            Url = "rode-epler"
                        },
                        new
                        {
                            Id = 57,
                            DateCreated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(5696),
                            DateUpdated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(5698),
                            Description = "Informasjon",
                            EnergyKcalPer100g = 0.0,
                            HasImage = false,
                            IsNutritionallyVerified = false,
                            IsPublished = true,
                            Name = "Gule epler",
                            Type = 1,
                            Url = "gule-epler"
                        },
                        new
                        {
                            Id = 58,
                            DateCreated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(5704),
                            DateUpdated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(5706),
                            Description = "Informasjon",
                            EnergyKcalPer100g = 0.0,
                            HasImage = false,
                            IsNutritionallyVerified = false,
                            IsPublished = true,
                            Name = "Appelsin",
                            Type = 1,
                            Url = "appelsin"
                        },
                        new
                        {
                            Id = 59,
                            DateCreated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(5711),
                            DateUpdated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(5714),
                            Description = "Informasjon",
                            EnergyKcalPer100g = 0.0,
                            HasImage = false,
                            IsNutritionallyVerified = false,
                            IsPublished = true,
                            Name = "Sitron",
                            Type = 1,
                            Url = "sitron"
                        },
                        new
                        {
                            Id = 60,
                            DateCreated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(5720),
                            DateUpdated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(5722),
                            Description = "Informasjon",
                            EnergyKcalPer100g = 0.0,
                            HasImage = false,
                            IsNutritionallyVerified = false,
                            IsPublished = true,
                            Name = "Økologisk sitron",
                            Type = 1,
                            Url = "okologisk-sitron"
                        },
                        new
                        {
                            Id = 61,
                            DateCreated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(5728),
                            DateUpdated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(5730),
                            Description = "Informasjon",
                            EnergyKcalPer100g = 0.0,
                            HasImage = false,
                            IsNutritionallyVerified = false,
                            IsPublished = true,
                            Name = "Lime",
                            Type = 1,
                            Url = "lime"
                        },
                        new
                        {
                            Id = 62,
                            DateCreated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(5736),
                            DateUpdated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(5738),
                            Description = "Informasjon",
                            EnergyKcalPer100g = 0.0,
                            HasImage = false,
                            IsNutritionallyVerified = false,
                            IsPublished = true,
                            Name = "Hermetiske mandarinbåter",
                            Type = 1,
                            Url = "hermetiske-mandarinbater"
                        },
                        new
                        {
                            Id = 63,
                            DateCreated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(5744),
                            DateUpdated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(5746),
                            Description = "Informasjon",
                            EnergyKcalPer100g = 0.0,
                            HasImage = false,
                            IsNutritionallyVerified = false,
                            IsPublished = true,
                            Name = "Hermetiske pærer",
                            Type = 1,
                            Url = "hermetiske-parer"
                        },
                        new
                        {
                            Id = 64,
                            DateCreated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(5767),
                            DateUpdated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(5769),
                            Description = "Informasjon",
                            EnergyKcalPer100g = 0.0,
                            HasImage = false,
                            IsNutritionallyVerified = false,
                            IsPublished = true,
                            Name = "Hermetiske fersken",
                            Type = 1,
                            Url = "hermetiske-fersken"
                        },
                        new
                        {
                            Id = 65,
                            DateCreated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(5775),
                            DateUpdated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(5777),
                            Description = "Informasjon",
                            EnergyKcalPer100g = 0.0,
                            HasImage = false,
                            IsNutritionallyVerified = false,
                            IsPublished = true,
                            Name = "Banan",
                            Type = 1,
                            Url = "banan"
                        },
                        new
                        {
                            Id = 66,
                            DateCreated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(5785),
                            DateUpdated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(5787),
                            Description = "Informasjon",
                            EnergyKcalPer100g = 0.0,
                            HasImage = false,
                            IsNutritionallyVerified = false,
                            IsPublished = true,
                            Name = "Klementin",
                            Type = 1,
                            Url = "klementin"
                        },
                        new
                        {
                            Id = 67,
                            DateCreated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(5792),
                            DateUpdated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(5794),
                            Description = "Informasjon",
                            EnergyKcalPer100g = 0.0,
                            HasImage = false,
                            IsNutritionallyVerified = false,
                            IsPublished = true,
                            Name = "Blå druer",
                            Type = 1,
                            Url = "bla-druer"
                        },
                        new
                        {
                            Id = 68,
                            DateCreated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(5800),
                            DateUpdated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(5802),
                            Description = "Informasjon",
                            EnergyKcalPer100g = 0.0,
                            HasImage = false,
                            IsNutritionallyVerified = false,
                            IsPublished = true,
                            Name = "Grønne druer",
                            Type = 1,
                            Url = "gronne-druer"
                        },
                        new
                        {
                            Id = 69,
                            DateCreated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(5807),
                            DateUpdated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(5809),
                            Description = "Informasjon",
                            EnergyKcalPer100g = 0.0,
                            HasImage = false,
                            IsNutritionallyVerified = false,
                            IsPublished = true,
                            Name = "Rosiner",
                            Type = 1,
                            Url = "rosiner"
                        },
                        new
                        {
                            Id = 70,
                            DateCreated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(5815),
                            DateUpdated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(5817),
                            Description = "Informasjon",
                            EnergyKcalPer100g = 0.0,
                            HasImage = false,
                            IsNutritionallyVerified = false,
                            IsPublished = true,
                            Name = "Korinter",
                            Type = 1,
                            Url = "korinter"
                        },
                        new
                        {
                            Id = 71,
                            DateCreated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(5823),
                            DateUpdated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(5825),
                            Description = "Informasjon",
                            EnergyKcalPer100g = 0.0,
                            HasImage = false,
                            IsNutritionallyVerified = false,
                            IsPublished = true,
                            Name = "Fiskesaus",
                            Type = 14,
                            Url = "fiskesaus"
                        },
                        new
                        {
                            Id = 72,
                            DateCreated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(5831),
                            DateUpdated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(5833),
                            Description = "Informasjon",
                            EnergyKcalPer100g = 0.0,
                            HasImage = false,
                            IsNutritionallyVerified = false,
                            IsPublished = true,
                            Name = "Kokosmelk",
                            Type = 16,
                            Url = "kokosmelk"
                        },
                        new
                        {
                            Id = 73,
                            DateCreated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(5838),
                            DateUpdated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(5840),
                            Description = "Informasjon",
                            EnergyKcalPer100g = 0.0,
                            HasImage = false,
                            IsNutritionallyVerified = false,
                            IsPublished = true,
                            Name = "Kokosmelk, lett",
                            Type = 16,
                            Url = "kokosmelk-lett"
                        },
                        new
                        {
                            Id = 74,
                            DateCreated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(5846),
                            DateUpdated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(5849),
                            Description = "Informasjon",
                            EnergyKcalPer100g = 0.0,
                            HasImage = false,
                            IsNutritionallyVerified = false,
                            IsPublished = true,
                            Name = "Kokoskrem",
                            Type = 16,
                            Url = "kokoskrem"
                        },
                        new
                        {
                            Id = 75,
                            DateCreated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(5855),
                            DateUpdated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(5857),
                            Description = "Informasjon",
                            EnergyKcalPer100g = 0.0,
                            HasImage = false,
                            IsNutritionallyVerified = false,
                            IsPublished = true,
                            Name = "Kokosmasse",
                            Type = 16,
                            Url = "kokosmasse"
                        },
                        new
                        {
                            Id = 76,
                            DateCreated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(5863),
                            DateUpdated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(5865),
                            Description = "Informasjon",
                            EnergyKcalPer100g = 0.0,
                            HasImage = false,
                            IsNutritionallyVerified = false,
                            IsPublished = true,
                            Name = "Sitrongress",
                            Type = 12,
                            Url = "sitrongress"
                        },
                        new
                        {
                            Id = 77,
                            DateCreated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(5871),
                            DateUpdated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(5873),
                            Description = "Informasjon",
                            EnergyKcalPer100g = 0.0,
                            HasImage = false,
                            IsNutritionallyVerified = false,
                            IsPublished = true,
                            Name = "Rød currypasta",
                            Type = 14,
                            Url = "rod-currypasta"
                        },
                        new
                        {
                            Id = 78,
                            DateCreated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(5879),
                            DateUpdated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(5881),
                            Description = "Informasjon",
                            EnergyKcalPer100g = 0.0,
                            HasImage = false,
                            IsNutritionallyVerified = false,
                            IsPublished = true,
                            Name = "Grønn currypasta",
                            Type = 14,
                            Url = "gronn-currypasta"
                        },
                        new
                        {
                            Id = 79,
                            DateCreated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(5898),
                            DateUpdated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(5900),
                            Description = "Informasjon",
                            EnergyKcalPer100g = 0.0,
                            HasImage = false,
                            IsNutritionallyVerified = false,
                            IsPublished = true,
                            Name = "Gul currypasta",
                            Type = 14,
                            Url = "gul-currypasta"
                        },
                        new
                        {
                            Id = 80,
                            DateCreated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(5905),
                            DateUpdated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(5907),
                            Description = "Informasjon",
                            EnergyKcalPer100g = 0.0,
                            HasImage = false,
                            IsNutritionallyVerified = false,
                            IsPublished = true,
                            Name = "Galangal",
                            Type = 12,
                            Url = "galangal"
                        },
                        new
                        {
                            Id = 81,
                            DateCreated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(5989),
                            DateUpdated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(5992),
                            Description = "Informasjon",
                            EnergyKcalPer100g = 0.0,
                            HasImage = false,
                            IsNutritionallyVerified = false,
                            IsPublished = true,
                            Name = "Gul løk",
                            Type = 0,
                            Url = "gul-lok"
                        },
                        new
                        {
                            Id = 82,
                            DateCreated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(5998),
                            DateUpdated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(6000),
                            Description = "Informasjon",
                            EnergyKcalPer100g = 0.0,
                            HasImage = false,
                            IsNutritionallyVerified = false,
                            IsPublished = true,
                            Name = "Rødløk",
                            Type = 0,
                            Url = "rodlok"
                        },
                        new
                        {
                            Id = 83,
                            DateCreated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(6006),
                            DateUpdated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(6008),
                            Description = "Informasjon",
                            EnergyKcalPer100g = 0.0,
                            HasImage = false,
                            IsNutritionallyVerified = false,
                            IsPublished = true,
                            Name = "Chalottløk",
                            Type = 0,
                            Url = "chalottlok"
                        },
                        new
                        {
                            Id = 84,
                            DateCreated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(6014),
                            DateUpdated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(6016),
                            Description = "Informasjon",
                            EnergyKcalPer100g = 0.0,
                            HasImage = false,
                            IsNutritionallyVerified = false,
                            IsPublished = true,
                            Name = "Hvitløk",
                            Type = 0,
                            Url = "hvitlok"
                        },
                        new
                        {
                            Id = 85,
                            DateCreated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(6022),
                            DateUpdated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(6024),
                            Description = "Informasjon",
                            EnergyKcalPer100g = 0.0,
                            HasImage = false,
                            IsNutritionallyVerified = false,
                            IsPublished = true,
                            Name = "Salatløk",
                            Type = 0,
                            Url = "salatlok"
                        },
                        new
                        {
                            Id = 86,
                            DateCreated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(6030),
                            DateUpdated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(6032),
                            Description = "Informasjon",
                            EnergyKcalPer100g = 0.0,
                            HasImage = false,
                            IsNutritionallyVerified = false,
                            IsPublished = true,
                            Name = "Vårløk",
                            Type = 0,
                            Url = "varlok"
                        },
                        new
                        {
                            Id = 87,
                            DateCreated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(6038),
                            DateUpdated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(6040),
                            Description = "Informasjon",
                            EnergyKcalPer100g = 0.0,
                            HasImage = false,
                            IsNutritionallyVerified = false,
                            IsPublished = true,
                            Name = "Purre",
                            Type = 0,
                            Url = "purre"
                        },
                        new
                        {
                            Id = 88,
                            DateCreated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(6047),
                            DateUpdated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(6049),
                            Description = "Informasjon",
                            EnergyKcalPer100g = 0.0,
                            HasImage = false,
                            IsNutritionallyVerified = false,
                            IsPublished = true,
                            Name = "Kyllingkraft",
                            Type = 17,
                            Url = "kyllingkraft"
                        },
                        new
                        {
                            Id = 89,
                            DateCreated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(6055),
                            DateUpdated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(6057),
                            Description = "Informasjon",
                            EnergyKcalPer100g = 0.0,
                            HasImage = false,
                            IsNutritionallyVerified = false,
                            IsPublished = true,
                            Name = "Storfekraft",
                            Type = 17,
                            Url = "storfekraft"
                        },
                        new
                        {
                            Id = 90,
                            DateCreated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(6063),
                            DateUpdated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(6065),
                            Description = "Informasjon",
                            EnergyKcalPer100g = 0.0,
                            HasImage = false,
                            IsNutritionallyVerified = false,
                            IsPublished = true,
                            Name = "Fiskekraft",
                            Type = 17,
                            Url = "fiskekraft"
                        },
                        new
                        {
                            Id = 91,
                            DateCreated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(6070),
                            DateUpdated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(6072),
                            Description = "Informasjon",
                            EnergyKcalPer100g = 0.0,
                            HasImage = false,
                            IsNutritionallyVerified = false,
                            IsPublished = true,
                            Name = "Grønnsakskraft",
                            Type = 17,
                            Url = "gronnsakskraft"
                        },
                        new
                        {
                            Id = 92,
                            DateCreated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(6078),
                            DateUpdated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(6080),
                            Description = "Den vanlige, røde chilien du kjenner fra dagligvarebutikken din.",
                            EnergyKcalPer100g = 0.0,
                            HasImage = false,
                            IsNutritionallyVerified = false,
                            IsPublished = true,
                            Name = "Chili, serrano",
                            Type = 0,
                            Url = "chili-serrano"
                        },
                        new
                        {
                            Id = 93,
                            DateCreated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(6099),
                            DateUpdated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(6101),
                            Description = "En sterkere chili.",
                            EnergyKcalPer100g = 0.0,
                            HasImage = false,
                            IsNutritionallyVerified = false,
                            IsPublished = true,
                            Name = "Chili, habanero",
                            Type = 0,
                            Url = "chili-habanero"
                        },
                        new
                        {
                            Id = 94,
                            DateCreated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(6107),
                            DateUpdated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(6109),
                            Description = "Også kalt thai-chili. Sterkere enn serrano.",
                            EnergyKcalPer100g = 0.0,
                            HasImage = false,
                            IsNutritionallyVerified = false,
                            IsPublished = true,
                            Name = "Chili, birds eye",
                            Type = 0,
                            Url = "chili-birds-eye"
                        },
                        new
                        {
                            Id = 95,
                            DateCreated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(6114),
                            DateUpdated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(6116),
                            Description = "Informasjon",
                            EnergyKcalPer100g = 0.0,
                            HasImage = false,
                            IsNutritionallyVerified = false,
                            IsPublished = true,
                            Name = "Champignon, fersk",
                            Type = 0,
                            Url = "champignon-fersk"
                        },
                        new
                        {
                            Id = 96,
                            DateCreated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(6122),
                            DateUpdated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(6124),
                            Description = "Informasjon",
                            EnergyKcalPer100g = 0.0,
                            HasImage = false,
                            IsNutritionallyVerified = false,
                            IsPublished = true,
                            Name = "Champignon, hermetisk",
                            Type = 0,
                            Url = "champignon-hermetisk"
                        },
                        new
                        {
                            Id = 97,
                            DateCreated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(6129),
                            DateUpdated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(6131),
                            Description = "Informasjon",
                            EnergyKcalPer100g = 0.0,
                            HasImage = false,
                            IsNutritionallyVerified = false,
                            IsPublished = true,
                            Name = "Aromasopp, fersk",
                            Type = 0,
                            Url = "aromasopp-fersk"
                        },
                        new
                        {
                            Id = 98,
                            DateCreated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(6137),
                            DateUpdated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(6139),
                            Description = "Informasjon",
                            EnergyKcalPer100g = 0.0,
                            HasImage = false,
                            IsNutritionallyVerified = false,
                            IsPublished = true,
                            Name = "Aromasopp, tørket",
                            Type = 0,
                            Url = "aromasopp-torket"
                        },
                        new
                        {
                            Id = 99,
                            DateCreated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(6144),
                            DateUpdated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(6146),
                            Description = "Informasjon",
                            EnergyKcalPer100g = 0.0,
                            HasImage = false,
                            IsNutritionallyVerified = false,
                            IsPublished = true,
                            Name = "Margarin",
                            Type = 3,
                            Url = "margarin"
                        },
                        new
                        {
                            Id = 100,
                            DateCreated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(6152),
                            DateUpdated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(6154),
                            Description = "Informasjon",
                            EnergyKcalPer100g = 0.0,
                            HasImage = false,
                            IsNutritionallyVerified = false,
                            IsPublished = true,
                            Name = "Kylling, hel grillet",
                            Type = 7,
                            Url = "kylling-hel-grillet"
                        },
                        new
                        {
                            Id = 101,
                            DateCreated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(6159),
                            DateUpdated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(6162),
                            Description = "Informasjon",
                            EnergyKcalPer100g = 0.0,
                            HasImage = false,
                            IsNutritionallyVerified = false,
                            IsPublished = true,
                            Name = "Kylling, hel fersk",
                            Type = 7,
                            Url = "kylling-hel-fersk"
                        },
                        new
                        {
                            Id = 102,
                            DateCreated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(6167),
                            DateUpdated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(6169),
                            Description = "Informasjon",
                            EnergyKcalPer100g = 0.0,
                            HasImage = false,
                            IsNutritionallyVerified = false,
                            IsPublished = true,
                            Name = "Kyllinglår, grillet",
                            Type = 7,
                            Url = "kyllinglar-grillet"
                        },
                        new
                        {
                            Id = 103,
                            DateCreated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(6175),
                            DateUpdated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(6177),
                            Description = "Informasjon",
                            EnergyKcalPer100g = 0.0,
                            HasImage = false,
                            IsNutritionallyVerified = false,
                            IsPublished = true,
                            Name = "Kyllinglår, fersk",
                            Type = 7,
                            Url = "kyllinglar-fersk"
                        },
                        new
                        {
                            Id = 104,
                            DateCreated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(6183),
                            DateUpdated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(6185),
                            Description = "Informasjon",
                            EnergyKcalPer100g = 0.0,
                            HasImage = false,
                            IsNutritionallyVerified = false,
                            IsPublished = true,
                            Name = "Kyllinglår, frossen",
                            Type = 7,
                            Url = "kyllinglar-frossen"
                        },
                        new
                        {
                            Id = 105,
                            DateCreated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(6191),
                            DateUpdated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(6193),
                            Description = "Informasjon",
                            EnergyKcalPer100g = 0.0,
                            HasImage = false,
                            IsNutritionallyVerified = false,
                            IsPublished = true,
                            Name = "Kyllingvinger, grillet",
                            Type = 7,
                            Url = "kyllingvinger-grillet"
                        },
                        new
                        {
                            Id = 106,
                            DateCreated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(6198),
                            DateUpdated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(6200),
                            Description = "Informasjon",
                            EnergyKcalPer100g = 0.0,
                            HasImage = false,
                            IsNutritionallyVerified = false,
                            IsPublished = true,
                            Name = "Kyllingvinger, fersk",
                            Type = 7,
                            Url = "kyllingvinger-fersk"
                        },
                        new
                        {
                            Id = 107,
                            DateCreated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(6217),
                            DateUpdated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(6219),
                            Description = "Informasjon",
                            EnergyKcalPer100g = 0.0,
                            HasImage = false,
                            IsNutritionallyVerified = false,
                            IsPublished = true,
                            Name = "Kyllingvinger, frossen",
                            Type = 7,
                            Url = "kyllingvinger-frossen"
                        },
                        new
                        {
                            Id = 108,
                            DateCreated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(6225),
                            DateUpdated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(6227),
                            Description = "Informasjon",
                            EnergyKcalPer100g = 0.0,
                            HasImage = false,
                            IsNutritionallyVerified = false,
                            IsPublished = true,
                            Name = "Kylling lårfilet",
                            Type = 7,
                            Url = "kylling-larfilet"
                        },
                        new
                        {
                            Id = 109,
                            DateCreated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(6233),
                            DateUpdated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(6235),
                            Description = "Informasjon",
                            EnergyKcalPer100g = 0.0,
                            HasImage = false,
                            IsNutritionallyVerified = false,
                            IsPublished = true,
                            Name = "Kylling brystfilet",
                            Type = 7,
                            Url = "kylling-brystfilet"
                        },
                        new
                        {
                            Id = 110,
                            DateCreated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(6240),
                            DateUpdated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(6242),
                            Description = "Informasjon",
                            EnergyKcalPer100g = 0.0,
                            HasImage = false,
                            IsNutritionallyVerified = false,
                            IsPublished = true,
                            Name = "Koriander, fersk",
                            Type = 12,
                            Url = "koriander-fersk"
                        },
                        new
                        {
                            Id = 111,
                            DateCreated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(6248),
                            DateUpdated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(6250),
                            Description = "Informasjon",
                            EnergyKcalPer100g = 0.0,
                            HasImage = false,
                            IsNutritionallyVerified = false,
                            IsPublished = true,
                            Name = "Dill, fersk",
                            Type = 12,
                            Url = "dill-fersk"
                        },
                        new
                        {
                            Id = 112,
                            DateCreated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(6255),
                            DateUpdated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(6257),
                            Description = "Informasjon",
                            EnergyKcalPer100g = 0.0,
                            HasImage = false,
                            IsNutritionallyVerified = false,
                            IsPublished = true,
                            Name = "Gressløk, fersk",
                            Type = 12,
                            Url = "gresslok-fersk"
                        },
                        new
                        {
                            Id = 113,
                            DateCreated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(6263),
                            DateUpdated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(6265),
                            Description = "Informasjon",
                            EnergyKcalPer100g = 0.0,
                            HasImage = false,
                            IsNutritionallyVerified = false,
                            IsPublished = true,
                            Name = "Basilikum, fersk",
                            Type = 12,
                            Url = "basilikum-fersk"
                        },
                        new
                        {
                            Id = 114,
                            DateCreated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(6270),
                            DateUpdated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(6272),
                            Description = "Informasjon",
                            EnergyKcalPer100g = 0.0,
                            HasImage = false,
                            IsNutritionallyVerified = false,
                            IsPublished = true,
                            Name = "Thaibasilikum, fersk",
                            Type = 12,
                            Url = "thaibasilikum-fersk"
                        },
                        new
                        {
                            Id = 115,
                            DateCreated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(6278),
                            DateUpdated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(6280),
                            Description = "Informasjon",
                            EnergyKcalPer100g = 0.0,
                            HasImage = false,
                            IsNutritionallyVerified = false,
                            IsPublished = true,
                            Name = "Sort pepper, hel",
                            Type = 12,
                            Url = "sort-pepper-hel"
                        },
                        new
                        {
                            Id = 116,
                            DateCreated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(6315),
                            DateUpdated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(6317),
                            Description = "Informasjon",
                            EnergyKcalPer100g = 0.0,
                            HasImage = false,
                            IsNutritionallyVerified = false,
                            IsPublished = true,
                            Name = "Sort pepper, grovmalt",
                            Type = 12,
                            Url = "sort-pepper-grovmalt"
                        },
                        new
                        {
                            Id = 117,
                            DateCreated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(6323),
                            DateUpdated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(6325),
                            Description = "Informasjon",
                            EnergyKcalPer100g = 0.0,
                            HasImage = false,
                            IsNutritionallyVerified = false,
                            IsPublished = true,
                            Name = "Sort pepper, malt",
                            Type = 12,
                            Url = "sort-pepper-malt"
                        },
                        new
                        {
                            Id = 118,
                            DateCreated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(6331),
                            DateUpdated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(6333),
                            Description = "Informasjon",
                            EnergyKcalPer100g = 0.0,
                            HasImage = false,
                            IsNutritionallyVerified = false,
                            IsPublished = true,
                            Name = "Hvit pepper, hel",
                            Type = 12,
                            Url = "hvit-pepper-hel"
                        },
                        new
                        {
                            Id = 119,
                            DateCreated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(6339),
                            DateUpdated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(6341),
                            Description = "Informasjon",
                            EnergyKcalPer100g = 0.0,
                            HasImage = false,
                            IsNutritionallyVerified = false,
                            IsPublished = true,
                            Name = "Hvit pepper, grovmalt",
                            Type = 12,
                            Url = "hvit-pepper-grovmalt"
                        },
                        new
                        {
                            Id = 120,
                            DateCreated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(6346),
                            DateUpdated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(6349),
                            Description = "Informasjon",
                            EnergyKcalPer100g = 0.0,
                            HasImage = false,
                            IsNutritionallyVerified = false,
                            IsPublished = true,
                            Name = "Hvit pepper, malt",
                            Type = 12,
                            Url = "hvit-pepper-malt"
                        },
                        new
                        {
                            Id = 121,
                            DateCreated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(6354),
                            DateUpdated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(6356),
                            Description = "Informasjon",
                            EnergyKcalPer100g = 0.0,
                            HasImage = false,
                            IsNutritionallyVerified = false,
                            IsPublished = true,
                            Name = "Karri",
                            Type = 12,
                            Url = "karri"
                        },
                        new
                        {
                            Id = 122,
                            DateCreated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(6374),
                            DateUpdated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(6377),
                            Description = "Informasjon",
                            EnergyKcalPer100g = 0.0,
                            HasImage = false,
                            IsNutritionallyVerified = false,
                            IsPublished = true,
                            Name = "Kanel, hel",
                            Type = 12,
                            Url = "kanel-hel"
                        },
                        new
                        {
                            Id = 123,
                            DateCreated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(6383),
                            DateUpdated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(6385),
                            Description = "Informasjon",
                            EnergyKcalPer100g = 0.0,
                            HasImage = false,
                            IsNutritionallyVerified = false,
                            IsPublished = true,
                            Name = "Kanel, malt",
                            Type = 12,
                            Url = "kanel-malt"
                        },
                        new
                        {
                            Id = 124,
                            DateCreated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(6390),
                            DateUpdated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(6392),
                            Description = "Informasjon",
                            EnergyKcalPer100g = 0.0,
                            HasImage = false,
                            IsNutritionallyVerified = false,
                            IsPublished = true,
                            Name = "Kardemomme",
                            Type = 12,
                            Url = "kardemomme"
                        },
                        new
                        {
                            Id = 125,
                            DateCreated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(6398),
                            DateUpdated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(6400),
                            Description = "Informasjon",
                            EnergyKcalPer100g = 0.0,
                            HasImage = false,
                            IsNutritionallyVerified = false,
                            IsPublished = true,
                            Name = "Hvitløkspulver",
                            Type = 12,
                            Url = "hvitlokspulver"
                        },
                        new
                        {
                            Id = 126,
                            DateCreated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(6406),
                            DateUpdated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(6408),
                            Description = "Informasjon",
                            EnergyKcalPer100g = 0.0,
                            HasImage = false,
                            IsNutritionallyVerified = false,
                            IsPublished = true,
                            Name = "Chilipulver",
                            Type = 12,
                            Url = "chilipulver"
                        },
                        new
                        {
                            Id = 127,
                            DateCreated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(6413),
                            DateUpdated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(6415),
                            Description = "Informasjon",
                            EnergyKcalPer100g = 0.0,
                            HasImage = false,
                            IsNutritionallyVerified = false,
                            IsPublished = true,
                            Name = "Paprikapulver",
                            Type = 12,
                            Url = "paprikapulver"
                        },
                        new
                        {
                            Id = 128,
                            DateCreated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(6420),
                            DateUpdated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(6422),
                            Description = "Informasjon",
                            EnergyKcalPer100g = 0.0,
                            HasImage = false,
                            IsNutritionallyVerified = false,
                            IsPublished = true,
                            Name = "Paprikapulver, røkt",
                            Type = 12,
                            Url = "paprikapulver-rokt"
                        },
                        new
                        {
                            Id = 129,
                            DateCreated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(6428),
                            DateUpdated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(6430),
                            Description = "Informasjon",
                            EnergyKcalPer100g = 0.0,
                            HasImage = false,
                            IsNutritionallyVerified = false,
                            IsPublished = true,
                            Name = "Rosmarin, tørket",
                            Type = 12,
                            Url = "rosmarin-torket"
                        },
                        new
                        {
                            Id = 130,
                            DateCreated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(6438),
                            DateUpdated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(6440),
                            Description = "Informasjon",
                            EnergyKcalPer100g = 0.0,
                            HasImage = false,
                            IsNutritionallyVerified = false,
                            IsPublished = true,
                            Name = "Dill, tørket",
                            Type = 12,
                            Url = "dill-torket"
                        },
                        new
                        {
                            Id = 131,
                            DateCreated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(6446),
                            DateUpdated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(6448),
                            Description = "Informasjon",
                            EnergyKcalPer100g = 0.0,
                            HasImage = false,
                            IsNutritionallyVerified = false,
                            IsPublished = true,
                            Name = "Oregano, tørket",
                            Type = 12,
                            Url = "oregano-torket"
                        },
                        new
                        {
                            Id = 132,
                            DateCreated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(6454),
                            DateUpdated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(6456),
                            Description = "Informasjon",
                            EnergyKcalPer100g = 0.0,
                            HasImage = false,
                            IsNutritionallyVerified = false,
                            IsPublished = true,
                            Name = "Basilikum, tørket",
                            Type = 12,
                            Url = "basilikum-torket"
                        },
                        new
                        {
                            Id = 133,
                            DateCreated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(6462),
                            DateUpdated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(6464),
                            Description = "Latin: Cuminum cyminum. Engelsk: Cumin eller Roman caraway. Spisskum kan også kalles spisskummen eller spisskarve, og er ikke det samme som karve.",
                            EnergyKcalPer100g = 0.0,
                            HasImage = false,
                            IsNutritionallyVerified = false,
                            IsPublished = true,
                            Name = "Spisskum",
                            Type = 12,
                            Url = "spisskum"
                        },
                        new
                        {
                            Id = 134,
                            DateCreated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(6469),
                            DateUpdated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(6471),
                            Description = "Karve er ikke det samme som spisskum/spisskummen/spisskarve.",
                            EnergyKcalPer100g = 0.0,
                            HasImage = false,
                            IsNutritionallyVerified = false,
                            IsPublished = true,
                            Name = "Karve",
                            Type = 12,
                            Url = "karve"
                        });
                });

            modelBuilder.Entity("MenuPlanner.Models.Entities.IngredientAllergen", b =>
                {
                    b.Property<int>("IngredientId")
                        .HasColumnType("int");

                    b.Property<int>("AllergenId")
                        .HasColumnType("int");

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.HasKey("IngredientId", "AllergenId");

                    b.HasIndex("AllergenId");

                    b.ToTable("IngredientAllergens");

                    b.HasData(
                        new
                        {
                            IngredientId = 15,
                            AllergenId = 11,
                            Amount = 4
                        },
                        new
                        {
                            IngredientId = 1,
                            AllergenId = 4,
                            Amount = 4
                        },
                        new
                        {
                            IngredientId = 23,
                            AllergenId = 5,
                            Amount = 4
                        });
                });

            modelBuilder.Entity("MenuPlanner.Models.Entities.IngredientNutrient", b =>
                {
                    b.Property<int>("IngredientId")
                        .HasColumnType("int");

                    b.Property<int>("NutrientId")
                        .HasColumnType("int");

                    b.Property<decimal>("AmountPer100Grams")
                        .HasColumnType("decimal(9,8)");

                    b.HasKey("IngredientId", "NutrientId");

                    b.HasIndex("NutrientId");

                    b.ToTable("IngredientNutrients");

                    b.HasData(
                        new
                        {
                            IngredientId = 15,
                            NutrientId = 6,
                            AmountPer100Grams = 1m
                        },
                        new
                        {
                            IngredientId = 15,
                            NutrientId = 7,
                            AmountPer100Grams = 0.6m
                        },
                        new
                        {
                            IngredientId = 15,
                            NutrientId = 2,
                            AmountPer100Grams = 4.5m
                        },
                        new
                        {
                            IngredientId = 15,
                            NutrientId = 3,
                            AmountPer100Grams = 4.5m
                        },
                        new
                        {
                            IngredientId = 15,
                            NutrientId = 1,
                            AmountPer100Grams = 3.5m
                        },
                        new
                        {
                            IngredientId = 15,
                            NutrientId = 44,
                            AmountPer100Grams = 0.10m
                        },
                        new
                        {
                            IngredientId = 15,
                            NutrientId = 13,
                            AmountPer100Grams = 0.00015m
                        },
                        new
                        {
                            IngredientId = 15,
                            NutrientId = 18,
                            AmountPer100Grams = 0.0000006m
                        },
                        new
                        {
                            IngredientId = 15,
                            NutrientId = 16,
                            AmountPer100Grams = 0.000008m
                        },
                        new
                        {
                            IngredientId = 15,
                            NutrientId = 25,
                            AmountPer100Grams = 0.171m
                        },
                        new
                        {
                            IngredientId = 15,
                            NutrientId = 28,
                            AmountPer100Grams = 0.13m
                        },
                        new
                        {
                            IngredientId = 15,
                            NutrientId = 29,
                            AmountPer100Grams = 0.115m
                        },
                        new
                        {
                            IngredientId = 15,
                            NutrientId = 35,
                            AmountPer100Grams = 0.000016m
                        });
                });

            modelBuilder.Entity("MenuPlanner.Models.Entities.Nutrient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("AlwaysDisplay")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Emphasized")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.Property<int?>("SubTypeOf")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Nutrients");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AlwaysDisplay = false,
                            Description = "Informasjon.",
                            Emphasized = false,
                            Name = "Protein",
                            SortOrder = 0,
                            Type = 10,
                            Url = "protein"
                        },
                        new
                        {
                            Id = 2,
                            AlwaysDisplay = false,
                            Description = "Total mengde karbohydrater, inkludert sukkerarter, polyoler og stivelse.",
                            Emphasized = false,
                            Name = "Karbohydrater",
                            SortOrder = 0,
                            Type = 5,
                            Url = "karbohydrater"
                        },
                        new
                        {
                            Id = 3,
                            AlwaysDisplay = false,
                            Description = "Informasjon.",
                            Emphasized = false,
                            Name = "Sukkerarter",
                            SortOrder = 0,
                            SubTypeOf = 5,
                            Type = 6,
                            Url = "sukkerarter"
                        },
                        new
                        {
                            Id = 4,
                            AlwaysDisplay = false,
                            Description = "Informasjon.",
                            Emphasized = false,
                            Name = "Polyoler",
                            SortOrder = 0,
                            SubTypeOf = 5,
                            Type = 7,
                            Url = "polyoler"
                        },
                        new
                        {
                            Id = 5,
                            AlwaysDisplay = false,
                            Description = "Informasjon.",
                            Emphasized = false,
                            Name = "Stivelse",
                            SortOrder = 0,
                            SubTypeOf = 5,
                            Type = 8,
                            Url = "stivelse"
                        },
                        new
                        {
                            Id = 6,
                            AlwaysDisplay = false,
                            Description = "Angir total mengde fett i en ingrediens, inkludert mettet, enumettet og flerumettet fett.",
                            Emphasized = false,
                            Name = "Fett",
                            SortOrder = 1,
                            Type = 0,
                            Url = "fett"
                        },
                        new
                        {
                            Id = 7,
                            AlwaysDisplay = false,
                            Description = "Informasjon",
                            Emphasized = false,
                            Name = "Mettet fett",
                            SortOrder = 1,
                            SubTypeOf = 0,
                            Type = 1,
                            Url = "mettet-fett"
                        },
                        new
                        {
                            Id = 8,
                            AlwaysDisplay = false,
                            Description = "Informasjon",
                            Emphasized = false,
                            Name = "Enumettet fett",
                            SortOrder = 2,
                            SubTypeOf = 0,
                            Type = 2,
                            Url = "enumettet-fett"
                        },
                        new
                        {
                            Id = 9,
                            AlwaysDisplay = false,
                            Description = "Informasjon",
                            Emphasized = false,
                            Name = "Flerumettet fett",
                            SortOrder = 3,
                            SubTypeOf = 0,
                            Type = 3,
                            Url = "flerumettet-fett"
                        },
                        new
                        {
                            Id = 10,
                            AlwaysDisplay = false,
                            Description = "Informasjon",
                            Emphasized = false,
                            Name = "Transfett",
                            SortOrder = 4,
                            SubTypeOf = 0,
                            Type = 4,
                            Url = "transfett"
                        },
                        new
                        {
                            Id = 11,
                            AlwaysDisplay = false,
                            Description = "Informasjon",
                            Emphasized = false,
                            Name = "Vitamin A, retinol",
                            SortOrder = 0,
                            Type = 12,
                            Url = "vitamin-a-retinol"
                        },
                        new
                        {
                            Id = 12,
                            AlwaysDisplay = false,
                            Description = "Informasjon",
                            Emphasized = false,
                            Name = "Vitamin B1, tiamin",
                            SortOrder = 0,
                            Type = 12,
                            Url = "vitamin-b1-tiamin"
                        },
                        new
                        {
                            Id = 13,
                            AlwaysDisplay = false,
                            Description = "Informasjon",
                            Emphasized = false,
                            Name = "Vitamin B2, riboflavin",
                            SortOrder = 0,
                            Type = 12,
                            Url = "vitamin-b2-riboflavin"
                        },
                        new
                        {
                            Id = 14,
                            AlwaysDisplay = false,
                            Description = "Informasjon",
                            Emphasized = false,
                            Name = "Vitamin B3, niacin",
                            SortOrder = 0,
                            Type = 12,
                            Url = "vitamin-b3-niacin"
                        },
                        new
                        {
                            Id = 15,
                            AlwaysDisplay = false,
                            Description = "Informasjon",
                            Emphasized = false,
                            Name = "Vitamin B5, pantotensyre",
                            SortOrder = 0,
                            Type = 12,
                            Url = "vitamin-b5-pantotensyre"
                        },
                        new
                        {
                            Id = 16,
                            AlwaysDisplay = false,
                            Description = "Informasjon",
                            Emphasized = false,
                            Name = "Vitamin B7, biotin",
                            SortOrder = 0,
                            Type = 12,
                            Url = "vitamin-b7-biotin"
                        },
                        new
                        {
                            Id = 17,
                            AlwaysDisplay = false,
                            Description = "Informasjon",
                            Emphasized = false,
                            Name = "Vitamin B9, folat",
                            SortOrder = 0,
                            Type = 12,
                            Url = "vitamin-b9-folat"
                        },
                        new
                        {
                            Id = 18,
                            AlwaysDisplay = false,
                            Description = "Informasjon",
                            Emphasized = false,
                            Name = "Vitamin B12, kobalamin",
                            SortOrder = 0,
                            Type = 12,
                            Url = "vitamin-b12-kobalamin"
                        },
                        new
                        {
                            Id = 19,
                            AlwaysDisplay = false,
                            Description = "Informasjon",
                            Emphasized = false,
                            Name = "Vitamin C, askorbinsyre",
                            SortOrder = 0,
                            Type = 12,
                            Url = "vitamin-c-askorbinsyre"
                        },
                        new
                        {
                            Id = 20,
                            AlwaysDisplay = false,
                            Description = "Informasjon",
                            Emphasized = false,
                            Name = "Vitamin D2, ergokalsiferol",
                            SortOrder = 0,
                            Type = 12,
                            Url = "vitamin-d2-ergokalsiferol"
                        },
                        new
                        {
                            Id = 21,
                            AlwaysDisplay = false,
                            Description = "Informasjon",
                            Emphasized = false,
                            Name = "Vitamin D3, kolikalsiferol",
                            SortOrder = 0,
                            Type = 12,
                            Url = "vitamin-d3-kolikalsiferol"
                        },
                        new
                        {
                            Id = 22,
                            AlwaysDisplay = false,
                            Description = "Tokoferol (E306) betegner en blanding av de rene stoffene alfa-tokoferol (E307), gamma-tokoferol (E308) og delta-tokoferol (E309).",
                            Emphasized = false,
                            Name = "Vitamin E, tokoferol (E306)",
                            SortOrder = 0,
                            Type = 12,
                            Url = "vitamin-e-tokoferol-e306"
                        },
                        new
                        {
                            Id = 23,
                            AlwaysDisplay = false,
                            Description = "Informasjon",
                            Emphasized = false,
                            Name = "Vitamin K1, fyllokinon",
                            SortOrder = 0,
                            Type = 12,
                            Url = "vitamin-k1-fyllokinon"
                        },
                        new
                        {
                            Id = 24,
                            AlwaysDisplay = false,
                            Description = "Informasjon",
                            Emphasized = false,
                            Name = "Vitamin K2, menakinon",
                            SortOrder = 0,
                            Type = 12,
                            Url = "vitamin-k2-menakinon"
                        },
                        new
                        {
                            Id = 25,
                            AlwaysDisplay = false,
                            Description = "Engelsk navn: Potassium",
                            Emphasized = false,
                            Name = "Kalium",
                            SortOrder = 0,
                            Type = 13,
                            Url = "kalium"
                        },
                        new
                        {
                            Id = 26,
                            AlwaysDisplay = false,
                            Description = "Engelsk navn: Chlorine. Komponent i vanlig bordsalt (natriumklorid).",
                            Emphasized = false,
                            Name = "Klorin",
                            SortOrder = 0,
                            Type = 13,
                            Url = "klorin"
                        },
                        new
                        {
                            Id = 27,
                            AlwaysDisplay = false,
                            Description = "Engelsk navn: Sodium. Komponent i vanlig bordsalt (natriumklorid).",
                            Emphasized = false,
                            Name = "Natrium",
                            SortOrder = 0,
                            Type = 13,
                            Url = "natrium"
                        },
                        new
                        {
                            Id = 28,
                            AlwaysDisplay = false,
                            Description = "Engelsk navn: Calcium. Viktig for skjelettet og tennene.",
                            Emphasized = false,
                            Name = "Kalsium",
                            SortOrder = 0,
                            Type = 13,
                            Url = "kalsium"
                        },
                        new
                        {
                            Id = 29,
                            AlwaysDisplay = false,
                            Description = "Engelsk navn: Phosphorus.",
                            Emphasized = false,
                            Name = "Fosfor",
                            SortOrder = 0,
                            Type = 13,
                            Url = "fosfor"
                        },
                        new
                        {
                            Id = 30,
                            AlwaysDisplay = false,
                            Description = "Engelsk navn: Magnesium.",
                            Emphasized = false,
                            Name = "Magnesium",
                            SortOrder = 0,
                            Type = 13,
                            Url = "magnesium"
                        },
                        new
                        {
                            Id = 31,
                            AlwaysDisplay = false,
                            Description = "Engelsk navn: Iron.",
                            Emphasized = false,
                            Name = "Jern",
                            SortOrder = 0,
                            Type = 13,
                            Url = "jern"
                        },
                        new
                        {
                            Id = 32,
                            AlwaysDisplay = false,
                            Description = "Engelsk navn: Zinc.",
                            Emphasized = false,
                            Name = "Sink",
                            SortOrder = 0,
                            Type = 13,
                            Url = "sink"
                        },
                        new
                        {
                            Id = 33,
                            AlwaysDisplay = false,
                            Description = "Engelsk navn: Manganese.",
                            Emphasized = false,
                            Name = "Mangan",
                            SortOrder = 0,
                            Type = 13,
                            Url = "mangan"
                        },
                        new
                        {
                            Id = 34,
                            AlwaysDisplay = false,
                            Description = "Engelsk navn: Copper.",
                            Emphasized = false,
                            Name = "Kobber",
                            SortOrder = 0,
                            Type = 13,
                            Url = "kobber"
                        },
                        new
                        {
                            Id = 35,
                            AlwaysDisplay = false,
                            Description = "Engelsk navn: iodine.",
                            Emphasized = false,
                            Name = "Jod",
                            SortOrder = 0,
                            Type = 13,
                            Url = "jod"
                        },
                        new
                        {
                            Id = 36,
                            AlwaysDisplay = false,
                            Description = "Engelsk navn: Molybdenum.",
                            Emphasized = false,
                            Name = "Molybden",
                            SortOrder = 0,
                            Type = 13,
                            Url = "molybden"
                        },
                        new
                        {
                            Id = 37,
                            AlwaysDisplay = false,
                            Description = "Engelsk navn: Selenium.",
                            Emphasized = false,
                            Name = "Selen",
                            SortOrder = 0,
                            Type = 13,
                            Url = "selen"
                        },
                        new
                        {
                            Id = 38,
                            AlwaysDisplay = false,
                            Description = "Engelsk navn: Fluoride.",
                            Emphasized = false,
                            Name = "Fluor",
                            SortOrder = 0,
                            Type = 13,
                            Url = "fluor"
                        },
                        new
                        {
                            Id = 39,
                            AlwaysDisplay = false,
                            Description = "Engelsk navn: Chromium.",
                            Emphasized = false,
                            Name = "Krom",
                            SortOrder = 0,
                            Type = 13,
                            Url = "krom"
                        },
                        new
                        {
                            Id = 40,
                            AlwaysDisplay = false,
                            Description = "Engelsk navn: Nickel.",
                            Emphasized = false,
                            Name = "Nikkel",
                            SortOrder = 0,
                            Type = 13,
                            Url = "nikkel"
                        },
                        new
                        {
                            Id = 41,
                            AlwaysDisplay = false,
                            Description = "Engelsk navn: Boron.",
                            Emphasized = false,
                            Name = "Bor",
                            SortOrder = 0,
                            Type = 13,
                            Url = "bor"
                        },
                        new
                        {
                            Id = 42,
                            AlwaysDisplay = false,
                            Description = "Engelsk navn: Silicon.",
                            Emphasized = false,
                            Name = "Silisium",
                            SortOrder = 0,
                            Type = 13,
                            Url = "silisium"
                        },
                        new
                        {
                            Id = 43,
                            AlwaysDisplay = false,
                            Description = "Engelsk navn: Vanadium.",
                            Emphasized = false,
                            Name = "Vanadium",
                            SortOrder = 0,
                            Type = 13,
                            Url = "vanadium"
                        },
                        new
                        {
                            Id = 44,
                            AlwaysDisplay = false,
                            Description = "Natriumklorid (NaCl). Engelsk navn: Salt, sodium chloride.",
                            Emphasized = false,
                            Name = "Salt",
                            SortOrder = 0,
                            Type = 13,
                            Url = "salt"
                        });
                });

            modelBuilder.Entity("MenuPlanner.Models.Entities.Recipe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CountryCode")
                        .HasColumnType("nvarchar(2)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DifficultyLevel")
                        .HasColumnType("int");

                    b.Property<bool>("IsPublished")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ParentRecipeId")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("PrepTime")
                        .HasColumnType("time");

                    b.Property<double?>("RatingAverage")
                        .HasColumnType("float");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("CountryCode");

                    b.HasIndex("ParentRecipeId");

                    b.HasIndex("UserId");

                    b.ToTable("Recipes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CountryCode = "NO",
                            DateCreated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(8820),
                            DateUpdated = new DateTime(2024, 2, 17, 21, 47, 2, 279, DateTimeKind.Local).AddTicks(9122),
                            Description = "Deilige, tynne pannekaker er hele familiens favoritt. Server gjerne med blåbærsyltetøy eller sukker og sitrondråper.",
                            DifficultyLevel = 0,
                            IsPublished = true,
                            Name = "Pannekaker",
                            PrepTime = new TimeSpan(0, 1, 0, 0, 0),
                            RatingAverage = 7.4000000000000004,
                            Url = "pannekaker"
                        },
                        new
                        {
                            Id = 2,
                            CountryCode = "TH",
                            DateCreated = new DateTime(2024, 2, 17, 21, 47, 2, 280, DateTimeKind.Local).AddTicks(207),
                            DateUpdated = new DateTime(2024, 2, 17, 21, 47, 2, 280, DateTimeKind.Local).AddTicks(218),
                            Description = "En fantastisk smakfull kyllingsuppe.",
                            DifficultyLevel = 1,
                            IsPublished = true,
                            Name = "Tom Kha Gai",
                            PrepTime = new TimeSpan(0, 1, 0, 0, 0),
                            RatingAverage = 8.0999999999999996,
                            Url = "tom-kha-gai"
                        },
                        new
                        {
                            Id = 3,
                            CountryCode = "IT",
                            DateCreated = new DateTime(2024, 2, 17, 21, 47, 2, 280, DateTimeKind.Local).AddTicks(224),
                            DateUpdated = new DateTime(2024, 2, 17, 21, 47, 2, 280, DateTimeKind.Local).AddTicks(226),
                            Description = "En enkel men utrolig god, klassisk pastarett.",
                            DifficultyLevel = 1,
                            IsPublished = true,
                            Name = "Cacio e Pepe",
                            PrepTime = new TimeSpan(0, 0, 20, 0, 0),
                            RatingAverage = 8.0,
                            Url = "cacio-e-pepe"
                        },
                        new
                        {
                            Id = 4,
                            CountryCode = "NO",
                            DateCreated = new DateTime(2024, 2, 17, 21, 47, 2, 280, DateTimeKind.Local).AddTicks(232),
                            DateUpdated = new DateTime(2024, 2, 17, 21, 47, 2, 280, DateTimeKind.Local).AddTicks(234),
                            Description = "Den kjente og kjære norske klassikeren, akkurat som mamma lagde den.",
                            DifficultyLevel = 0,
                            IsPublished = true,
                            Name = "Kjøttkaker med kålstuing",
                            PrepTime = new TimeSpan(0, 1, 0, 0, 0),
                            RatingAverage = 7.2999999999999998,
                            Url = "kjottkaker-med-kalstuing"
                        },
                        new
                        {
                            Id = 5,
                            CountryCode = "US",
                            DateCreated = new DateTime(2024, 2, 17, 21, 47, 2, 280, DateTimeKind.Local).AddTicks(240),
                            DateUpdated = new DateTime(2024, 2, 17, 21, 47, 2, 280, DateTimeKind.Local).AddTicks(242),
                            Description = "Disse buffalo kyllingnachoene er fulle av smak! Du vil elske kombinasjonen av sprø tortillachips, krydret buffalo-kylling og kjølig dressing av blåmuggost.",
                            DifficultyLevel = 1,
                            IsPublished = true,
                            Name = "Buffalo kyllingnachos",
                            PrepTime = new TimeSpan(0, 0, 30, 0, 0),
                            RatingAverage = 7.5,
                            Url = "buffalo-kyllingnachos"
                        },
                        new
                        {
                            Id = 6,
                            CountryCode = "NO",
                            DateCreated = new DateTime(2024, 2, 17, 21, 47, 2, 280, DateTimeKind.Local).AddTicks(247),
                            DateUpdated = new DateTime(2024, 2, 17, 21, 47, 2, 280, DateTimeKind.Local).AddTicks(249),
                            Description = "Saftig og smaksrik.",
                            DifficultyLevel = 1,
                            IsPublished = true,
                            Name = "Ovnsbakt hel ørret",
                            PrepTime = new TimeSpan(0, 1, 30, 0, 0),
                            RatingAverage = 8.0,
                            Url = "ovnsbakt-hel-orret"
                        });
                });

            modelBuilder.Entity("MenuPlanner.Models.Entities.RecipeIngredient", b =>
                {
                    b.Property<int>("RecipeId")
                        .HasColumnType("int");

                    b.Property<int>("IngredientId")
                        .HasColumnType("int");

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.Property<int>("Unit")
                        .HasColumnType("int");

                    b.HasKey("RecipeId", "IngredientId");

                    b.HasIndex("IngredientId");

                    b.ToTable("RecipeIngredients");

                    b.HasData(
                        new
                        {
                            RecipeId = 1,
                            IngredientId = 1,
                            Amount = 3.0,
                            SortOrder = 1,
                            Unit = 2
                        },
                        new
                        {
                            RecipeId = 1,
                            IngredientId = 15,
                            Amount = 5.0,
                            SortOrder = 2,
                            Unit = 2
                        },
                        new
                        {
                            RecipeId = 1,
                            IngredientId = 23,
                            Amount = 4.0,
                            SortOrder = 3,
                            Unit = 12
                        },
                        new
                        {
                            RecipeId = 1,
                            IngredientId = 28,
                            Amount = 0.5,
                            SortOrder = 4,
                            Unit = 9
                        },
                        new
                        {
                            RecipeId = 2,
                            IngredientId = 74,
                            Amount = 4.0,
                            SortOrder = 1,
                            Unit = 2
                        },
                        new
                        {
                            RecipeId = 2,
                            IngredientId = 77,
                            Amount = 3.0,
                            SortOrder = 2,
                            Unit = 9
                        },
                        new
                        {
                            RecipeId = 2,
                            IngredientId = 76,
                            Amount = 2.0,
                            SortOrder = 3,
                            Unit = 12
                        },
                        new
                        {
                            RecipeId = 2,
                            IngredientId = 71,
                            Amount = 1.0,
                            SortOrder = 4,
                            Unit = 10
                        },
                        new
                        {
                            RecipeId = 2,
                            IngredientId = 81,
                            Amount = 0.5,
                            SortOrder = 5,
                            Unit = 12
                        },
                        new
                        {
                            RecipeId = 2,
                            IngredientId = 84,
                            Amount = 0.5,
                            SortOrder = 6,
                            Unit = 9
                        },
                        new
                        {
                            RecipeId = 2,
                            IngredientId = 80,
                            Amount = 50.0,
                            SortOrder = 7,
                            Unit = 0
                        },
                        new
                        {
                            RecipeId = 2,
                            IngredientId = 88,
                            Amount = 4.0,
                            SortOrder = 8,
                            Unit = 2
                        },
                        new
                        {
                            RecipeId = 2,
                            IngredientId = 92,
                            Amount = 1.0,
                            SortOrder = 9,
                            Unit = 12
                        },
                        new
                        {
                            RecipeId = 2,
                            IngredientId = 108,
                            Amount = 400.0,
                            SortOrder = 10,
                            Unit = 0
                        },
                        new
                        {
                            RecipeId = 2,
                            IngredientId = 95,
                            Amount = 3.0,
                            SortOrder = 11,
                            Unit = 12
                        },
                        new
                        {
                            RecipeId = 2,
                            IngredientId = 61,
                            Amount = 1.0,
                            SortOrder = 12,
                            Unit = 12
                        },
                        new
                        {
                            RecipeId = 2,
                            IngredientId = 86,
                            Amount = 3.0,
                            SortOrder = 13,
                            Unit = 12
                        },
                        new
                        {
                            RecipeId = 2,
                            IngredientId = 110,
                            Amount = 2.0,
                            SortOrder = 14,
                            Unit = 10
                        });
                });

            modelBuilder.Entity("MenuPlanner.Models.Entities.RecipeStep", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RecipeId")
                        .HasColumnType("int");

                    b.Property<int>("StepNumber")
                        .HasColumnType("int");

                    b.Property<string>("StepText")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("RecipeId");

                    b.ToTable("RecipeSteps");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            RecipeId = 1,
                            StepNumber = 1,
                            StepText = "Bland mel og salt."
                        },
                        new
                        {
                            Id = 2,
                            RecipeId = 1,
                            StepNumber = 2,
                            StepText = "Ha i halvparten av melken og visp sammen til en tykk, klumpefri røre."
                        },
                        new
                        {
                            Id = 3,
                            RecipeId = 1,
                            StepNumber = 3,
                            StepText = "Tilsett resten av melken og visp sammen."
                        },
                        new
                        {
                            Id = 4,
                            RecipeId = 1,
                            StepNumber = 4,
                            StepText = "Tilsett eggene og visp sammen til røren blir fin og gul."
                        },
                        new
                        {
                            Id = 5,
                            RecipeId = 1,
                            StepNumber = 5,
                            StepText = "La røren hvile i minst 30 minutter for best resultat."
                        },
                        new
                        {
                            Id = 6,
                            RecipeId = 1,
                            StepNumber = 6,
                            StepText = "Ha smør eller margarin i pannen og stek pannekakene til de er gyldne på begge sider."
                        },
                        new
                        {
                            Id = 7,
                            RecipeId = 1,
                            StepNumber = 7,
                            StepText = "Brett pannekakene og legg dem i en ildfast form med lokk. Slik holder de seg varme til alle er ferdig stekt."
                        });
                });

            modelBuilder.Entity("MenuPlanner.Models.Entities.SearchIndex", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("EntityType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SearchIndex");

                    b.HasData(
                        new
                        {
                            Id = 199,
                            EntityType = "Recipe",
                            Name = "Pannekaker",
                            NormalizedName = "pannekaker",
                            Url = "pannekaker"
                        },
                        new
                        {
                            Id = 200,
                            EntityType = "Recipe",
                            Name = "Tom Kha Gai",
                            NormalizedName = "tom kha gai",
                            Url = "tom-kha-gai"
                        },
                        new
                        {
                            Id = 201,
                            EntityType = "Recipe",
                            Name = "Cacio e Pepe",
                            NormalizedName = "cacio e pepe",
                            Url = "cacio-e-pepe"
                        },
                        new
                        {
                            Id = 202,
                            EntityType = "Recipe",
                            Name = "Kjøttkaker med kålstuing",
                            NormalizedName = "kjøttkaker med kålstuing",
                            Url = "kjottkaker-med-kalstuing"
                        },
                        new
                        {
                            Id = 203,
                            EntityType = "Recipe",
                            Name = "Buffalo kyllingnachos",
                            NormalizedName = "buffalo kyllingnachos",
                            Url = "buffalo-kyllingnachos"
                        },
                        new
                        {
                            Id = 204,
                            EntityType = "Recipe",
                            Name = "Ovnsbakt hel ørret",
                            NormalizedName = "ovnsbakt hel ørret",
                            Url = "ovnsbakt-hel-orret"
                        },
                        new
                        {
                            Id = 205,
                            EntityType = "Ingredient",
                            Name = "Hvetemel",
                            NormalizedName = "hvetemel",
                            Url = "hvetemel"
                        },
                        new
                        {
                            Id = 206,
                            EntityType = "Ingredient",
                            Name = "Sammalt hvete, grovmalt",
                            NormalizedName = "sammalt hvete grovmalt",
                            Url = "sammalt-hvete-grovmalt"
                        },
                        new
                        {
                            Id = 207,
                            EntityType = "Ingredient",
                            Name = "Sammalt hvete, finmalt",
                            NormalizedName = "sammalt hvete finmalt",
                            Url = "sammalt-hvete-finmalt"
                        },
                        new
                        {
                            Id = 208,
                            EntityType = "Ingredient",
                            Name = "Hvete helkorn",
                            NormalizedName = "hvete helkorn",
                            Url = "hvete-helkorn"
                        },
                        new
                        {
                            Id = 209,
                            EntityType = "Ingredient",
                            Name = "Havregryn, lettkokt",
                            NormalizedName = "havregryn lettkokt",
                            Url = "havregryn-lettkokt"
                        },
                        new
                        {
                            Id = 210,
                            EntityType = "Ingredient",
                            Name = "Havregryn, store",
                            NormalizedName = "havregryn store",
                            Url = "havregryn-store"
                        },
                        new
                        {
                            Id = 211,
                            EntityType = "Ingredient",
                            Name = "Havregryn, glutenfri",
                            NormalizedName = "havregryn glutenfri",
                            Url = "havregryn-glutenfri"
                        },
                        new
                        {
                            Id = 212,
                            EntityType = "Ingredient",
                            Name = "Havremel",
                            NormalizedName = "havremel",
                            Url = "havremel"
                        },
                        new
                        {
                            Id = 213,
                            EntityType = "Ingredient",
                            Name = "Rug, helkorn",
                            NormalizedName = "rug helkorn",
                            Url = "rug-helkorn"
                        },
                        new
                        {
                            Id = 214,
                            EntityType = "Ingredient",
                            Name = "Rugmel",
                            NormalizedName = "rugmel",
                            Url = "rugmel"
                        },
                        new
                        {
                            Id = 215,
                            EntityType = "Ingredient",
                            Name = "Bygg, helkorn",
                            NormalizedName = "bygg helkorn",
                            Url = "bygg-helkorn"
                        },
                        new
                        {
                            Id = 216,
                            EntityType = "Ingredient",
                            Name = "Byggmel",
                            NormalizedName = "byggmel",
                            Url = "byggmel"
                        },
                        new
                        {
                            Id = 217,
                            EntityType = "Ingredient",
                            Name = "Gresskarkjerner",
                            NormalizedName = "gresskarkjerner",
                            Url = "gresskarkjerner"
                        },
                        new
                        {
                            Id = 218,
                            EntityType = "Ingredient",
                            Name = "Skummet melk",
                            NormalizedName = "skummet melk",
                            Url = "skummet-melk"
                        },
                        new
                        {
                            Id = 219,
                            EntityType = "Ingredient",
                            Name = "Lettmelk",
                            NormalizedName = "lettmelk",
                            Url = "lettmelk"
                        },
                        new
                        {
                            Id = 220,
                            EntityType = "Ingredient",
                            Name = "Helmelk",
                            NormalizedName = "helmelk",
                            Url = "helmelk"
                        },
                        new
                        {
                            Id = 221,
                            EntityType = "Ingredient",
                            Name = "Kremfløte",
                            NormalizedName = "kremfløte",
                            Url = "kremflote"
                        },
                        new
                        {
                            Id = 222,
                            EntityType = "Ingredient",
                            Name = "Matfløte",
                            NormalizedName = "matfløte",
                            Url = "matflote"
                        },
                        new
                        {
                            Id = 223,
                            EntityType = "Ingredient",
                            Name = "Lettrømme",
                            NormalizedName = "lettrømme",
                            Url = "lettromme"
                        },
                        new
                        {
                            Id = 224,
                            EntityType = "Ingredient",
                            Name = "Seterrømme",
                            NormalizedName = "seterrømme",
                            Url = "seterromme"
                        },
                        new
                        {
                            Id = 225,
                            EntityType = "Ingredient",
                            Name = "Rømmekolle",
                            NormalizedName = "rømmekolle",
                            Url = "rommekolle"
                        },
                        new
                        {
                            Id = 226,
                            EntityType = "Ingredient",
                            Name = "Kvarg",
                            NormalizedName = "kvarg",
                            Url = "kvarg"
                        },
                        new
                        {
                            Id = 227,
                            EntityType = "Ingredient",
                            Name = "Egg",
                            NormalizedName = "egg",
                            Url = "egg"
                        },
                        new
                        {
                            Id = 228,
                            EntityType = "Ingredient",
                            Name = "Eggeplomme",
                            NormalizedName = "eggeplomme",
                            Url = "eggeplomme"
                        },
                        new
                        {
                            Id = 229,
                            EntityType = "Ingredient",
                            Name = "Eggehvite",
                            NormalizedName = "eggehvite",
                            Url = "eggehvite"
                        },
                        new
                        {
                            Id = 230,
                            EntityType = "Ingredient",
                            Name = "Vaktelegg",
                            NormalizedName = "vaktelegg",
                            Url = "vaktelegg"
                        },
                        new
                        {
                            Id = 231,
                            EntityType = "Ingredient",
                            Name = "Måsegg",
                            NormalizedName = "måsegg",
                            Url = "masegg"
                        },
                        new
                        {
                            Id = 232,
                            EntityType = "Ingredient",
                            Name = "Salt",
                            NormalizedName = "salt",
                            Url = "salt"
                        },
                        new
                        {
                            Id = 233,
                            EntityType = "Ingredient",
                            Name = "Tomatketsjup",
                            NormalizedName = "tomatketsjup",
                            Url = "tomatketsjup"
                        },
                        new
                        {
                            Id = 234,
                            EntityType = "Ingredient",
                            Name = "Søt sennep",
                            NormalizedName = "søt sennep",
                            Url = "sot-sennep"
                        },
                        new
                        {
                            Id = 235,
                            EntityType = "Ingredient",
                            Name = "Sterk sennep",
                            NormalizedName = "sterk sennep",
                            Url = "sterk-sennep"
                        },
                        new
                        {
                            Id = 236,
                            EntityType = "Ingredient",
                            Name = "Dijonsennep",
                            NormalizedName = "dijonsennep",
                            Url = "dijonsennep"
                        },
                        new
                        {
                            Id = 237,
                            EntityType = "Ingredient",
                            Name = "Grov sennep",
                            NormalizedName = "grov sennep",
                            Url = "grov-sennep"
                        },
                        new
                        {
                            Id = 238,
                            EntityType = "Ingredient",
                            Name = "Soyasaus",
                            NormalizedName = "soyasaus",
                            Url = "soyasaus"
                        },
                        new
                        {
                            Id = 239,
                            EntityType = "Ingredient",
                            Name = "Saltredusert soyasaus",
                            NormalizedName = "saltredusert soyasaus",
                            Url = "saltredusert-soyasaus"
                        },
                        new
                        {
                            Id = 240,
                            EntityType = "Ingredient",
                            Name = "Eddikessens",
                            NormalizedName = "eddikessens",
                            Url = "eddikessens"
                        },
                        new
                        {
                            Id = 241,
                            EntityType = "Ingredient",
                            Name = "Klar eddik",
                            NormalizedName = "klar eddik",
                            Url = "klar-eddik"
                        },
                        new
                        {
                            Id = 242,
                            EntityType = "Ingredient",
                            Name = "Brun eddik",
                            NormalizedName = "brun eddik",
                            Url = "brun-eddik"
                        },
                        new
                        {
                            Id = 243,
                            EntityType = "Ingredient",
                            Name = "Eplecidereddik",
                            NormalizedName = "eplecidereddik",
                            Url = "eplecidereddik"
                        },
                        new
                        {
                            Id = 244,
                            EntityType = "Ingredient",
                            Name = "Hvitvinseddik",
                            NormalizedName = "hvitvinseddik",
                            Url = "hvitvinseddik"
                        },
                        new
                        {
                            Id = 245,
                            EntityType = "Ingredient",
                            Name = "Rødvinseddik",
                            NormalizedName = "rødvinseddik",
                            Url = "rodvinseddik"
                        },
                        new
                        {
                            Id = 246,
                            EntityType = "Ingredient",
                            Name = "Sitrondråper",
                            NormalizedName = "sitrondråper",
                            Url = "sitrondråper"
                        },
                        new
                        {
                            Id = 247,
                            EntityType = "Ingredient",
                            Name = "Smør",
                            NormalizedName = "smør",
                            Url = "smor"
                        },
                        new
                        {
                            Id = 248,
                            EntityType = "Ingredient",
                            Name = "Margarin",
                            NormalizedName = "margarin",
                            Url = "margarin"
                        },
                        new
                        {
                            Id = 249,
                            EntityType = "Ingredient",
                            Name = "Rapsolje",
                            NormalizedName = "rapsolje",
                            Url = "rapsolje"
                        },
                        new
                        {
                            Id = 250,
                            EntityType = "Ingredient",
                            Name = "Maisolje",
                            NormalizedName = "maisolje",
                            Url = "maisolje"
                        },
                        new
                        {
                            Id = 251,
                            EntityType = "Ingredient",
                            Name = "Olivenolje",
                            NormalizedName = "olivenolje",
                            Url = "Olivenolje"
                        },
                        new
                        {
                            Id = 252,
                            EntityType = "Ingredient",
                            Name = "Sesamolje",
                            NormalizedName = "sesamolje",
                            Url = "sesamolje"
                        },
                        new
                        {
                            Id = 253,
                            EntityType = "Ingredient",
                            Name = "Kokosolje",
                            NormalizedName = "kokosolje",
                            Url = "kokosolje"
                        },
                        new
                        {
                            Id = 254,
                            EntityType = "Ingredient",
                            Name = "Frityrolje",
                            NormalizedName = "frityrolje",
                            Url = "frityrolje"
                        },
                        new
                        {
                            Id = 255,
                            EntityType = "Ingredient",
                            Name = "Sukker",
                            NormalizedName = "sukker",
                            Url = "sukker"
                        },
                        new
                        {
                            Id = 256,
                            EntityType = "Ingredient",
                            Name = "Blåbær",
                            NormalizedName = "blåbær",
                            Url = "blabar"
                        },
                        new
                        {
                            Id = 257,
                            EntityType = "Ingredient",
                            Name = "Jordbær",
                            NormalizedName = "jordbær",
                            Url = "jordbar"
                        },
                        new
                        {
                            Id = 258,
                            EntityType = "Ingredient",
                            Name = "Bringebær",
                            NormalizedName = "bringebær",
                            Url = "bringebar"
                        },
                        new
                        {
                            Id = 259,
                            EntityType = "Ingredient",
                            Name = "Grønne epler",
                            NormalizedName = "grønne epler",
                            Url = "gronne-epler"
                        },
                        new
                        {
                            Id = 260,
                            EntityType = "Ingredient",
                            Name = "Røde epler",
                            NormalizedName = "røde epler",
                            Url = "rode-epler"
                        },
                        new
                        {
                            Id = 261,
                            EntityType = "Ingredient",
                            Name = "Gule epler",
                            NormalizedName = "gule epler",
                            Url = "gule-epler"
                        },
                        new
                        {
                            Id = 262,
                            EntityType = "Ingredient",
                            Name = "Appelsin",
                            NormalizedName = "appelsin",
                            Url = "appelsin"
                        },
                        new
                        {
                            Id = 263,
                            EntityType = "Ingredient",
                            Name = "Sitron",
                            NormalizedName = "sitron",
                            Url = "sitron"
                        },
                        new
                        {
                            Id = 264,
                            EntityType = "Ingredient",
                            Name = "Økologisk sitron",
                            NormalizedName = "økologisk sitron",
                            Url = "okologisk-sitron"
                        },
                        new
                        {
                            Id = 265,
                            EntityType = "Ingredient",
                            Name = "Lime",
                            NormalizedName = "lime",
                            Url = "lime"
                        },
                        new
                        {
                            Id = 266,
                            EntityType = "Ingredient",
                            Name = "Hermetiske mandarinbåter",
                            NormalizedName = "hermetiske mandarinbåter",
                            Url = "hermetiske-mandarinbater"
                        },
                        new
                        {
                            Id = 267,
                            EntityType = "Ingredient",
                            Name = "Hermetiske pærer",
                            NormalizedName = "hermetiske pærer",
                            Url = "hermetiske-parer"
                        },
                        new
                        {
                            Id = 268,
                            EntityType = "Ingredient",
                            Name = "Hermetiske fersken",
                            NormalizedName = "hermetiske fersken",
                            Url = "hermetiske-fersken"
                        },
                        new
                        {
                            Id = 269,
                            EntityType = "Ingredient",
                            Name = "Banan",
                            NormalizedName = "banan",
                            Url = "banan"
                        },
                        new
                        {
                            Id = 270,
                            EntityType = "Ingredient",
                            Name = "Klementin",
                            NormalizedName = "klementin",
                            Url = "klementin"
                        },
                        new
                        {
                            Id = 271,
                            EntityType = "Ingredient",
                            Name = "Blå druer",
                            NormalizedName = "blå druer",
                            Url = "bla-druer"
                        },
                        new
                        {
                            Id = 272,
                            EntityType = "Ingredient",
                            Name = "Grønne druer",
                            NormalizedName = "grønne druer",
                            Url = "gronne-druer"
                        },
                        new
                        {
                            Id = 273,
                            EntityType = "Ingredient",
                            Name = "Rosiner",
                            NormalizedName = "rosiner",
                            Url = "rosiner"
                        },
                        new
                        {
                            Id = 274,
                            EntityType = "Ingredient",
                            Name = "Korinter",
                            NormalizedName = "korinter",
                            Url = "korinter"
                        },
                        new
                        {
                            Id = 275,
                            EntityType = "Ingredient",
                            Name = "Fiskesaus",
                            NormalizedName = "fiskesaus",
                            Url = "fiskesaus"
                        },
                        new
                        {
                            Id = 276,
                            EntityType = "Ingredient",
                            Name = "Kokosmelk",
                            NormalizedName = "kokosmelk",
                            Url = "kokosmelk"
                        },
                        new
                        {
                            Id = 277,
                            EntityType = "Ingredient",
                            Name = "Kokosmelk, lett",
                            NormalizedName = "kokosmelk lett",
                            Url = "kokosmelk-lett"
                        },
                        new
                        {
                            Id = 278,
                            EntityType = "Ingredient",
                            Name = "Kokoskrem",
                            NormalizedName = "kokoskrem",
                            Url = "kokoskrem"
                        },
                        new
                        {
                            Id = 279,
                            EntityType = "Ingredient",
                            Name = "Kokosmasse",
                            NormalizedName = "kokosmasse",
                            Url = "kokosmasse"
                        },
                        new
                        {
                            Id = 280,
                            EntityType = "Ingredient",
                            Name = "Sitrongress",
                            NormalizedName = "sitrongress",
                            Url = "sitrongress"
                        },
                        new
                        {
                            Id = 281,
                            EntityType = "Ingredient",
                            Name = "Rød currypasta",
                            NormalizedName = "rød currypasta",
                            Url = "rod-currypasta"
                        },
                        new
                        {
                            Id = 282,
                            EntityType = "Ingredient",
                            Name = "Grønn currypasta",
                            NormalizedName = "grønn currypasta",
                            Url = "gronn-currypasta"
                        },
                        new
                        {
                            Id = 283,
                            EntityType = "Ingredient",
                            Name = "Gul currypasta",
                            NormalizedName = "gul currypasta",
                            Url = "gul-currypasta"
                        },
                        new
                        {
                            Id = 284,
                            EntityType = "Ingredient",
                            Name = "Galangal",
                            NormalizedName = "galangal",
                            Url = "galangal"
                        },
                        new
                        {
                            Id = 285,
                            EntityType = "Ingredient",
                            Name = "Gul løk",
                            NormalizedName = "gul løk",
                            Url = "gul-lok"
                        },
                        new
                        {
                            Id = 286,
                            EntityType = "Ingredient",
                            Name = "Rødløk",
                            NormalizedName = "rødløk",
                            Url = "rodlok"
                        },
                        new
                        {
                            Id = 287,
                            EntityType = "Ingredient",
                            Name = "Chalottløk",
                            NormalizedName = "chalottløk",
                            Url = "chalottlok"
                        },
                        new
                        {
                            Id = 288,
                            EntityType = "Ingredient",
                            Name = "Hvitløk",
                            NormalizedName = "hvitløk",
                            Url = "hvitlok"
                        },
                        new
                        {
                            Id = 289,
                            EntityType = "Ingredient",
                            Name = "Salatløk",
                            NormalizedName = "salatløk",
                            Url = "salatlok"
                        },
                        new
                        {
                            Id = 290,
                            EntityType = "Ingredient",
                            Name = "Vårløk",
                            NormalizedName = "vårløk",
                            Url = "varlok"
                        },
                        new
                        {
                            Id = 291,
                            EntityType = "Ingredient",
                            Name = "Purre",
                            NormalizedName = "purre",
                            Url = "purre"
                        },
                        new
                        {
                            Id = 292,
                            EntityType = "Ingredient",
                            Name = "Kyllingkraft",
                            NormalizedName = "kyllingkraft",
                            Url = "kyllingkraft"
                        },
                        new
                        {
                            Id = 293,
                            EntityType = "Ingredient",
                            Name = "Storfekraft",
                            NormalizedName = "storfekraft",
                            Url = "storfekraft"
                        },
                        new
                        {
                            Id = 294,
                            EntityType = "Ingredient",
                            Name = "Fiskekraft",
                            NormalizedName = "fiskekraft",
                            Url = "fiskekraft"
                        },
                        new
                        {
                            Id = 295,
                            EntityType = "Ingredient",
                            Name = "Grønnsakskraft",
                            NormalizedName = "grønnsakskraft",
                            Url = "gronnsakskraft"
                        },
                        new
                        {
                            Id = 296,
                            EntityType = "Ingredient",
                            Name = "Chili, serrano",
                            NormalizedName = "chili serrano",
                            Url = "chili-serrano"
                        },
                        new
                        {
                            Id = 297,
                            EntityType = "Ingredient",
                            Name = "Chili, habanero",
                            NormalizedName = "chili habanero",
                            Url = "chili-habanero"
                        },
                        new
                        {
                            Id = 298,
                            EntityType = "Ingredient",
                            Name = "Chili, birds eye",
                            NormalizedName = "chili birds eye",
                            Url = "chili-birds-eye"
                        },
                        new
                        {
                            Id = 299,
                            EntityType = "Ingredient",
                            Name = "Champignon, fersk",
                            NormalizedName = "champignon fersk",
                            Url = "champignon-fersk"
                        },
                        new
                        {
                            Id = 300,
                            EntityType = "Ingredient",
                            Name = "Champignon, hermetisk",
                            NormalizedName = "champignon hermetisk",
                            Url = "champignon-hermetisk"
                        },
                        new
                        {
                            Id = 301,
                            EntityType = "Ingredient",
                            Name = "Aromasopp, fersk",
                            NormalizedName = "aromasopp fersk",
                            Url = "aromasopp-fersk"
                        },
                        new
                        {
                            Id = 302,
                            EntityType = "Ingredient",
                            Name = "Aromasopp, tørket",
                            NormalizedName = "aromasopp tørket",
                            Url = "aromasopp-torket"
                        },
                        new
                        {
                            Id = 303,
                            EntityType = "Ingredient",
                            Name = "Margarin",
                            NormalizedName = "margarin",
                            Url = "margarin"
                        },
                        new
                        {
                            Id = 304,
                            EntityType = "Ingredient",
                            Name = "Kylling, hel grillet",
                            NormalizedName = "kylling hel grillet",
                            Url = "kylling-hel-grillet"
                        },
                        new
                        {
                            Id = 305,
                            EntityType = "Ingredient",
                            Name = "Kylling, hel fersk",
                            NormalizedName = "kylling hel fersk",
                            Url = "kylling-hel-fersk"
                        },
                        new
                        {
                            Id = 306,
                            EntityType = "Ingredient",
                            Name = "Kyllinglår, grillet",
                            NormalizedName = "kyllinglår grillet",
                            Url = "kyllinglar-grillet"
                        },
                        new
                        {
                            Id = 307,
                            EntityType = "Ingredient",
                            Name = "Kyllinglår, fersk",
                            NormalizedName = "kyllinglår fersk",
                            Url = "kyllinglar-fersk"
                        },
                        new
                        {
                            Id = 308,
                            EntityType = "Ingredient",
                            Name = "Kyllinglår, frossen",
                            NormalizedName = "kyllinglår frossen",
                            Url = "kyllinglar-frossen"
                        },
                        new
                        {
                            Id = 309,
                            EntityType = "Ingredient",
                            Name = "Kyllingvinger, grillet",
                            NormalizedName = "kyllingvinger grillet",
                            Url = "kyllingvinger-grillet"
                        },
                        new
                        {
                            Id = 310,
                            EntityType = "Ingredient",
                            Name = "Kyllingvinger, fersk",
                            NormalizedName = "kyllingvinger fersk",
                            Url = "kyllingvinger-fersk"
                        },
                        new
                        {
                            Id = 311,
                            EntityType = "Ingredient",
                            Name = "Kyllingvinger, frossen",
                            NormalizedName = "kyllingvinger frossen",
                            Url = "kyllingvinger-frossen"
                        },
                        new
                        {
                            Id = 312,
                            EntityType = "Ingredient",
                            Name = "Kylling lårfilet",
                            NormalizedName = "kylling lårfilet",
                            Url = "kylling-larfilet"
                        },
                        new
                        {
                            Id = 313,
                            EntityType = "Ingredient",
                            Name = "Kylling brystfilet",
                            NormalizedName = "kylling brystfilet",
                            Url = "kylling-brystfilet"
                        },
                        new
                        {
                            Id = 314,
                            EntityType = "Ingredient",
                            Name = "Koriander, fersk",
                            NormalizedName = "koriander fersk",
                            Url = "koriander-fersk"
                        },
                        new
                        {
                            Id = 315,
                            EntityType = "Ingredient",
                            Name = "Dill, fersk",
                            NormalizedName = "dill fersk",
                            Url = "dill-fersk"
                        },
                        new
                        {
                            Id = 316,
                            EntityType = "Ingredient",
                            Name = "Gressløk, fersk",
                            NormalizedName = "gressløk fersk",
                            Url = "gresslok-fersk"
                        },
                        new
                        {
                            Id = 317,
                            EntityType = "Ingredient",
                            Name = "Basilikum, fersk",
                            NormalizedName = "basilikum fersk",
                            Url = "basilikum-fersk"
                        },
                        new
                        {
                            Id = 318,
                            EntityType = "Ingredient",
                            Name = "Thaibasilikum, fersk",
                            NormalizedName = "thaibasilikum fersk",
                            Url = "thaibasilikum-fersk"
                        },
                        new
                        {
                            Id = 319,
                            EntityType = "Ingredient",
                            Name = "Sort pepper, hel",
                            NormalizedName = "sort pepper hel",
                            Url = "sort-pepper-hel"
                        },
                        new
                        {
                            Id = 320,
                            EntityType = "Ingredient",
                            Name = "Sort pepper, grovmalt",
                            NormalizedName = "sort pepper grovmalt",
                            Url = "sort-pepper-grovmalt"
                        },
                        new
                        {
                            Id = 321,
                            EntityType = "Ingredient",
                            Name = "Sort pepper, malt",
                            NormalizedName = "sort pepper malt",
                            Url = "sort-pepper-malt"
                        },
                        new
                        {
                            Id = 322,
                            EntityType = "Ingredient",
                            Name = "Hvit pepper, hel",
                            NormalizedName = "hvit pepper hel",
                            Url = "hvit-pepper-hel"
                        },
                        new
                        {
                            Id = 323,
                            EntityType = "Ingredient",
                            Name = "Hvit pepper, grovmalt",
                            NormalizedName = "hvit pepper grovmalt",
                            Url = "hvit-pepper-grovmalt"
                        },
                        new
                        {
                            Id = 324,
                            EntityType = "Ingredient",
                            Name = "Hvit pepper, malt",
                            NormalizedName = "hvit pepper malt",
                            Url = "hvit-pepper-malt"
                        },
                        new
                        {
                            Id = 325,
                            EntityType = "Ingredient",
                            Name = "Karri",
                            NormalizedName = "karri",
                            Url = "karri"
                        },
                        new
                        {
                            Id = 326,
                            EntityType = "Ingredient",
                            Name = "Kanel, hel",
                            NormalizedName = "kanel hel",
                            Url = "kanel-hel"
                        },
                        new
                        {
                            Id = 327,
                            EntityType = "Ingredient",
                            Name = "Kanel, malt",
                            NormalizedName = "kanel malt",
                            Url = "kanel-malt"
                        },
                        new
                        {
                            Id = 328,
                            EntityType = "Ingredient",
                            Name = "Kardemomme",
                            NormalizedName = "kardemomme",
                            Url = "kardemomme"
                        },
                        new
                        {
                            Id = 329,
                            EntityType = "Ingredient",
                            Name = "Hvitløkspulver",
                            NormalizedName = "hvitløkspulver",
                            Url = "hvitlokspulver"
                        },
                        new
                        {
                            Id = 330,
                            EntityType = "Ingredient",
                            Name = "Chilipulver",
                            NormalizedName = "chilipulver",
                            Url = "chilipulver"
                        },
                        new
                        {
                            Id = 331,
                            EntityType = "Ingredient",
                            Name = "Paprikapulver",
                            NormalizedName = "paprikapulver",
                            Url = "paprikapulver"
                        },
                        new
                        {
                            Id = 332,
                            EntityType = "Ingredient",
                            Name = "Paprikapulver, røkt",
                            NormalizedName = "paprikapulver røkt",
                            Url = "paprikapulver-rokt"
                        },
                        new
                        {
                            Id = 333,
                            EntityType = "Ingredient",
                            Name = "Rosmarin, tørket",
                            NormalizedName = "rosmarin tørket",
                            Url = "rosmarin-torket"
                        },
                        new
                        {
                            Id = 334,
                            EntityType = "Ingredient",
                            Name = "Dill, tørket",
                            NormalizedName = "dill tørket",
                            Url = "dill-torket"
                        },
                        new
                        {
                            Id = 335,
                            EntityType = "Ingredient",
                            Name = "Oregano, tørket",
                            NormalizedName = "oregano tørket",
                            Url = "oregano-torket"
                        },
                        new
                        {
                            Id = 336,
                            EntityType = "Ingredient",
                            Name = "Basilikum, tørket",
                            NormalizedName = "basilikum tørket",
                            Url = "basilikum-torket"
                        },
                        new
                        {
                            Id = 337,
                            EntityType = "Ingredient",
                            Name = "Spisskum",
                            NormalizedName = "spisskum",
                            Url = "spisskum"
                        },
                        new
                        {
                            Id = 338,
                            EntityType = "Ingredient",
                            Name = "Karve",
                            NormalizedName = "karve",
                            Url = "karve"
                        },
                        new
                        {
                            Id = 339,
                            EntityType = "Nutrient",
                            Name = "Protein",
                            NormalizedName = "protein",
                            Url = "protein"
                        },
                        new
                        {
                            Id = 340,
                            EntityType = "Nutrient",
                            Name = "Karbohydrater",
                            NormalizedName = "karbohydrater",
                            Url = "karbohydrater"
                        },
                        new
                        {
                            Id = 341,
                            EntityType = "Nutrient",
                            Name = "Sukkerarter",
                            NormalizedName = "sukkerarter",
                            Url = "sukkerarter"
                        },
                        new
                        {
                            Id = 342,
                            EntityType = "Nutrient",
                            Name = "Polyoler",
                            NormalizedName = "polyoler",
                            Url = "polyoler"
                        },
                        new
                        {
                            Id = 343,
                            EntityType = "Nutrient",
                            Name = "Stivelse",
                            NormalizedName = "stivelse",
                            Url = "stivelse"
                        },
                        new
                        {
                            Id = 344,
                            EntityType = "Nutrient",
                            Name = "Fett",
                            NormalizedName = "fett",
                            Url = "fett"
                        },
                        new
                        {
                            Id = 345,
                            EntityType = "Nutrient",
                            Name = "Mettet fett",
                            NormalizedName = "mettet fett",
                            Url = "mettet-fett"
                        },
                        new
                        {
                            Id = 346,
                            EntityType = "Nutrient",
                            Name = "Enumettet fett",
                            NormalizedName = "enumettet fett",
                            Url = "enumettet-fett"
                        },
                        new
                        {
                            Id = 347,
                            EntityType = "Nutrient",
                            Name = "Flerumettet fett",
                            NormalizedName = "flerumettet fett",
                            Url = "flerumettet-fett"
                        },
                        new
                        {
                            Id = 348,
                            EntityType = "Nutrient",
                            Name = "Transfett",
                            NormalizedName = "transfett",
                            Url = "transfett"
                        },
                        new
                        {
                            Id = 349,
                            EntityType = "Nutrient",
                            Name = "Vitamin A, retinol",
                            NormalizedName = "vitamin a retinol",
                            Url = "vitamin-a-retinol"
                        },
                        new
                        {
                            Id = 350,
                            EntityType = "Nutrient",
                            Name = "Vitamin B1, tiamin",
                            NormalizedName = "vitamin b1 tiamin",
                            Url = "vitamin-b1-tiamin"
                        },
                        new
                        {
                            Id = 351,
                            EntityType = "Nutrient",
                            Name = "Vitamin B2, riboflavin",
                            NormalizedName = "vitamin b2 riboflavin",
                            Url = "vitamin-b2-riboflavin"
                        },
                        new
                        {
                            Id = 352,
                            EntityType = "Nutrient",
                            Name = "Vitamin B3, niacin",
                            NormalizedName = "vitamin b3 niacin",
                            Url = "vitamin-b3-niacin"
                        },
                        new
                        {
                            Id = 353,
                            EntityType = "Nutrient",
                            Name = "Vitamin B5, pantotensyre",
                            NormalizedName = "vitamin b5 pantotensyre",
                            Url = "vitamin-b5-pantotensyre"
                        },
                        new
                        {
                            Id = 354,
                            EntityType = "Nutrient",
                            Name = "Vitamin B7, biotin",
                            NormalizedName = "vitamin b7 biotin",
                            Url = "vitamin-b7-biotin"
                        },
                        new
                        {
                            Id = 355,
                            EntityType = "Nutrient",
                            Name = "Vitamin B9, folat",
                            NormalizedName = "vitamin b9 folat",
                            Url = "vitamin-b9-folat"
                        },
                        new
                        {
                            Id = 356,
                            EntityType = "Nutrient",
                            Name = "Vitamin B12, kobalamin",
                            NormalizedName = "vitamin b12 kobalamin",
                            Url = "vitamin-b12-kobalamin"
                        },
                        new
                        {
                            Id = 357,
                            EntityType = "Nutrient",
                            Name = "Vitamin C, askorbinsyre",
                            NormalizedName = "vitamin c askorbinsyre",
                            Url = "vitamin-c-askorbinsyre"
                        },
                        new
                        {
                            Id = 358,
                            EntityType = "Nutrient",
                            Name = "Vitamin D2, ergokalsiferol",
                            NormalizedName = "vitamin d2 ergokalsiferol",
                            Url = "vitamin-d2-ergokalsiferol"
                        },
                        new
                        {
                            Id = 359,
                            EntityType = "Nutrient",
                            Name = "Vitamin D3, kolikalsiferol",
                            NormalizedName = "vitamin d3 kolikalsiferol",
                            Url = "vitamin-d3-kolikalsiferol"
                        },
                        new
                        {
                            Id = 360,
                            EntityType = "Nutrient",
                            Name = "Vitamin E, tokoferol (E306)",
                            NormalizedName = "vitamin e tokoferol e306",
                            Url = "vitamin-e-tokoferol-e306"
                        },
                        new
                        {
                            Id = 361,
                            EntityType = "Nutrient",
                            Name = "Vitamin K1, fyllokinon",
                            NormalizedName = "vitamin k1 fyllokinon",
                            Url = "vitamin-k1-fyllokinon"
                        },
                        new
                        {
                            Id = 362,
                            EntityType = "Nutrient",
                            Name = "Vitamin K2, menakinon",
                            NormalizedName = "vitamin k2 menakinon",
                            Url = "vitamin-k2-menakinon"
                        },
                        new
                        {
                            Id = 363,
                            EntityType = "Nutrient",
                            Name = "Kalium",
                            NormalizedName = "kalium",
                            Url = "kalium"
                        },
                        new
                        {
                            Id = 364,
                            EntityType = "Nutrient",
                            Name = "Klorin",
                            NormalizedName = "klorin",
                            Url = "klorin"
                        },
                        new
                        {
                            Id = 365,
                            EntityType = "Nutrient",
                            Name = "Natrium",
                            NormalizedName = "natrium",
                            Url = "natrium"
                        },
                        new
                        {
                            Id = 366,
                            EntityType = "Nutrient",
                            Name = "Kalsium",
                            NormalizedName = "kalsium",
                            Url = "kalsium"
                        },
                        new
                        {
                            Id = 367,
                            EntityType = "Nutrient",
                            Name = "Fosfor",
                            NormalizedName = "fosfor",
                            Url = "fosfor"
                        },
                        new
                        {
                            Id = 368,
                            EntityType = "Nutrient",
                            Name = "Magnesium",
                            NormalizedName = "magnesium",
                            Url = "magnesium"
                        },
                        new
                        {
                            Id = 369,
                            EntityType = "Nutrient",
                            Name = "Jern",
                            NormalizedName = "jern",
                            Url = "jern"
                        },
                        new
                        {
                            Id = 370,
                            EntityType = "Nutrient",
                            Name = "Sink",
                            NormalizedName = "sink",
                            Url = "sink"
                        },
                        new
                        {
                            Id = 371,
                            EntityType = "Nutrient",
                            Name = "Mangan",
                            NormalizedName = "mangan",
                            Url = "mangan"
                        },
                        new
                        {
                            Id = 372,
                            EntityType = "Nutrient",
                            Name = "Kobber",
                            NormalizedName = "kobber",
                            Url = "kobber"
                        },
                        new
                        {
                            Id = 373,
                            EntityType = "Nutrient",
                            Name = "Jod",
                            NormalizedName = "jod",
                            Url = "jod"
                        },
                        new
                        {
                            Id = 374,
                            EntityType = "Nutrient",
                            Name = "Molybden",
                            NormalizedName = "molybden",
                            Url = "molybden"
                        },
                        new
                        {
                            Id = 375,
                            EntityType = "Nutrient",
                            Name = "Selen",
                            NormalizedName = "selen",
                            Url = "selen"
                        },
                        new
                        {
                            Id = 376,
                            EntityType = "Nutrient",
                            Name = "Fluor",
                            NormalizedName = "fluor",
                            Url = "fluor"
                        },
                        new
                        {
                            Id = 377,
                            EntityType = "Nutrient",
                            Name = "Krom",
                            NormalizedName = "krom",
                            Url = "krom"
                        },
                        new
                        {
                            Id = 378,
                            EntityType = "Nutrient",
                            Name = "Nikkel",
                            NormalizedName = "nikkel",
                            Url = "nikkel"
                        },
                        new
                        {
                            Id = 379,
                            EntityType = "Nutrient",
                            Name = "Bor",
                            NormalizedName = "bor",
                            Url = "bor"
                        },
                        new
                        {
                            Id = 380,
                            EntityType = "Nutrient",
                            Name = "Silisium",
                            NormalizedName = "silisium",
                            Url = "silisium"
                        },
                        new
                        {
                            Id = 381,
                            EntityType = "Nutrient",
                            Name = "Vanadium",
                            NormalizedName = "vanadium",
                            Url = "vanadium"
                        },
                        new
                        {
                            Id = 382,
                            EntityType = "Nutrient",
                            Name = "Salt",
                            NormalizedName = "salt",
                            Url = "salt"
                        },
                        new
                        {
                            Id = 383,
                            EntityType = "Allergen",
                            Name = "Krepsdyr",
                            NormalizedName = "krepsdyr",
                            Url = "krepsdyr"
                        },
                        new
                        {
                            Id = 384,
                            EntityType = "Allergen",
                            Name = "Sesamfrø",
                            NormalizedName = "sesamfrø",
                            Url = "sesamfro"
                        },
                        new
                        {
                            Id = 385,
                            EntityType = "Allergen",
                            Name = "Nøtter",
                            NormalizedName = "nøtter",
                            Url = "notter"
                        },
                        new
                        {
                            Id = 386,
                            EntityType = "Allergen",
                            Name = "Gluten",
                            NormalizedName = "gluten",
                            Url = "gluten"
                        },
                        new
                        {
                            Id = 387,
                            EntityType = "Allergen",
                            Name = "Egg",
                            NormalizedName = "egg",
                            Url = "egg"
                        },
                        new
                        {
                            Id = 388,
                            EntityType = "Allergen",
                            Name = "Fisk",
                            NormalizedName = "fisk",
                            Url = "fisk"
                        },
                        new
                        {
                            Id = 389,
                            EntityType = "Allergen",
                            Name = "Skalldyr",
                            NormalizedName = "skalldyr",
                            Url = "skalldyr"
                        },
                        new
                        {
                            Id = 390,
                            EntityType = "Allergen",
                            Name = "Sennep",
                            NormalizedName = "sennep",
                            Url = "sennep"
                        },
                        new
                        {
                            Id = 391,
                            EntityType = "Allergen",
                            Name = "Selleri",
                            NormalizedName = "selleri",
                            Url = "selleri"
                        },
                        new
                        {
                            Id = 392,
                            EntityType = "Allergen",
                            Name = "Peanøtter",
                            NormalizedName = "peanøtter",
                            Url = "peanotter"
                        },
                        new
                        {
                            Id = 393,
                            EntityType = "Allergen",
                            Name = "Melk",
                            NormalizedName = "melk",
                            Url = "melk"
                        },
                        new
                        {
                            Id = 394,
                            EntityType = "Allergen",
                            Name = "Sulfitt",
                            NormalizedName = "sulfitt",
                            Url = "sulfitt"
                        },
                        new
                        {
                            Id = 395,
                            EntityType = "Allergen",
                            Name = "Soya",
                            NormalizedName = "soya",
                            Url = "soya"
                        },
                        new
                        {
                            Id = 396,
                            EntityType = "Allergen",
                            Name = "Lupin",
                            NormalizedName = "lupin",
                            Url = "lupin"
                        });
                });

            modelBuilder.Entity("MenuPlanner.Models.Entities.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateRegistered")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTime?>("EmailConfirmationExpiryDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("Facebook")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("HasBackgropImage")
                        .HasColumnType("bit");

                    b.Property<bool>("HasProfileImage")
                        .HasColumnType("bit");

                    b.Property<string>("Instagram")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Introduction")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TwitterX")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Website")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "97eb4532-3e83-409e-a6f3-bbcceec0c5e7",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "bdebb2f9-a1a3-4ef0-9581-c65a56f43a55",
                            DateRegistered = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "admin@menuplanner.yes",
                            EmailConfirmed = false,
                            FirstName = "Adam I.",
                            HasBackgropImage = false,
                            HasProfileImage = false,
                            Introduction = "",
                            LastName = "Strator",
                            LockoutEnabled = false,
                            NormalizedEmail = "ADMIN@MENUPLANNER.YES",
                            NormalizedUserName = "ADMIN@MENUPLANNER.YES",
                            PhoneNumber = "99999999",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "5dcf1ea2-11c7-4c32-9802-858b99ea4cb2",
                            TwoFactorEnabled = false,
                            UserName = "admin@menuplanner.yes"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "b92ae293-6057-4a78-9abe-dc2b9f17751a",
                            Name = "SysAdmin",
                            NormalizedName = "SYSADMIN"
                        },
                        new
                        {
                            Id = "d8807d97-c20f-4ab7-a3ca-366b48f77374",
                            Name = "UserAdmin",
                            NormalizedName = "USERADMIN"
                        },
                        new
                        {
                            Id = "6cc714ff-e99b-4f06-82a8-75bfc53015d4",
                            Name = "RecipeEditor",
                            NormalizedName = "RECIPEEDITOR"
                        },
                        new
                        {
                            Id = "251e4921-9ff5-4092-b0ae-3ce24df0d7a9",
                            Name = "RecipeMod",
                            NormalizedName = "RECIPEMOD"
                        },
                        new
                        {
                            Id = "1b668c8e-99f6-4171-906d-37fb78724c2b",
                            Name = "IngredientEditor",
                            NormalizedName = "INGREDIENTEDITOR"
                        },
                        new
                        {
                            Id = "667dec01-4984-4784-a324-8c90229cbfbf",
                            Name = "IngredientMod",
                            NormalizedName = "INGREDIENTMOD"
                        },
                        new
                        {
                            Id = "db3190ad-71ea-46ba-898e-661637789ce5",
                            Name = "NutrientAdmin",
                            NormalizedName = "NUTRIENTADMIN"
                        },
                        new
                        {
                            Id = "58da53ae-f365-4ff8-b127-2d75b3e386ad",
                            Name = "AllergenAdmin",
                            NormalizedName = "ALLERGENADMIN"
                        },
                        new
                        {
                            Id = "7b3fa5c1-2eea-465f-8857-847dd188b04f",
                            Name = "ArticleEditor",
                            NormalizedName = "ARTICLEEDITOR"
                        },
                        new
                        {
                            Id = "89f2b59b-167f-4820-971e-f45549d9b5d3",
                            Name = "ArticleMod",
                            NormalizedName = "ARTICLEMOD"
                        },
                        new
                        {
                            Id = "2304028e-176a-41bc-a7f2-fddd3664f9d5",
                            Name = "CommunityMod",
                            NormalizedName = "COMMUNITYMOD"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = "97eb4532-3e83-409e-a6f3-bbcceec0c5e7",
                            RoleId = "b92ae293-6057-4a78-9abe-dc2b9f17751a"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("MenuPlanner.Models.Entities.IngredientAllergen", b =>
                {
                    b.HasOne("MenuPlanner.Models.Entities.Allergen", "Allergen")
                        .WithMany()
                        .HasForeignKey("AllergenId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MenuPlanner.Models.Entities.Ingredient", "Ingredient")
                        .WithMany("IngredientAllergens")
                        .HasForeignKey("IngredientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Allergen");

                    b.Navigation("Ingredient");
                });

            modelBuilder.Entity("MenuPlanner.Models.Entities.IngredientNutrient", b =>
                {
                    b.HasOne("MenuPlanner.Models.Entities.Ingredient", "Ingredient")
                        .WithMany("IngredientNutrients")
                        .HasForeignKey("IngredientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MenuPlanner.Models.Entities.Nutrient", "Nutrient")
                        .WithMany()
                        .HasForeignKey("NutrientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ingredient");

                    b.Navigation("Nutrient");
                });

            modelBuilder.Entity("MenuPlanner.Models.Entities.Recipe", b =>
                {
                    b.HasOne("MenuPlanner.Models.Entities.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryCode");

                    b.HasOne("MenuPlanner.Models.Entities.Recipe", null)
                        .WithMany("SubRecipes")
                        .HasForeignKey("ParentRecipeId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("MenuPlanner.Models.Entities.User", "User")
                        .WithMany("Recipes")
                        .HasForeignKey("UserId");

                    b.Navigation("Country");

                    b.Navigation("User");
                });

            modelBuilder.Entity("MenuPlanner.Models.Entities.RecipeIngredient", b =>
                {
                    b.HasOne("MenuPlanner.Models.Entities.Ingredient", "Ingredient")
                        .WithMany("RecipeIngredients")
                        .HasForeignKey("IngredientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MenuPlanner.Models.Entities.Recipe", "Recipe")
                        .WithMany("RecipeIngredients")
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ingredient");

                    b.Navigation("Recipe");
                });

            modelBuilder.Entity("MenuPlanner.Models.Entities.RecipeStep", b =>
                {
                    b.HasOne("MenuPlanner.Models.Entities.Recipe", "Recipe")
                        .WithMany("Steps")
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Recipe");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("MenuPlanner.Models.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("MenuPlanner.Models.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MenuPlanner.Models.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("MenuPlanner.Models.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MenuPlanner.Models.Entities.Ingredient", b =>
                {
                    b.Navigation("IngredientAllergens");

                    b.Navigation("IngredientNutrients");

                    b.Navigation("RecipeIngredients");
                });

            modelBuilder.Entity("MenuPlanner.Models.Entities.Recipe", b =>
                {
                    b.Navigation("RecipeIngredients");

                    b.Navigation("Steps");

                    b.Navigation("SubRecipes");
                });

            modelBuilder.Entity("MenuPlanner.Models.Entities.User", b =>
                {
                    b.Navigation("Recipes");
                });
#pragma warning restore 612, 618
        }
    }
}
