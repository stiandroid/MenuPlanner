// <auto-generated />
using System;
using MenuPlanner.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MenuPlanner.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20240210212732_MinorChangesToRecipe")]
    partial class MinorChangesToRecipe
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MenuPlanner.Models.Entities.Allergen", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Icon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsPublished")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Allergens");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateCreated = new DateTime(2024, 2, 10, 22, 27, 31, 234, DateTimeKind.Local).AddTicks(1554),
                            DateUpdated = new DateTime(2024, 2, 10, 22, 27, 31, 237, DateTimeKind.Local).AddTicks(1848),
                            Description = "Informasjon",
                            Icon = "",
                            Image = "crustacean.png",
                            IsPublished = true,
                            Name = "Krepsdyr",
                            Url = "krepsdyr"
                        },
                        new
                        {
                            Id = 2,
                            DateCreated = new DateTime(2024, 2, 10, 22, 27, 31, 237, DateTimeKind.Local).AddTicks(3143),
                            DateUpdated = new DateTime(2024, 2, 10, 22, 27, 31, 237, DateTimeKind.Local).AddTicks(3155),
                            Description = "Informasjon",
                            Icon = "",
                            Image = "sesame.png",
                            IsPublished = true,
                            Name = "Sesamfrø",
                            Url = "sesamfro"
                        },
                        new
                        {
                            Id = 3,
                            DateCreated = new DateTime(2024, 2, 10, 22, 27, 31, 237, DateTimeKind.Local).AddTicks(3159),
                            DateUpdated = new DateTime(2024, 2, 10, 22, 27, 31, 237, DateTimeKind.Local).AddTicks(3162),
                            Description = "Informasjon",
                            Icon = "",
                            Image = "nuts.png",
                            IsPublished = true,
                            Name = "Nøtter",
                            Url = "notter"
                        },
                        new
                        {
                            Id = 4,
                            DateCreated = new DateTime(2024, 2, 10, 22, 27, 31, 237, DateTimeKind.Local).AddTicks(3165),
                            DateUpdated = new DateTime(2024, 2, 10, 22, 27, 31, 237, DateTimeKind.Local).AddTicks(3168),
                            Description = "Informasjon",
                            Icon = "",
                            Image = "gluten.png",
                            IsPublished = true,
                            Name = "Gluten",
                            Url = "gluten"
                        },
                        new
                        {
                            Id = 5,
                            DateCreated = new DateTime(2024, 2, 10, 22, 27, 31, 237, DateTimeKind.Local).AddTicks(3172),
                            DateUpdated = new DateTime(2024, 2, 10, 22, 27, 31, 237, DateTimeKind.Local).AddTicks(3174),
                            Description = "Informasjon",
                            Icon = "",
                            Image = "egg.png",
                            IsPublished = true,
                            Name = "Egg",
                            Url = "egg"
                        },
                        new
                        {
                            Id = 6,
                            DateCreated = new DateTime(2024, 2, 10, 22, 27, 31, 237, DateTimeKind.Local).AddTicks(3178),
                            DateUpdated = new DateTime(2024, 2, 10, 22, 27, 31, 237, DateTimeKind.Local).AddTicks(3180),
                            Description = "Informasjon",
                            Icon = "",
                            Image = "fish.png",
                            IsPublished = true,
                            Name = "Fisk",
                            Url = "fisk"
                        },
                        new
                        {
                            Id = 7,
                            DateCreated = new DateTime(2024, 2, 10, 22, 27, 31, 237, DateTimeKind.Local).AddTicks(3184),
                            DateUpdated = new DateTime(2024, 2, 10, 22, 27, 31, 237, DateTimeKind.Local).AddTicks(3187),
                            Description = "Informasjon",
                            Icon = "",
                            Image = "shellfish.png",
                            IsPublished = true,
                            Name = "Skalldyr",
                            Url = "skalldyr"
                        },
                        new
                        {
                            Id = 8,
                            DateCreated = new DateTime(2024, 2, 10, 22, 27, 31, 237, DateTimeKind.Local).AddTicks(3190),
                            DateUpdated = new DateTime(2024, 2, 10, 22, 27, 31, 237, DateTimeKind.Local).AddTicks(3193),
                            Description = "Informasjon",
                            Icon = "",
                            Image = "mustard.png",
                            IsPublished = true,
                            Name = "Sennep",
                            Url = "sennep"
                        },
                        new
                        {
                            Id = 9,
                            DateCreated = new DateTime(2024, 2, 10, 22, 27, 31, 237, DateTimeKind.Local).AddTicks(3196),
                            DateUpdated = new DateTime(2024, 2, 10, 22, 27, 31, 237, DateTimeKind.Local).AddTicks(3199),
                            Description = "Informasjon",
                            Icon = "",
                            Image = "celery.png",
                            IsPublished = true,
                            Name = "Selleri",
                            Url = "selleri"
                        },
                        new
                        {
                            Id = 10,
                            DateCreated = new DateTime(2024, 2, 10, 22, 27, 31, 237, DateTimeKind.Local).AddTicks(3203),
                            DateUpdated = new DateTime(2024, 2, 10, 22, 27, 31, 237, DateTimeKind.Local).AddTicks(3205),
                            Description = "Informasjon",
                            Icon = "",
                            Image = "peanuts.png",
                            IsPublished = true,
                            Name = "Peanøtter",
                            Url = "peanotter"
                        },
                        new
                        {
                            Id = 11,
                            DateCreated = new DateTime(2024, 2, 10, 22, 27, 31, 237, DateTimeKind.Local).AddTicks(3209),
                            DateUpdated = new DateTime(2024, 2, 10, 22, 27, 31, 237, DateTimeKind.Local).AddTicks(3211),
                            Description = "Informasjon",
                            Icon = "",
                            Image = "milk.png",
                            IsPublished = true,
                            Name = "Melk",
                            Url = "melk"
                        },
                        new
                        {
                            Id = 12,
                            DateCreated = new DateTime(2024, 2, 10, 22, 27, 31, 237, DateTimeKind.Local).AddTicks(3244),
                            DateUpdated = new DateTime(2024, 2, 10, 22, 27, 31, 237, DateTimeKind.Local).AddTicks(3246),
                            Description = "Informasjon",
                            Icon = "",
                            Image = "sulphite.png",
                            IsPublished = true,
                            Name = "Sulfitt",
                            Url = "sulfitt"
                        },
                        new
                        {
                            Id = 13,
                            DateCreated = new DateTime(2024, 2, 10, 22, 27, 31, 237, DateTimeKind.Local).AddTicks(3250),
                            DateUpdated = new DateTime(2024, 2, 10, 22, 27, 31, 237, DateTimeKind.Local).AddTicks(3253),
                            Description = "Informasjon",
                            Icon = "",
                            Image = "",
                            IsPublished = true,
                            Name = "Soya",
                            Url = "soya"
                        },
                        new
                        {
                            Id = 14,
                            DateCreated = new DateTime(2024, 2, 10, 22, 27, 31, 237, DateTimeKind.Local).AddTicks(3256),
                            DateUpdated = new DateTime(2024, 2, 10, 22, 27, 31, 237, DateTimeKind.Local).AddTicks(3259),
                            Description = "Informasjon",
                            Icon = "",
                            Image = "",
                            IsPublished = true,
                            Name = "Lupin",
                            Url = "lupin"
                        });
                });

            modelBuilder.Entity("MenuPlanner.Models.Entities.Country", b =>
                {
                    b.Property<string>("ISO3166_2")
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ISO3166_2");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            ISO3166_2 = "DE",
                            Name = "Tyskland"
                        },
                        new
                        {
                            ISO3166_2 = "DK",
                            Name = "Danmark"
                        },
                        new
                        {
                            ISO3166_2 = "ES",
                            Name = "Spania"
                        },
                        new
                        {
                            ISO3166_2 = "FR",
                            Name = "Frankrike"
                        },
                        new
                        {
                            ISO3166_2 = "GR",
                            Name = "Hellas"
                        },
                        new
                        {
                            ISO3166_2 = "IT",
                            Name = "Italia"
                        },
                        new
                        {
                            ISO3166_2 = "JP",
                            Name = "Japan"
                        },
                        new
                        {
                            ISO3166_2 = "MX",
                            Name = "Mexico"
                        },
                        new
                        {
                            ISO3166_2 = "NO",
                            Name = "Norge"
                        },
                        new
                        {
                            ISO3166_2 = "PT",
                            Name = "Portugal"
                        },
                        new
                        {
                            ISO3166_2 = "SE",
                            Name = "Sverige"
                        },
                        new
                        {
                            ISO3166_2 = "TH",
                            Name = "Thailand"
                        });
                });

            modelBuilder.Entity("MenuPlanner.Models.Entities.Ingredient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateVerified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("EnergyKcalPer100g")
                        .HasColumnType("float");

                    b.Property<bool>("HasImage")
                        .HasColumnType("bit");

                    b.Property<bool>("IsNutritionallyVerified")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPublished")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VerificationAuthority")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VerificationAuthorityPerson")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Ingredients");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateCreated = new DateTime(2024, 2, 10, 22, 27, 31, 237, DateTimeKind.Local).AddTicks(5639),
                            DateUpdated = new DateTime(2024, 2, 10, 22, 27, 31, 237, DateTimeKind.Local).AddTicks(5960),
                            Description = "Informasjon",
                            EnergyKcalPer100g = 0.0,
                            HasImage = false,
                            IsNutritionallyVerified = false,
                            IsPublished = true,
                            Name = "Hvetemel",
                            Type = 4,
                            Url = "hvetemel"
                        },
                        new
                        {
                            Id = 2,
                            DateCreated = new DateTime(2024, 2, 10, 22, 27, 31, 237, DateTimeKind.Local).AddTicks(7553),
                            DateUpdated = new DateTime(2024, 2, 10, 22, 27, 31, 237, DateTimeKind.Local).AddTicks(7564),
                            Description = "Informasjon",
                            EnergyKcalPer100g = 0.0,
                            HasImage = false,
                            IsNutritionallyVerified = false,
                            IsPublished = true,
                            Name = "Sammalt hvete, grovmalt",
                            Type = 4,
                            Url = "sammalt-hvete-grovmalt"
                        },
                        new
                        {
                            Id = 3,
                            DateCreated = new DateTime(2024, 2, 10, 22, 27, 31, 237, DateTimeKind.Local).AddTicks(7573),
                            DateUpdated = new DateTime(2024, 2, 10, 22, 27, 31, 237, DateTimeKind.Local).AddTicks(7575),
                            Description = "Informasjon",
                            EnergyKcalPer100g = 0.0,
                            HasImage = false,
                            IsNutritionallyVerified = false,
                            IsPublished = true,
                            Name = "Sammalt hvete, finmalt",
                            Type = 4,
                            Url = "sammalt-hvete-finmalt"
                        },
                        new
                        {
                            Id = 4,
                            DateCreated = new DateTime(2024, 2, 10, 22, 27, 31, 237, DateTimeKind.Local).AddTicks(7582),
                            DateUpdated = new DateTime(2024, 2, 10, 22, 27, 31, 237, DateTimeKind.Local).AddTicks(7585),
                            Description = "Informasjon",
                            EnergyKcalPer100g = 0.0,
                            HasImage = false,
                            IsNutritionallyVerified = false,
                            IsPublished = true,
                            Name = "Hvete helkorn",
                            Type = 4,
                            Url = "hvete-helkorn"
                        },
                        new
                        {
                            Id = 5,
                            DateCreated = new DateTime(2024, 2, 10, 22, 27, 31, 237, DateTimeKind.Local).AddTicks(7591),
                            DateUpdated = new DateTime(2024, 2, 10, 22, 27, 31, 237, DateTimeKind.Local).AddTicks(7594),
                            Description = "Informasjon",
                            EnergyKcalPer100g = 0.0,
                            HasImage = false,
                            IsNutritionallyVerified = false,
                            IsPublished = true,
                            Name = "Havregryn, lettkokt",
                            Type = 4,
                            Url = "havregryn-lettkokt"
                        },
                        new
                        {
                            Id = 6,
                            DateCreated = new DateTime(2024, 2, 10, 22, 27, 31, 237, DateTimeKind.Local).AddTicks(7601),
                            DateUpdated = new DateTime(2024, 2, 10, 22, 27, 31, 237, DateTimeKind.Local).AddTicks(7604),
                            Description = "Informasjon",
                            EnergyKcalPer100g = 0.0,
                            HasImage = false,
                            IsNutritionallyVerified = false,
                            IsPublished = true,
                            Name = "Havregryn, store",
                            Type = 4,
                            Url = "havregryn-store"
                        },
                        new
                        {
                            Id = 7,
                            DateCreated = new DateTime(2024, 2, 10, 22, 27, 31, 237, DateTimeKind.Local).AddTicks(7707),
                            DateUpdated = new DateTime(2024, 2, 10, 22, 27, 31, 237, DateTimeKind.Local).AddTicks(7710),
                            Description = "Informasjon",
                            EnergyKcalPer100g = 0.0,
                            HasImage = false,
                            IsNutritionallyVerified = false,
                            IsPublished = true,
                            Name = "Havregryn, glutenfri",
                            Type = 4,
                            Url = "havregryn-glutenfri"
                        },
                        new
                        {
                            Id = 8,
                            DateCreated = new DateTime(2024, 2, 10, 22, 27, 31, 237, DateTimeKind.Local).AddTicks(7717),
                            DateUpdated = new DateTime(2024, 2, 10, 22, 27, 31, 237, DateTimeKind.Local).AddTicks(7720),
                            Description = "Informasjon",
                            EnergyKcalPer100g = 0.0,
                            HasImage = false,
                            IsNutritionallyVerified = false,
                            IsPublished = true,
                            Name = "Havremel",
                            Type = 4,
                            Url = "havremel"
                        },
                        new
                        {
                            Id = 9,
                            DateCreated = new DateTime(2024, 2, 10, 22, 27, 31, 237, DateTimeKind.Local).AddTicks(7727),
                            DateUpdated = new DateTime(2024, 2, 10, 22, 27, 31, 237, DateTimeKind.Local).AddTicks(7729),
                            Description = "Informasjon",
                            EnergyKcalPer100g = 0.0,
                            HasImage = false,
                            IsNutritionallyVerified = false,
                            IsPublished = true,
                            Name = "Rug, helkorn",
                            Type = 4,
                            Url = "rug-helkorn"
                        },
                        new
                        {
                            Id = 10,
                            DateCreated = new DateTime(2024, 2, 10, 22, 27, 31, 237, DateTimeKind.Local).AddTicks(7751),
                            DateUpdated = new DateTime(2024, 2, 10, 22, 27, 31, 237, DateTimeKind.Local).AddTicks(7753),
                            Description = "Informasjon",
                            EnergyKcalPer100g = 0.0,
                            HasImage = false,
                            IsNutritionallyVerified = false,
                            IsPublished = true,
                            Name = "Rugmel",
                            Type = 4,
                            Url = "rugmel"
                        },
                        new
                        {
                            Id = 11,
                            DateCreated = new DateTime(2024, 2, 10, 22, 27, 31, 237, DateTimeKind.Local).AddTicks(7761),
                            DateUpdated = new DateTime(2024, 2, 10, 22, 27, 31, 237, DateTimeKind.Local).AddTicks(7763),
                            Description = "Informasjon",
                            EnergyKcalPer100g = 0.0,
                            HasImage = false,
                            IsNutritionallyVerified = false,
                            IsPublished = true,
                            Name = "Bygg, helkorn",
                            Type = 4,
                            Url = "bygg-helkorn"
                        },
                        new
                        {
                            Id = 12,
                            DateCreated = new DateTime(2024, 2, 10, 22, 27, 31, 237, DateTimeKind.Local).AddTicks(7770),
                            DateUpdated = new DateTime(2024, 2, 10, 22, 27, 31, 237, DateTimeKind.Local).AddTicks(7773),
                            Description = "Informasjon",
                            EnergyKcalPer100g = 0.0,
                            HasImage = false,
                            IsNutritionallyVerified = false,
                            IsPublished = true,
                            Name = "Byggmel",
                            Type = 4,
                            Url = "byggmel"
                        },
                        new
                        {
                            Id = 13,
                            DateCreated = new DateTime(2024, 2, 10, 22, 27, 31, 237, DateTimeKind.Local).AddTicks(7779),
                            DateUpdated = new DateTime(2024, 2, 10, 22, 27, 31, 237, DateTimeKind.Local).AddTicks(7782),
                            Description = "Informasjon",
                            EnergyKcalPer100g = 0.0,
                            HasImage = false,
                            IsNutritionallyVerified = false,
                            IsPublished = true,
                            Name = "Gresskarkjerner",
                            Type = 4,
                            Url = "gresskarkjerner"
                        },
                        new
                        {
                            Id = 14,
                            DateCreated = new DateTime(2024, 2, 10, 22, 27, 31, 237, DateTimeKind.Local).AddTicks(7788),
                            DateUpdated = new DateTime(2024, 2, 10, 22, 27, 31, 237, DateTimeKind.Local).AddTicks(7791),
                            Description = "Informasjon",
                            EnergyKcalPer100g = 0.0,
                            HasImage = false,
                            IsNutritionallyVerified = false,
                            IsPublished = true,
                            Name = "Skummet melk",
                            Type = 2,
                            Url = "skummet-melk"
                        },
                        new
                        {
                            Id = 15,
                            DateCreated = new DateTime(2024, 2, 10, 22, 27, 31, 237, DateTimeKind.Local).AddTicks(7797),
                            DateUpdated = new DateTime(2024, 2, 10, 22, 27, 31, 237, DateTimeKind.Local).AddTicks(7800),
                            Description = "Informasjon",
                            EnergyKcalPer100g = 41.0,
                            HasImage = false,
                            IsNutritionallyVerified = false,
                            IsPublished = true,
                            Name = "Lettmelk",
                            Type = 2,
                            Url = "lettmelk"
                        },
                        new
                        {
                            Id = 16,
                            DateCreated = new DateTime(2024, 2, 10, 22, 27, 31, 237, DateTimeKind.Local).AddTicks(8162),
                            DateUpdated = new DateTime(2024, 2, 10, 22, 27, 31, 237, DateTimeKind.Local).AddTicks(8170),
                            Description = "Informasjon",
                            EnergyKcalPer100g = 0.0,
                            HasImage = false,
                            IsNutritionallyVerified = false,
                            IsPublished = true,
                            Name = "Helmelk",
                            Type = 2,
                            Url = "helmelk"
                        },
                        new
                        {
                            Id = 17,
                            DateCreated = new DateTime(2024, 2, 10, 22, 27, 31, 237, DateTimeKind.Local).AddTicks(8177),
                            DateUpdated = new DateTime(2024, 2, 10, 22, 27, 31, 237, DateTimeKind.Local).AddTicks(8180),
                            Description = "Informasjon",
                            EnergyKcalPer100g = 0.0,
                            HasImage = false,
                            IsNutritionallyVerified = false,
                            IsPublished = true,
                            Name = "Kremfløte",
                            Type = 2,
                            Url = "kremflote"
                        },
                        new
                        {
                            Id = 18,
                            DateCreated = new DateTime(2024, 2, 10, 22, 27, 31, 237, DateTimeKind.Local).AddTicks(8186),
                            DateUpdated = new DateTime(2024, 2, 10, 22, 27, 31, 237, DateTimeKind.Local).AddTicks(8189),
                            Description = "Informasjon",
                            EnergyKcalPer100g = 0.0,
                            HasImage = false,
                            IsNutritionallyVerified = false,
                            IsPublished = true,
                            Name = "Matfløte",
                            Type = 2,
                            Url = "matflote"
                        },
                        new
                        {
                            Id = 19,
                            DateCreated = new DateTime(2024, 2, 10, 22, 27, 31, 237, DateTimeKind.Local).AddTicks(8196),
                            DateUpdated = new DateTime(2024, 2, 10, 22, 27, 31, 237, DateTimeKind.Local).AddTicks(8198),
                            Description = "Informasjon",
                            EnergyKcalPer100g = 0.0,
                            HasImage = false,
                            IsNutritionallyVerified = false,
                            IsPublished = true,
                            Name = "Lettrømme",
                            Type = 2,
                            Url = "lettromme"
                        },
                        new
                        {
                            Id = 20,
                            DateCreated = new DateTime(2024, 2, 10, 22, 27, 31, 237, DateTimeKind.Local).AddTicks(8205),
                            DateUpdated = new DateTime(2024, 2, 10, 22, 27, 31, 237, DateTimeKind.Local).AddTicks(8208),
                            Description = "Informasjon",
                            EnergyKcalPer100g = 0.0,
                            HasImage = false,
                            IsNutritionallyVerified = false,
                            IsPublished = true,
                            Name = "Seterrømme",
                            Type = 2,
                            Url = "seterromme"
                        },
                        new
                        {
                            Id = 21,
                            DateCreated = new DateTime(2024, 2, 10, 22, 27, 31, 237, DateTimeKind.Local).AddTicks(8214),
                            DateUpdated = new DateTime(2024, 2, 10, 22, 27, 31, 237, DateTimeKind.Local).AddTicks(8217),
                            Description = "Informasjon",
                            EnergyKcalPer100g = 0.0,
                            HasImage = false,
                            IsNutritionallyVerified = false,
                            IsPublished = true,
                            Name = "Rømmekolle",
                            Type = 2,
                            Url = "rommekolle"
                        },
                        new
                        {
                            Id = 22,
                            DateCreated = new DateTime(2024, 2, 10, 22, 27, 31, 237, DateTimeKind.Local).AddTicks(8224),
                            DateUpdated = new DateTime(2024, 2, 10, 22, 27, 31, 237, DateTimeKind.Local).AddTicks(8227),
                            Description = "Informasjon",
                            EnergyKcalPer100g = 0.0,
                            HasImage = false,
                            IsNutritionallyVerified = false,
                            IsPublished = true,
                            Name = "Kvarg",
                            Type = 2,
                            Url = "kvarg"
                        },
                        new
                        {
                            Id = 23,
                            DateCreated = new DateTime(2024, 2, 10, 22, 27, 31, 237, DateTimeKind.Local).AddTicks(8253),
                            DateUpdated = new DateTime(2024, 2, 10, 22, 27, 31, 237, DateTimeKind.Local).AddTicks(8256),
                            Description = "Egg fra høne. Oppskrifter tar som regel utgangspunkt i middels store egg. Dersom eggene du har er spesielt små eller store kan du måtte justere antallet.",
                            EnergyKcalPer100g = 0.0,
                            HasImage = false,
                            IsNutritionallyVerified = false,
                            IsPublished = true,
                            Name = "Egg",
                            Type = 8,
                            Url = "egg"
                        },
                        new
                        {
                            Id = 24,
                            DateCreated = new DateTime(2024, 2, 10, 22, 27, 31, 237, DateTimeKind.Local).AddTicks(8263),
                            DateUpdated = new DateTime(2024, 2, 10, 22, 27, 31, 237, DateTimeKind.Local).AddTicks(8266),
                            Description = "Eggeplomme fra hønseegg. Oppskrifter tar som regel utgangspunkt i middels store egg. Dersom oppskriften oppgir eggeplommer i antall, og eggene du har er spesielt små eller store kan du måtte justere antallet.",
                            EnergyKcalPer100g = 0.0,
                            HasImage = false,
                            IsNutritionallyVerified = false,
                            IsPublished = true,
                            Name = "Eggeplomme",
                            Type = 8,
                            Url = "eggeplomme"
                        },
                        new
                        {
                            Id = 25,
                            DateCreated = new DateTime(2024, 2, 10, 22, 27, 31, 237, DateTimeKind.Local).AddTicks(8272),
                            DateUpdated = new DateTime(2024, 2, 10, 22, 27, 31, 237, DateTimeKind.Local).AddTicks(8275),
                            Description = "Eggehvite fra hønseegg. Oppskrifter tar som regel utgangspunkt i middels store egg. Dersom oppskriften oppgir eggehviter i antall, og eggene du har er spesielt små eller store kan du måtte justere antallet.",
                            EnergyKcalPer100g = 0.0,
                            HasImage = false,
                            IsNutritionallyVerified = false,
                            IsPublished = true,
                            Name = "Eggehvite",
                            Type = 8,
                            Url = "eggehvite"
                        },
                        new
                        {
                            Id = 26,
                            DateCreated = new DateTime(2024, 2, 10, 22, 27, 31, 237, DateTimeKind.Local).AddTicks(8282),
                            DateUpdated = new DateTime(2024, 2, 10, 22, 27, 31, 237, DateTimeKind.Local).AddTicks(8284),
                            Description = "Egg fra vaktel.",
                            EnergyKcalPer100g = 0.0,
                            HasImage = false,
                            IsNutritionallyVerified = false,
                            IsPublished = true,
                            Name = "Vaktelegg",
                            Type = 8,
                            Url = "vaktelegg"
                        },
                        new
                        {
                            Id = 27,
                            DateCreated = new DateTime(2024, 2, 10, 22, 27, 31, 237, DateTimeKind.Local).AddTicks(8291),
                            DateUpdated = new DateTime(2024, 2, 10, 22, 27, 31, 237, DateTimeKind.Local).AddTicks(8293),
                            Description = "Egg fra måke (måse).",
                            EnergyKcalPer100g = 0.0,
                            HasImage = false,
                            IsNutritionallyVerified = false,
                            IsPublished = true,
                            Name = "Måsegg",
                            Type = 8,
                            Url = "masegg"
                        },
                        new
                        {
                            Id = 28,
                            DateCreated = new DateTime(2024, 2, 10, 22, 27, 31, 237, DateTimeKind.Local).AddTicks(8300),
                            DateUpdated = new DateTime(2024, 2, 10, 22, 27, 31, 237, DateTimeKind.Local).AddTicks(8303),
                            Description = "Informasjon",
                            EnergyKcalPer100g = 0.0,
                            HasImage = false,
                            IsNutritionallyVerified = false,
                            IsPublished = true,
                            Name = "Salt",
                            Type = 14,
                            Url = "salt"
                        },
                        new
                        {
                            Id = 29,
                            DateCreated = new DateTime(2024, 2, 10, 22, 27, 31, 237, DateTimeKind.Local).AddTicks(8310),
                            DateUpdated = new DateTime(2024, 2, 10, 22, 27, 31, 237, DateTimeKind.Local).AddTicks(8312),
                            Description = "Informasjon",
                            EnergyKcalPer100g = 0.0,
                            HasImage = false,
                            IsNutritionallyVerified = false,
                            IsPublished = true,
                            Name = "Tomatketsjup",
                            Type = 14,
                            Url = "tomatketsjup"
                        },
                        new
                        {
                            Id = 30,
                            DateCreated = new DateTime(2024, 2, 10, 22, 27, 31, 237, DateTimeKind.Local).AddTicks(8319),
                            DateUpdated = new DateTime(2024, 2, 10, 22, 27, 31, 237, DateTimeKind.Local).AddTicks(8321),
                            Description = "Informasjon",
                            EnergyKcalPer100g = 0.0,
                            HasImage = false,
                            IsNutritionallyVerified = false,
                            IsPublished = true,
                            Name = "Søt sennep",
                            Type = 14,
                            Url = "sot-sennep"
                        },
                        new
                        {
                            Id = 31,
                            DateCreated = new DateTime(2024, 2, 10, 22, 27, 31, 237, DateTimeKind.Local).AddTicks(8328),
                            DateUpdated = new DateTime(2024, 2, 10, 22, 27, 31, 237, DateTimeKind.Local).AddTicks(8330),
                            Description = "Informasjon",
                            EnergyKcalPer100g = 0.0,
                            HasImage = false,
                            IsNutritionallyVerified = false,
                            IsPublished = true,
                            Name = "Sterk sennep",
                            Type = 14,
                            Url = "sterk-sennep"
                        },
                        new
                        {
                            Id = 32,
                            DateCreated = new DateTime(2024, 2, 10, 22, 27, 31, 237, DateTimeKind.Local).AddTicks(8337),
                            DateUpdated = new DateTime(2024, 2, 10, 22, 27, 31, 237, DateTimeKind.Local).AddTicks(8340),
                            Description = "Informasjon",
                            EnergyKcalPer100g = 0.0,
                            HasImage = false,
                            IsNutritionallyVerified = false,
                            IsPublished = true,
                            Name = "Dijonsennep",
                            Type = 14,
                            Url = "dijonsennep"
                        },
                        new
                        {
                            Id = 33,
                            DateCreated = new DateTime(2024, 2, 10, 22, 27, 31, 237, DateTimeKind.Local).AddTicks(8346),
                            DateUpdated = new DateTime(2024, 2, 10, 22, 27, 31, 237, DateTimeKind.Local).AddTicks(8349),
                            Description = "Informasjon",
                            EnergyKcalPer100g = 0.0,
                            HasImage = false,
                            IsNutritionallyVerified = false,
                            IsPublished = true,
                            Name = "Grov sennep",
                            Type = 14,
                            Url = "grov-sennep"
                        },
                        new
                        {
                            Id = 34,
                            DateCreated = new DateTime(2024, 2, 10, 22, 27, 31, 237, DateTimeKind.Local).AddTicks(8355),
                            DateUpdated = new DateTime(2024, 2, 10, 22, 27, 31, 237, DateTimeKind.Local).AddTicks(8358),
                            Description = "Informasjon",
                            EnergyKcalPer100g = 0.0,
                            HasImage = false,
                            IsNutritionallyVerified = false,
                            IsPublished = true,
                            Name = "Soyasaus",
                            Type = 14,
                            Url = "soyasaus"
                        },
                        new
                        {
                            Id = 35,
                            DateCreated = new DateTime(2024, 2, 10, 22, 27, 31, 237, DateTimeKind.Local).AddTicks(8365),
                            DateUpdated = new DateTime(2024, 2, 10, 22, 27, 31, 237, DateTimeKind.Local).AddTicks(8367),
                            Description = "Informasjon",
                            EnergyKcalPer100g = 0.0,
                            HasImage = false,
                            IsNutritionallyVerified = false,
                            IsPublished = true,
                            Name = "Saltredusert soyasaus",
                            Type = 14,
                            Url = "saltredusert-soyasaus"
                        },
                        new
                        {
                            Id = 36,
                            DateCreated = new DateTime(2024, 2, 10, 22, 27, 31, 237, DateTimeKind.Local).AddTicks(8385),
                            DateUpdated = new DateTime(2024, 2, 10, 22, 27, 31, 237, DateTimeKind.Local).AddTicks(8388),
                            Description = "35%",
                            EnergyKcalPer100g = 0.0,
                            HasImage = false,
                            IsNutritionallyVerified = false,
                            IsPublished = true,
                            Name = "Eddikessens",
                            Type = 14,
                            Url = "eddikessens"
                        },
                        new
                        {
                            Id = 37,
                            DateCreated = new DateTime(2024, 2, 10, 22, 27, 31, 237, DateTimeKind.Local).AddTicks(8395),
                            DateUpdated = new DateTime(2024, 2, 10, 22, 27, 31, 237, DateTimeKind.Local).AddTicks(8397),
                            Description = "7%",
                            EnergyKcalPer100g = 0.0,
                            HasImage = false,
                            IsNutritionallyVerified = false,
                            IsPublished = true,
                            Name = "Klar eddik",
                            Type = 14,
                            Url = "klar-eddik"
                        },
                        new
                        {
                            Id = 38,
                            DateCreated = new DateTime(2024, 2, 10, 22, 27, 31, 237, DateTimeKind.Local).AddTicks(8404),
                            DateUpdated = new DateTime(2024, 2, 10, 22, 27, 31, 237, DateTimeKind.Local).AddTicks(8406),
                            Description = "7%",
                            EnergyKcalPer100g = 0.0,
                            HasImage = false,
                            IsNutritionallyVerified = false,
                            IsPublished = true,
                            Name = "Brun eddik",
                            Type = 14,
                            Url = "brun-eddik"
                        },
                        new
                        {
                            Id = 39,
                            DateCreated = new DateTime(2024, 2, 10, 22, 27, 31, 237, DateTimeKind.Local).AddTicks(8413),
                            DateUpdated = new DateTime(2024, 2, 10, 22, 27, 31, 237, DateTimeKind.Local).AddTicks(8416),
                            Description = "Informasjon",
                            EnergyKcalPer100g = 0.0,
                            HasImage = false,
                            IsNutritionallyVerified = false,
                            IsPublished = true,
                            Name = "Eplecidereddik",
                            Type = 14,
                            Url = "eplecidereddik"
                        },
                        new
                        {
                            Id = 40,
                            DateCreated = new DateTime(2024, 2, 10, 22, 27, 31, 237, DateTimeKind.Local).AddTicks(8422),
                            DateUpdated = new DateTime(2024, 2, 10, 22, 27, 31, 237, DateTimeKind.Local).AddTicks(8425),
                            Description = "Informasjon",
                            EnergyKcalPer100g = 0.0,
                            HasImage = false,
                            IsNutritionallyVerified = false,
                            IsPublished = true,
                            Name = "Hvitvinseddik",
                            Type = 14,
                            Url = "hvitvinseddik"
                        },
                        new
                        {
                            Id = 41,
                            DateCreated = new DateTime(2024, 2, 10, 22, 27, 31, 237, DateTimeKind.Local).AddTicks(8516),
                            DateUpdated = new DateTime(2024, 2, 10, 22, 27, 31, 237, DateTimeKind.Local).AddTicks(8519),
                            Description = "Informasjon",
                            EnergyKcalPer100g = 0.0,
                            HasImage = false,
                            IsNutritionallyVerified = false,
                            IsPublished = true,
                            Name = "Rødvinseddik",
                            Type = 14,
                            Url = "rodvinseddik"
                        },
                        new
                        {
                            Id = 42,
                            DateCreated = new DateTime(2024, 2, 10, 22, 27, 31, 237, DateTimeKind.Local).AddTicks(8526),
                            DateUpdated = new DateTime(2024, 2, 10, 22, 27, 31, 237, DateTimeKind.Local).AddTicks(8528),
                            Description = "Informasjon",
                            EnergyKcalPer100g = 0.0,
                            HasImage = false,
                            IsNutritionallyVerified = false,
                            IsPublished = true,
                            Name = "Sitrondråper",
                            Type = 14,
                            Url = "sitrondråper"
                        },
                        new
                        {
                            Id = 43,
                            DateCreated = new DateTime(2024, 2, 10, 22, 27, 31, 237, DateTimeKind.Local).AddTicks(8536),
                            DateUpdated = new DateTime(2024, 2, 10, 22, 27, 31, 237, DateTimeKind.Local).AddTicks(8538),
                            Description = "Informasjon",
                            EnergyKcalPer100g = 0.0,
                            HasImage = false,
                            IsNutritionallyVerified = false,
                            IsPublished = true,
                            Name = "Smør",
                            Type = 2,
                            Url = "smor"
                        },
                        new
                        {
                            Id = 44,
                            DateCreated = new DateTime(2024, 2, 10, 22, 27, 31, 237, DateTimeKind.Local).AddTicks(8545),
                            DateUpdated = new DateTime(2024, 2, 10, 22, 27, 31, 237, DateTimeKind.Local).AddTicks(8547),
                            Description = "Informasjon",
                            EnergyKcalPer100g = 0.0,
                            HasImage = false,
                            IsNutritionallyVerified = false,
                            IsPublished = true,
                            Name = "Margarin",
                            Type = 3,
                            Url = "margarin"
                        },
                        new
                        {
                            Id = 45,
                            DateCreated = new DateTime(2024, 2, 10, 22, 27, 31, 237, DateTimeKind.Local).AddTicks(8554),
                            DateUpdated = new DateTime(2024, 2, 10, 22, 27, 31, 237, DateTimeKind.Local).AddTicks(8557),
                            Description = "Informasjon",
                            EnergyKcalPer100g = 0.0,
                            HasImage = false,
                            IsNutritionallyVerified = false,
                            IsPublished = true,
                            Name = "Sukker",
                            Type = 13,
                            Url = "sukker"
                        },
                        new
                        {
                            Id = 46,
                            DateCreated = new DateTime(2024, 2, 10, 22, 27, 31, 237, DateTimeKind.Local).AddTicks(8565),
                            DateUpdated = new DateTime(2024, 2, 10, 22, 27, 31, 237, DateTimeKind.Local).AddTicks(8567),
                            Description = "Informasjon",
                            EnergyKcalPer100g = 0.0,
                            HasImage = false,
                            IsNutritionallyVerified = false,
                            IsPublished = true,
                            Name = "Blåbær",
                            Type = 1,
                            Url = "blabar"
                        },
                        new
                        {
                            Id = 47,
                            DateCreated = new DateTime(2024, 2, 10, 22, 27, 31, 237, DateTimeKind.Local).AddTicks(8574),
                            DateUpdated = new DateTime(2024, 2, 10, 22, 27, 31, 237, DateTimeKind.Local).AddTicks(8577),
                            Description = "Informasjon",
                            EnergyKcalPer100g = 0.0,
                            HasImage = false,
                            IsNutritionallyVerified = false,
                            IsPublished = true,
                            Name = "Jordbær",
                            Type = 1,
                            Url = "jordbar"
                        },
                        new
                        {
                            Id = 48,
                            DateCreated = new DateTime(2024, 2, 10, 22, 27, 31, 237, DateTimeKind.Local).AddTicks(8584),
                            DateUpdated = new DateTime(2024, 2, 10, 22, 27, 31, 237, DateTimeKind.Local).AddTicks(8586),
                            Description = "Informasjon",
                            EnergyKcalPer100g = 0.0,
                            HasImage = false,
                            IsNutritionallyVerified = false,
                            IsPublished = true,
                            Name = "Bringebær",
                            Type = 1,
                            Url = "bringebar"
                        },
                        new
                        {
                            Id = 49,
                            DateCreated = new DateTime(2024, 2, 10, 22, 27, 31, 237, DateTimeKind.Local).AddTicks(8607),
                            DateUpdated = new DateTime(2024, 2, 10, 22, 27, 31, 237, DateTimeKind.Local).AddTicks(8610),
                            Description = "Informasjon",
                            EnergyKcalPer100g = 0.0,
                            HasImage = false,
                            IsNutritionallyVerified = false,
                            IsPublished = true,
                            Name = "Grønne epler",
                            Type = 1,
                            Url = "gronne-epler"
                        },
                        new
                        {
                            Id = 50,
                            DateCreated = new DateTime(2024, 2, 10, 22, 27, 31, 237, DateTimeKind.Local).AddTicks(8617),
                            DateUpdated = new DateTime(2024, 2, 10, 22, 27, 31, 237, DateTimeKind.Local).AddTicks(8619),
                            Description = "Informasjon",
                            EnergyKcalPer100g = 0.0,
                            HasImage = false,
                            IsNutritionallyVerified = false,
                            IsPublished = true,
                            Name = "Røde epler",
                            Type = 1,
                            Url = "rode-epler"
                        },
                        new
                        {
                            Id = 51,
                            DateCreated = new DateTime(2024, 2, 10, 22, 27, 31, 237, DateTimeKind.Local).AddTicks(8626),
                            DateUpdated = new DateTime(2024, 2, 10, 22, 27, 31, 237, DateTimeKind.Local).AddTicks(8629),
                            Description = "Informasjon",
                            EnergyKcalPer100g = 0.0,
                            HasImage = false,
                            IsNutritionallyVerified = false,
                            IsPublished = true,
                            Name = "Gule epler",
                            Type = 1,
                            Url = "gule-epler"
                        },
                        new
                        {
                            Id = 52,
                            DateCreated = new DateTime(2024, 2, 10, 22, 27, 31, 237, DateTimeKind.Local).AddTicks(8635),
                            DateUpdated = new DateTime(2024, 2, 10, 22, 27, 31, 237, DateTimeKind.Local).AddTicks(8638),
                            Description = "Informasjon",
                            EnergyKcalPer100g = 0.0,
                            HasImage = false,
                            IsNutritionallyVerified = false,
                            IsPublished = true,
                            Name = "Appelsin",
                            Type = 1,
                            Url = "appelsin"
                        },
                        new
                        {
                            Id = 53,
                            DateCreated = new DateTime(2024, 2, 10, 22, 27, 31, 237, DateTimeKind.Local).AddTicks(8645),
                            DateUpdated = new DateTime(2024, 2, 10, 22, 27, 31, 237, DateTimeKind.Local).AddTicks(8647),
                            Description = "Informasjon",
                            EnergyKcalPer100g = 0.0,
                            HasImage = false,
                            IsNutritionallyVerified = false,
                            IsPublished = true,
                            Name = "Sitron",
                            Type = 1,
                            Url = "sitron"
                        },
                        new
                        {
                            Id = 54,
                            DateCreated = new DateTime(2024, 2, 10, 22, 27, 31, 237, DateTimeKind.Local).AddTicks(8654),
                            DateUpdated = new DateTime(2024, 2, 10, 22, 27, 31, 237, DateTimeKind.Local).AddTicks(8656),
                            Description = "Informasjon",
                            EnergyKcalPer100g = 0.0,
                            HasImage = false,
                            IsNutritionallyVerified = false,
                            IsPublished = true,
                            Name = "Økologisk sitron",
                            Type = 1,
                            Url = "okologisk-sitron"
                        },
                        new
                        {
                            Id = 55,
                            DateCreated = new DateTime(2024, 2, 10, 22, 27, 31, 237, DateTimeKind.Local).AddTicks(8663),
                            DateUpdated = new DateTime(2024, 2, 10, 22, 27, 31, 237, DateTimeKind.Local).AddTicks(8665),
                            Description = "Informasjon",
                            EnergyKcalPer100g = 0.0,
                            HasImage = false,
                            IsNutritionallyVerified = false,
                            IsPublished = true,
                            Name = "Lime",
                            Type = 1,
                            Url = "lime"
                        },
                        new
                        {
                            Id = 56,
                            DateCreated = new DateTime(2024, 2, 10, 22, 27, 31, 237, DateTimeKind.Local).AddTicks(8672),
                            DateUpdated = new DateTime(2024, 2, 10, 22, 27, 31, 237, DateTimeKind.Local).AddTicks(8675),
                            Description = "Informasjon",
                            EnergyKcalPer100g = 0.0,
                            HasImage = false,
                            IsNutritionallyVerified = false,
                            IsPublished = true,
                            Name = "Hermetiske mandarinbåter",
                            Type = 1,
                            Url = "hermetiske-mandarinbater"
                        },
                        new
                        {
                            Id = 57,
                            DateCreated = new DateTime(2024, 2, 10, 22, 27, 31, 237, DateTimeKind.Local).AddTicks(8682),
                            DateUpdated = new DateTime(2024, 2, 10, 22, 27, 31, 237, DateTimeKind.Local).AddTicks(8684),
                            Description = "Informasjon",
                            EnergyKcalPer100g = 0.0,
                            HasImage = false,
                            IsNutritionallyVerified = false,
                            IsPublished = true,
                            Name = "Hermetiske pærer",
                            Type = 1,
                            Url = "hermetiske-parer"
                        },
                        new
                        {
                            Id = 58,
                            DateCreated = new DateTime(2024, 2, 10, 22, 27, 31, 237, DateTimeKind.Local).AddTicks(8691),
                            DateUpdated = new DateTime(2024, 2, 10, 22, 27, 31, 237, DateTimeKind.Local).AddTicks(8693),
                            Description = "Informasjon",
                            EnergyKcalPer100g = 0.0,
                            HasImage = false,
                            IsNutritionallyVerified = false,
                            IsPublished = true,
                            Name = "Hermetiske fersken",
                            Type = 1,
                            Url = "hermetiske-fersken"
                        },
                        new
                        {
                            Id = 59,
                            DateCreated = new DateTime(2024, 2, 10, 22, 27, 31, 237, DateTimeKind.Local).AddTicks(8700),
                            DateUpdated = new DateTime(2024, 2, 10, 22, 27, 31, 237, DateTimeKind.Local).AddTicks(8703),
                            Description = "Informasjon",
                            EnergyKcalPer100g = 0.0,
                            HasImage = false,
                            IsNutritionallyVerified = false,
                            IsPublished = true,
                            Name = "Banan",
                            Type = 1,
                            Url = "banan"
                        },
                        new
                        {
                            Id = 60,
                            DateCreated = new DateTime(2024, 2, 10, 22, 27, 31, 237, DateTimeKind.Local).AddTicks(8710),
                            DateUpdated = new DateTime(2024, 2, 10, 22, 27, 31, 237, DateTimeKind.Local).AddTicks(8712),
                            Description = "Informasjon",
                            EnergyKcalPer100g = 0.0,
                            HasImage = false,
                            IsNutritionallyVerified = false,
                            IsPublished = true,
                            Name = "Klementin",
                            Type = 1,
                            Url = "klementin"
                        },
                        new
                        {
                            Id = 61,
                            DateCreated = new DateTime(2024, 2, 10, 22, 27, 31, 237, DateTimeKind.Local).AddTicks(8719),
                            DateUpdated = new DateTime(2024, 2, 10, 22, 27, 31, 237, DateTimeKind.Local).AddTicks(8721),
                            Description = "Informasjon",
                            EnergyKcalPer100g = 0.0,
                            HasImage = false,
                            IsNutritionallyVerified = false,
                            IsPublished = true,
                            Name = "Blå druer",
                            Type = 1,
                            Url = "bla-druer"
                        },
                        new
                        {
                            Id = 62,
                            DateCreated = new DateTime(2024, 2, 10, 22, 27, 31, 237, DateTimeKind.Local).AddTicks(8739),
                            DateUpdated = new DateTime(2024, 2, 10, 22, 27, 31, 237, DateTimeKind.Local).AddTicks(8742),
                            Description = "Informasjon",
                            EnergyKcalPer100g = 0.0,
                            HasImage = false,
                            IsNutritionallyVerified = false,
                            IsPublished = true,
                            Name = "Grønne druer",
                            Type = 1,
                            Url = "gronne-druer"
                        },
                        new
                        {
                            Id = 63,
                            DateCreated = new DateTime(2024, 2, 10, 22, 27, 31, 237, DateTimeKind.Local).AddTicks(8749),
                            DateUpdated = new DateTime(2024, 2, 10, 22, 27, 31, 237, DateTimeKind.Local).AddTicks(8752),
                            Description = "Informasjon",
                            EnergyKcalPer100g = 0.0,
                            HasImage = false,
                            IsNutritionallyVerified = false,
                            IsPublished = true,
                            Name = "Rosiner",
                            Type = 1,
                            Url = "rosiner"
                        },
                        new
                        {
                            Id = 64,
                            DateCreated = new DateTime(2024, 2, 10, 22, 27, 31, 237, DateTimeKind.Local).AddTicks(8758),
                            DateUpdated = new DateTime(2024, 2, 10, 22, 27, 31, 237, DateTimeKind.Local).AddTicks(8761),
                            Description = "Informasjon",
                            EnergyKcalPer100g = 0.0,
                            HasImage = false,
                            IsNutritionallyVerified = false,
                            IsPublished = true,
                            Name = "Korinter",
                            Type = 1,
                            Url = "korinter"
                        });
                });

            modelBuilder.Entity("MenuPlanner.Models.Entities.IngredientAllergen", b =>
                {
                    b.Property<int>("IngredientId")
                        .HasColumnType("int");

                    b.Property<int>("AllergenId")
                        .HasColumnType("int");

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.HasKey("IngredientId", "AllergenId");

                    b.HasIndex("AllergenId");

                    b.ToTable("IngredientAllergens");

                    b.HasData(
                        new
                        {
                            IngredientId = 15,
                            AllergenId = 11,
                            Amount = 4
                        },
                        new
                        {
                            IngredientId = 1,
                            AllergenId = 4,
                            Amount = 4
                        },
                        new
                        {
                            IngredientId = 23,
                            AllergenId = 5,
                            Amount = 4
                        });
                });

            modelBuilder.Entity("MenuPlanner.Models.Entities.IngredientNutrient", b =>
                {
                    b.Property<int>("IngredientId")
                        .HasColumnType("int");

                    b.Property<int>("NutrientId")
                        .HasColumnType("int");

                    b.Property<decimal>("AmountPer100Grams")
                        .HasColumnType("decimal(9,8)");

                    b.HasKey("IngredientId", "NutrientId");

                    b.HasIndex("NutrientId");

                    b.ToTable("IngredientNutrients");

                    b.HasData(
                        new
                        {
                            IngredientId = 15,
                            NutrientId = 6,
                            AmountPer100Grams = 1m
                        },
                        new
                        {
                            IngredientId = 15,
                            NutrientId = 7,
                            AmountPer100Grams = 0.6m
                        },
                        new
                        {
                            IngredientId = 15,
                            NutrientId = 2,
                            AmountPer100Grams = 4.5m
                        },
                        new
                        {
                            IngredientId = 15,
                            NutrientId = 3,
                            AmountPer100Grams = 4.5m
                        },
                        new
                        {
                            IngredientId = 15,
                            NutrientId = 1,
                            AmountPer100Grams = 3.5m
                        },
                        new
                        {
                            IngredientId = 15,
                            NutrientId = 44,
                            AmountPer100Grams = 0.10m
                        },
                        new
                        {
                            IngredientId = 15,
                            NutrientId = 13,
                            AmountPer100Grams = 0.00015m
                        },
                        new
                        {
                            IngredientId = 15,
                            NutrientId = 18,
                            AmountPer100Grams = 0.0000006m
                        },
                        new
                        {
                            IngredientId = 15,
                            NutrientId = 16,
                            AmountPer100Grams = 0.000008m
                        },
                        new
                        {
                            IngredientId = 15,
                            NutrientId = 25,
                            AmountPer100Grams = 0.171m
                        },
                        new
                        {
                            IngredientId = 15,
                            NutrientId = 28,
                            AmountPer100Grams = 0.13m
                        },
                        new
                        {
                            IngredientId = 15,
                            NutrientId = 29,
                            AmountPer100Grams = 0.115m
                        },
                        new
                        {
                            IngredientId = 15,
                            NutrientId = 35,
                            AmountPer100Grams = 0.000016m
                        });
                });

            modelBuilder.Entity("MenuPlanner.Models.Entities.Nutrient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("AlwaysDisplay")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Emphasized")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.Property<int?>("SubTypeOf")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Nutrients");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AlwaysDisplay = false,
                            Description = "Informasjon.",
                            Emphasized = false,
                            Name = "Protein",
                            SortOrder = 0,
                            Type = 10,
                            Url = "protein"
                        },
                        new
                        {
                            Id = 2,
                            AlwaysDisplay = false,
                            Description = "Total mengde karbohydrater, inkludert sukkerarter, polyoler og stivelse.",
                            Emphasized = false,
                            Name = "Karbohydrater",
                            SortOrder = 0,
                            Type = 5,
                            Url = "karbohydrater"
                        },
                        new
                        {
                            Id = 3,
                            AlwaysDisplay = false,
                            Description = "Informasjon.",
                            Emphasized = false,
                            Name = "Sukkerarter",
                            SortOrder = 0,
                            SubTypeOf = 5,
                            Type = 6,
                            Url = "sukkerarter"
                        },
                        new
                        {
                            Id = 4,
                            AlwaysDisplay = false,
                            Description = "Informasjon.",
                            Emphasized = false,
                            Name = "Polyoler",
                            SortOrder = 0,
                            SubTypeOf = 5,
                            Type = 7,
                            Url = "polyoler"
                        },
                        new
                        {
                            Id = 5,
                            AlwaysDisplay = false,
                            Description = "Informasjon.",
                            Emphasized = false,
                            Name = "Stivelse",
                            SortOrder = 0,
                            SubTypeOf = 5,
                            Type = 8,
                            Url = "stivelse"
                        },
                        new
                        {
                            Id = 6,
                            AlwaysDisplay = false,
                            Description = "Angir total mengde fett i en ingrediens, inkludert mettet, enumettet og flerumettet fett.",
                            Emphasized = false,
                            Name = "Fett",
                            SortOrder = 1,
                            Type = 0,
                            Url = "fett"
                        },
                        new
                        {
                            Id = 7,
                            AlwaysDisplay = false,
                            Description = "Informasjon",
                            Emphasized = false,
                            Name = "Mettet fett",
                            SortOrder = 1,
                            SubTypeOf = 0,
                            Type = 1,
                            Url = "mettet-fett"
                        },
                        new
                        {
                            Id = 8,
                            AlwaysDisplay = false,
                            Description = "Informasjon",
                            Emphasized = false,
                            Name = "Enumettet fett",
                            SortOrder = 2,
                            SubTypeOf = 0,
                            Type = 2,
                            Url = "enumettet-fett"
                        },
                        new
                        {
                            Id = 9,
                            AlwaysDisplay = false,
                            Description = "Informasjon",
                            Emphasized = false,
                            Name = "Flerumettet fett",
                            SortOrder = 3,
                            SubTypeOf = 0,
                            Type = 3,
                            Url = "flerumettet-fett"
                        },
                        new
                        {
                            Id = 10,
                            AlwaysDisplay = false,
                            Description = "Informasjon",
                            Emphasized = false,
                            Name = "Transfett",
                            SortOrder = 4,
                            SubTypeOf = 0,
                            Type = 4,
                            Url = "transfett"
                        },
                        new
                        {
                            Id = 11,
                            AlwaysDisplay = false,
                            Description = "Informasjon",
                            Emphasized = false,
                            Name = "Vitamin A, retinol",
                            SortOrder = 0,
                            Type = 12,
                            Url = "vitamin-a-retinol"
                        },
                        new
                        {
                            Id = 12,
                            AlwaysDisplay = false,
                            Description = "Informasjon",
                            Emphasized = false,
                            Name = "Vitamin B1, tiamin",
                            SortOrder = 0,
                            Type = 12,
                            Url = "vitamin-b1-tiamin"
                        },
                        new
                        {
                            Id = 13,
                            AlwaysDisplay = false,
                            Description = "Informasjon",
                            Emphasized = false,
                            Name = "Vitamin B2, riboflavin",
                            SortOrder = 0,
                            Type = 12,
                            Url = "vitamin-b2-riboflavin"
                        },
                        new
                        {
                            Id = 14,
                            AlwaysDisplay = false,
                            Description = "Informasjon",
                            Emphasized = false,
                            Name = "Vitamin B3, niacin",
                            SortOrder = 0,
                            Type = 12,
                            Url = "vitamin-b3-niacin"
                        },
                        new
                        {
                            Id = 15,
                            AlwaysDisplay = false,
                            Description = "Informasjon",
                            Emphasized = false,
                            Name = "Vitamin B5, pantotensyre",
                            SortOrder = 0,
                            Type = 12,
                            Url = "vitamin-b5-pantotensyre"
                        },
                        new
                        {
                            Id = 16,
                            AlwaysDisplay = false,
                            Description = "Informasjon",
                            Emphasized = false,
                            Name = "Vitamin B7, biotin",
                            SortOrder = 0,
                            Type = 12,
                            Url = "vitamin-b7-biotin"
                        },
                        new
                        {
                            Id = 17,
                            AlwaysDisplay = false,
                            Description = "Informasjon",
                            Emphasized = false,
                            Name = "Vitamin B9, folat",
                            SortOrder = 0,
                            Type = 12,
                            Url = "vitamin-b9-folat"
                        },
                        new
                        {
                            Id = 18,
                            AlwaysDisplay = false,
                            Description = "Informasjon",
                            Emphasized = false,
                            Name = "Vitamin B12, kobalamin",
                            SortOrder = 0,
                            Type = 12,
                            Url = "vitamin-b12-kobalamin"
                        },
                        new
                        {
                            Id = 19,
                            AlwaysDisplay = false,
                            Description = "Informasjon",
                            Emphasized = false,
                            Name = "Vitamin C, askorbinsyre",
                            SortOrder = 0,
                            Type = 12,
                            Url = "vitamin-c-askorbinsyre"
                        },
                        new
                        {
                            Id = 20,
                            AlwaysDisplay = false,
                            Description = "Informasjon",
                            Emphasized = false,
                            Name = "Vitamin D2, ergokalsiferol",
                            SortOrder = 0,
                            Type = 12,
                            Url = "vitamin-d2-ergokalsiferol"
                        },
                        new
                        {
                            Id = 21,
                            AlwaysDisplay = false,
                            Description = "Informasjon",
                            Emphasized = false,
                            Name = "Vitamin D3, kolikalsiferol",
                            SortOrder = 0,
                            Type = 12,
                            Url = "vitamin-d3-kolikalsiferol"
                        },
                        new
                        {
                            Id = 22,
                            AlwaysDisplay = false,
                            Description = "Tokoferol (E306) betegner en blanding av de rene stoffene alfa-tokoferol (E307), gamma-tokoferol (E308) og delta-tokoferol (E309).",
                            Emphasized = false,
                            Name = "Vitamin E, tokoferol (E306)",
                            SortOrder = 0,
                            Type = 12,
                            Url = "vitamin-e-tokoferol-e306"
                        },
                        new
                        {
                            Id = 23,
                            AlwaysDisplay = false,
                            Description = "Informasjon",
                            Emphasized = false,
                            Name = "Vitamin K1, fyllokinon",
                            SortOrder = 0,
                            Type = 12,
                            Url = "vitamin-k1-fyllokinon"
                        },
                        new
                        {
                            Id = 24,
                            AlwaysDisplay = false,
                            Description = "Informasjon",
                            Emphasized = false,
                            Name = "Vitamin K2, menakinon",
                            SortOrder = 0,
                            Type = 12,
                            Url = "vitamin-k2-menakinon"
                        },
                        new
                        {
                            Id = 25,
                            AlwaysDisplay = false,
                            Description = "Engelsk navn: Potassium",
                            Emphasized = false,
                            Name = "Kalium",
                            SortOrder = 0,
                            Type = 13,
                            Url = "kalium"
                        },
                        new
                        {
                            Id = 26,
                            AlwaysDisplay = false,
                            Description = "Engelsk navn: Chlorine. Komponent i vanlig bordsalt (natriumklorid).",
                            Emphasized = false,
                            Name = "Klorin",
                            SortOrder = 0,
                            Type = 13,
                            Url = "klorin"
                        },
                        new
                        {
                            Id = 27,
                            AlwaysDisplay = false,
                            Description = "Engelsk navn: Sodium. Komponent i vanlig bordsalt (natriumklorid).",
                            Emphasized = false,
                            Name = "Natrium",
                            SortOrder = 0,
                            Type = 13,
                            Url = "natrium"
                        },
                        new
                        {
                            Id = 28,
                            AlwaysDisplay = false,
                            Description = "Engelsk navn: Calcium. Viktig for skjelettet og tennene.",
                            Emphasized = false,
                            Name = "Kalsium",
                            SortOrder = 0,
                            Type = 13,
                            Url = "kalsium"
                        },
                        new
                        {
                            Id = 29,
                            AlwaysDisplay = false,
                            Description = "Engelsk navn: Phosphorus.",
                            Emphasized = false,
                            Name = "Fosfor",
                            SortOrder = 0,
                            Type = 13,
                            Url = "fosfor"
                        },
                        new
                        {
                            Id = 30,
                            AlwaysDisplay = false,
                            Description = "Engelsk navn: Magnesium.",
                            Emphasized = false,
                            Name = "Magnesium",
                            SortOrder = 0,
                            Type = 13,
                            Url = "magnesium"
                        },
                        new
                        {
                            Id = 31,
                            AlwaysDisplay = false,
                            Description = "Engelsk navn: Iron.",
                            Emphasized = false,
                            Name = "Jern",
                            SortOrder = 0,
                            Type = 13,
                            Url = "jern"
                        },
                        new
                        {
                            Id = 32,
                            AlwaysDisplay = false,
                            Description = "Engelsk navn: Zinc.",
                            Emphasized = false,
                            Name = "Sink",
                            SortOrder = 0,
                            Type = 13,
                            Url = "sink"
                        },
                        new
                        {
                            Id = 33,
                            AlwaysDisplay = false,
                            Description = "Engelsk navn: Manganese.",
                            Emphasized = false,
                            Name = "Mangan",
                            SortOrder = 0,
                            Type = 13,
                            Url = "mangan"
                        },
                        new
                        {
                            Id = 34,
                            AlwaysDisplay = false,
                            Description = "Engelsk navn: Copper.",
                            Emphasized = false,
                            Name = "Kobber",
                            SortOrder = 0,
                            Type = 13,
                            Url = "kobber"
                        },
                        new
                        {
                            Id = 35,
                            AlwaysDisplay = false,
                            Description = "Engelsk navn: iodine.",
                            Emphasized = false,
                            Name = "Jod",
                            SortOrder = 0,
                            Type = 13,
                            Url = "jod"
                        },
                        new
                        {
                            Id = 36,
                            AlwaysDisplay = false,
                            Description = "Engelsk navn: Molybdenum.",
                            Emphasized = false,
                            Name = "Molybden",
                            SortOrder = 0,
                            Type = 13,
                            Url = "molybden"
                        },
                        new
                        {
                            Id = 37,
                            AlwaysDisplay = false,
                            Description = "Engelsk navn: Selenium.",
                            Emphasized = false,
                            Name = "Selen",
                            SortOrder = 0,
                            Type = 13,
                            Url = "selen"
                        },
                        new
                        {
                            Id = 38,
                            AlwaysDisplay = false,
                            Description = "Engelsk navn: Fluoride.",
                            Emphasized = false,
                            Name = "Fluor",
                            SortOrder = 0,
                            Type = 13,
                            Url = "fluor"
                        },
                        new
                        {
                            Id = 39,
                            AlwaysDisplay = false,
                            Description = "Engelsk navn: Chromium.",
                            Emphasized = false,
                            Name = "Krom",
                            SortOrder = 0,
                            Type = 13,
                            Url = "krom"
                        },
                        new
                        {
                            Id = 40,
                            AlwaysDisplay = false,
                            Description = "Engelsk navn: Nickel.",
                            Emphasized = false,
                            Name = "Nikkel",
                            SortOrder = 0,
                            Type = 13,
                            Url = "nikkel"
                        },
                        new
                        {
                            Id = 41,
                            AlwaysDisplay = false,
                            Description = "Engelsk navn: Boron.",
                            Emphasized = false,
                            Name = "Bor",
                            SortOrder = 0,
                            Type = 13,
                            Url = "bor"
                        },
                        new
                        {
                            Id = 42,
                            AlwaysDisplay = false,
                            Description = "Engelsk navn: Silicon.",
                            Emphasized = false,
                            Name = "Silisium",
                            SortOrder = 0,
                            Type = 13,
                            Url = "silisium"
                        },
                        new
                        {
                            Id = 43,
                            AlwaysDisplay = false,
                            Description = "Engelsk navn: Vanadium.",
                            Emphasized = false,
                            Name = "Vanadium",
                            SortOrder = 0,
                            Type = 13,
                            Url = "vanadium"
                        },
                        new
                        {
                            Id = 44,
                            AlwaysDisplay = false,
                            Description = "Natriumklorid (NaCl). Engelsk navn: Salt, sodium chloride.",
                            Emphasized = false,
                            Name = "Salt",
                            SortOrder = 0,
                            Type = 13,
                            Url = "salt"
                        });
                });

            modelBuilder.Entity("MenuPlanner.Models.Entities.Recipe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CountryCode")
                        .HasColumnType("nvarchar(2)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DifficultyLevel")
                        .HasColumnType("int");

                    b.Property<bool>("IsPublished")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ParentRecipeId")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("PrepTime")
                        .HasColumnType("time");

                    b.Property<double?>("RatingAverage")
                        .HasColumnType("float");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("CountryCode");

                    b.HasIndex("ParentRecipeId");

                    b.HasIndex("UserId");

                    b.ToTable("Recipes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CountryCode = "NO",
                            DateCreated = new DateTime(2024, 2, 10, 22, 27, 31, 238, DateTimeKind.Local).AddTicks(1200),
                            DateUpdated = new DateTime(2024, 2, 10, 22, 27, 31, 238, DateTimeKind.Local).AddTicks(1498),
                            Description = "Deilige, tynne pannekaker er hele familiens favoritt. Server gjerne med blåbærsyltetøy eller sukker og sitrondråper.",
                            DifficultyLevel = 0,
                            IsPublished = true,
                            Name = "Pannekaker",
                            PrepTime = new TimeSpan(0, 1, 0, 0, 0),
                            RatingAverage = 7.4000000000000004,
                            Url = "pannekaker"
                        });
                });

            modelBuilder.Entity("MenuPlanner.Models.Entities.RecipeIngredient", b =>
                {
                    b.Property<int>("RecipeId")
                        .HasColumnType("int");

                    b.Property<int>("IngredientId")
                        .HasColumnType("int");

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.Property<int>("Unit")
                        .HasColumnType("int");

                    b.HasKey("RecipeId", "IngredientId");

                    b.HasIndex("IngredientId");

                    b.ToTable("RecipeIngredients");

                    b.HasData(
                        new
                        {
                            RecipeId = 1,
                            IngredientId = 1,
                            Amount = 3.0,
                            SortOrder = 1,
                            Unit = 2
                        },
                        new
                        {
                            RecipeId = 1,
                            IngredientId = 15,
                            Amount = 5.0,
                            SortOrder = 2,
                            Unit = 2
                        },
                        new
                        {
                            RecipeId = 1,
                            IngredientId = 23,
                            Amount = 4.0,
                            SortOrder = 3,
                            Unit = 12
                        },
                        new
                        {
                            RecipeId = 1,
                            IngredientId = 28,
                            Amount = 0.5,
                            SortOrder = 4,
                            Unit = 9
                        });
                });

            modelBuilder.Entity("MenuPlanner.Models.Entities.RecipeStep", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RecipeId")
                        .HasColumnType("int");

                    b.Property<int>("StepNumber")
                        .HasColumnType("int");

                    b.Property<string>("StepText")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("RecipeId");

                    b.ToTable("RecipeSteps");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            RecipeId = 1,
                            StepNumber = 1,
                            StepText = "Bland mel og salt."
                        },
                        new
                        {
                            Id = 2,
                            RecipeId = 1,
                            StepNumber = 2,
                            StepText = "Ha i halvparten av melken og visp sammen til en tykk, klumpefri røre."
                        },
                        new
                        {
                            Id = 3,
                            RecipeId = 1,
                            StepNumber = 3,
                            StepText = "Tilsett resten av melken og visp sammen."
                        },
                        new
                        {
                            Id = 4,
                            RecipeId = 1,
                            StepNumber = 4,
                            StepText = "Tilsett eggene og visp sammen til røren blir fin og gul."
                        },
                        new
                        {
                            Id = 5,
                            RecipeId = 1,
                            StepNumber = 5,
                            StepText = "La røren hvile i minst 30 minutter for best resultat."
                        },
                        new
                        {
                            Id = 6,
                            RecipeId = 1,
                            StepNumber = 6,
                            StepText = "Ha smør eller margarin i pannen og stek pannekakene til de er gyldne på begge sider."
                        },
                        new
                        {
                            Id = 7,
                            RecipeId = 1,
                            StepNumber = 7,
                            StepText = "Brett pannekakene og legg dem i en ildfast form med lokk. Slik holder de seg varme til alle er ferdig stekt."
                        });
                });

            modelBuilder.Entity("MenuPlanner.Models.Entities.SearchIndex", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("EntityType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SearchIndex");

                    b.HasData(
                        new
                        {
                            Id = 124,
                            EntityType = "Recipe",
                            Name = "Pannekaker",
                            NormalizedName = "pannekaker",
                            Url = "pannekaker"
                        },
                        new
                        {
                            Id = 125,
                            EntityType = "Ingredient",
                            Name = "Hvetemel",
                            NormalizedName = "hvetemel",
                            Url = "hvetemel"
                        },
                        new
                        {
                            Id = 126,
                            EntityType = "Ingredient",
                            Name = "Sammalt hvete, grovmalt",
                            NormalizedName = "sammalt hvete grovmalt",
                            Url = "sammalt-hvete-grovmalt"
                        },
                        new
                        {
                            Id = 127,
                            EntityType = "Ingredient",
                            Name = "Sammalt hvete, finmalt",
                            NormalizedName = "sammalt hvete finmalt",
                            Url = "sammalt-hvete-finmalt"
                        },
                        new
                        {
                            Id = 128,
                            EntityType = "Ingredient",
                            Name = "Hvete helkorn",
                            NormalizedName = "hvete helkorn",
                            Url = "hvete-helkorn"
                        },
                        new
                        {
                            Id = 129,
                            EntityType = "Ingredient",
                            Name = "Havregryn, lettkokt",
                            NormalizedName = "havregryn lettkokt",
                            Url = "havregryn-lettkokt"
                        },
                        new
                        {
                            Id = 130,
                            EntityType = "Ingredient",
                            Name = "Havregryn, store",
                            NormalizedName = "havregryn store",
                            Url = "havregryn-store"
                        },
                        new
                        {
                            Id = 131,
                            EntityType = "Ingredient",
                            Name = "Havregryn, glutenfri",
                            NormalizedName = "havregryn glutenfri",
                            Url = "havregryn-glutenfri"
                        },
                        new
                        {
                            Id = 132,
                            EntityType = "Ingredient",
                            Name = "Havremel",
                            NormalizedName = "havremel",
                            Url = "havremel"
                        },
                        new
                        {
                            Id = 133,
                            EntityType = "Ingredient",
                            Name = "Rug, helkorn",
                            NormalizedName = "rug helkorn",
                            Url = "rug-helkorn"
                        },
                        new
                        {
                            Id = 134,
                            EntityType = "Ingredient",
                            Name = "Rugmel",
                            NormalizedName = "rugmel",
                            Url = "rugmel"
                        },
                        new
                        {
                            Id = 135,
                            EntityType = "Ingredient",
                            Name = "Bygg, helkorn",
                            NormalizedName = "bygg helkorn",
                            Url = "bygg-helkorn"
                        },
                        new
                        {
                            Id = 136,
                            EntityType = "Ingredient",
                            Name = "Byggmel",
                            NormalizedName = "byggmel",
                            Url = "byggmel"
                        },
                        new
                        {
                            Id = 137,
                            EntityType = "Ingredient",
                            Name = "Gresskarkjerner",
                            NormalizedName = "gresskarkjerner",
                            Url = "gresskarkjerner"
                        },
                        new
                        {
                            Id = 138,
                            EntityType = "Ingredient",
                            Name = "Skummet melk",
                            NormalizedName = "skummet melk",
                            Url = "skummet-melk"
                        },
                        new
                        {
                            Id = 139,
                            EntityType = "Ingredient",
                            Name = "Lettmelk",
                            NormalizedName = "lettmelk",
                            Url = "lettmelk"
                        },
                        new
                        {
                            Id = 140,
                            EntityType = "Ingredient",
                            Name = "Helmelk",
                            NormalizedName = "helmelk",
                            Url = "helmelk"
                        },
                        new
                        {
                            Id = 141,
                            EntityType = "Ingredient",
                            Name = "Kremfløte",
                            NormalizedName = "kremfløte",
                            Url = "kremflote"
                        },
                        new
                        {
                            Id = 142,
                            EntityType = "Ingredient",
                            Name = "Matfløte",
                            NormalizedName = "matfløte",
                            Url = "matflote"
                        },
                        new
                        {
                            Id = 143,
                            EntityType = "Ingredient",
                            Name = "Lettrømme",
                            NormalizedName = "lettrømme",
                            Url = "lettromme"
                        },
                        new
                        {
                            Id = 144,
                            EntityType = "Ingredient",
                            Name = "Seterrømme",
                            NormalizedName = "seterrømme",
                            Url = "seterromme"
                        },
                        new
                        {
                            Id = 145,
                            EntityType = "Ingredient",
                            Name = "Rømmekolle",
                            NormalizedName = "rømmekolle",
                            Url = "rommekolle"
                        },
                        new
                        {
                            Id = 146,
                            EntityType = "Ingredient",
                            Name = "Kvarg",
                            NormalizedName = "kvarg",
                            Url = "kvarg"
                        },
                        new
                        {
                            Id = 147,
                            EntityType = "Ingredient",
                            Name = "Egg",
                            NormalizedName = "egg",
                            Url = "egg"
                        },
                        new
                        {
                            Id = 148,
                            EntityType = "Ingredient",
                            Name = "Eggeplomme",
                            NormalizedName = "eggeplomme",
                            Url = "eggeplomme"
                        },
                        new
                        {
                            Id = 149,
                            EntityType = "Ingredient",
                            Name = "Eggehvite",
                            NormalizedName = "eggehvite",
                            Url = "eggehvite"
                        },
                        new
                        {
                            Id = 150,
                            EntityType = "Ingredient",
                            Name = "Vaktelegg",
                            NormalizedName = "vaktelegg",
                            Url = "vaktelegg"
                        },
                        new
                        {
                            Id = 151,
                            EntityType = "Ingredient",
                            Name = "Måsegg",
                            NormalizedName = "måsegg",
                            Url = "masegg"
                        },
                        new
                        {
                            Id = 152,
                            EntityType = "Ingredient",
                            Name = "Salt",
                            NormalizedName = "salt",
                            Url = "salt"
                        },
                        new
                        {
                            Id = 153,
                            EntityType = "Ingredient",
                            Name = "Tomatketsjup",
                            NormalizedName = "tomatketsjup",
                            Url = "tomatketsjup"
                        },
                        new
                        {
                            Id = 154,
                            EntityType = "Ingredient",
                            Name = "Søt sennep",
                            NormalizedName = "søt sennep",
                            Url = "sot-sennep"
                        },
                        new
                        {
                            Id = 155,
                            EntityType = "Ingredient",
                            Name = "Sterk sennep",
                            NormalizedName = "sterk sennep",
                            Url = "sterk-sennep"
                        },
                        new
                        {
                            Id = 156,
                            EntityType = "Ingredient",
                            Name = "Dijonsennep",
                            NormalizedName = "dijonsennep",
                            Url = "dijonsennep"
                        },
                        new
                        {
                            Id = 157,
                            EntityType = "Ingredient",
                            Name = "Grov sennep",
                            NormalizedName = "grov sennep",
                            Url = "grov-sennep"
                        },
                        new
                        {
                            Id = 158,
                            EntityType = "Ingredient",
                            Name = "Soyasaus",
                            NormalizedName = "soyasaus",
                            Url = "soyasaus"
                        },
                        new
                        {
                            Id = 159,
                            EntityType = "Ingredient",
                            Name = "Saltredusert soyasaus",
                            NormalizedName = "saltredusert soyasaus",
                            Url = "saltredusert-soyasaus"
                        },
                        new
                        {
                            Id = 160,
                            EntityType = "Ingredient",
                            Name = "Eddikessens",
                            NormalizedName = "eddikessens",
                            Url = "eddikessens"
                        },
                        new
                        {
                            Id = 161,
                            EntityType = "Ingredient",
                            Name = "Klar eddik",
                            NormalizedName = "klar eddik",
                            Url = "klar-eddik"
                        },
                        new
                        {
                            Id = 162,
                            EntityType = "Ingredient",
                            Name = "Brun eddik",
                            NormalizedName = "brun eddik",
                            Url = "brun-eddik"
                        },
                        new
                        {
                            Id = 163,
                            EntityType = "Ingredient",
                            Name = "Eplecidereddik",
                            NormalizedName = "eplecidereddik",
                            Url = "eplecidereddik"
                        },
                        new
                        {
                            Id = 164,
                            EntityType = "Ingredient",
                            Name = "Hvitvinseddik",
                            NormalizedName = "hvitvinseddik",
                            Url = "hvitvinseddik"
                        },
                        new
                        {
                            Id = 165,
                            EntityType = "Ingredient",
                            Name = "Rødvinseddik",
                            NormalizedName = "rødvinseddik",
                            Url = "rodvinseddik"
                        },
                        new
                        {
                            Id = 166,
                            EntityType = "Ingredient",
                            Name = "Sitrondråper",
                            NormalizedName = "sitrondråper",
                            Url = "sitrondråper"
                        },
                        new
                        {
                            Id = 167,
                            EntityType = "Ingredient",
                            Name = "Smør",
                            NormalizedName = "smør",
                            Url = "smor"
                        },
                        new
                        {
                            Id = 168,
                            EntityType = "Ingredient",
                            Name = "Margarin",
                            NormalizedName = "margarin",
                            Url = "margarin"
                        },
                        new
                        {
                            Id = 169,
                            EntityType = "Ingredient",
                            Name = "Sukker",
                            NormalizedName = "sukker",
                            Url = "sukker"
                        },
                        new
                        {
                            Id = 170,
                            EntityType = "Ingredient",
                            Name = "Blåbær",
                            NormalizedName = "blåbær",
                            Url = "blabar"
                        },
                        new
                        {
                            Id = 171,
                            EntityType = "Ingredient",
                            Name = "Jordbær",
                            NormalizedName = "jordbær",
                            Url = "jordbar"
                        },
                        new
                        {
                            Id = 172,
                            EntityType = "Ingredient",
                            Name = "Bringebær",
                            NormalizedName = "bringebær",
                            Url = "bringebar"
                        },
                        new
                        {
                            Id = 173,
                            EntityType = "Ingredient",
                            Name = "Grønne epler",
                            NormalizedName = "grønne epler",
                            Url = "gronne-epler"
                        },
                        new
                        {
                            Id = 174,
                            EntityType = "Ingredient",
                            Name = "Røde epler",
                            NormalizedName = "røde epler",
                            Url = "rode-epler"
                        },
                        new
                        {
                            Id = 175,
                            EntityType = "Ingredient",
                            Name = "Gule epler",
                            NormalizedName = "gule epler",
                            Url = "gule-epler"
                        },
                        new
                        {
                            Id = 176,
                            EntityType = "Ingredient",
                            Name = "Appelsin",
                            NormalizedName = "appelsin",
                            Url = "appelsin"
                        },
                        new
                        {
                            Id = 177,
                            EntityType = "Ingredient",
                            Name = "Sitron",
                            NormalizedName = "sitron",
                            Url = "sitron"
                        },
                        new
                        {
                            Id = 178,
                            EntityType = "Ingredient",
                            Name = "Økologisk sitron",
                            NormalizedName = "økologisk sitron",
                            Url = "okologisk-sitron"
                        },
                        new
                        {
                            Id = 179,
                            EntityType = "Ingredient",
                            Name = "Lime",
                            NormalizedName = "lime",
                            Url = "lime"
                        },
                        new
                        {
                            Id = 180,
                            EntityType = "Ingredient",
                            Name = "Hermetiske mandarinbåter",
                            NormalizedName = "hermetiske mandarinbåter",
                            Url = "hermetiske-mandarinbater"
                        },
                        new
                        {
                            Id = 181,
                            EntityType = "Ingredient",
                            Name = "Hermetiske pærer",
                            NormalizedName = "hermetiske pærer",
                            Url = "hermetiske-parer"
                        },
                        new
                        {
                            Id = 182,
                            EntityType = "Ingredient",
                            Name = "Hermetiske fersken",
                            NormalizedName = "hermetiske fersken",
                            Url = "hermetiske-fersken"
                        },
                        new
                        {
                            Id = 183,
                            EntityType = "Ingredient",
                            Name = "Banan",
                            NormalizedName = "banan",
                            Url = "banan"
                        },
                        new
                        {
                            Id = 184,
                            EntityType = "Ingredient",
                            Name = "Klementin",
                            NormalizedName = "klementin",
                            Url = "klementin"
                        },
                        new
                        {
                            Id = 185,
                            EntityType = "Ingredient",
                            Name = "Blå druer",
                            NormalizedName = "blå druer",
                            Url = "bla-druer"
                        },
                        new
                        {
                            Id = 186,
                            EntityType = "Ingredient",
                            Name = "Grønne druer",
                            NormalizedName = "grønne druer",
                            Url = "gronne-druer"
                        },
                        new
                        {
                            Id = 187,
                            EntityType = "Ingredient",
                            Name = "Rosiner",
                            NormalizedName = "rosiner",
                            Url = "rosiner"
                        },
                        new
                        {
                            Id = 188,
                            EntityType = "Ingredient",
                            Name = "Korinter",
                            NormalizedName = "korinter",
                            Url = "korinter"
                        },
                        new
                        {
                            Id = 189,
                            EntityType = "Nutrient",
                            Name = "Protein",
                            NormalizedName = "protein",
                            Url = "protein"
                        },
                        new
                        {
                            Id = 190,
                            EntityType = "Nutrient",
                            Name = "Karbohydrater",
                            NormalizedName = "karbohydrater",
                            Url = "karbohydrater"
                        },
                        new
                        {
                            Id = 191,
                            EntityType = "Nutrient",
                            Name = "Sukkerarter",
                            NormalizedName = "sukkerarter",
                            Url = "sukkerarter"
                        },
                        new
                        {
                            Id = 192,
                            EntityType = "Nutrient",
                            Name = "Polyoler",
                            NormalizedName = "polyoler",
                            Url = "polyoler"
                        },
                        new
                        {
                            Id = 193,
                            EntityType = "Nutrient",
                            Name = "Stivelse",
                            NormalizedName = "stivelse",
                            Url = "stivelse"
                        },
                        new
                        {
                            Id = 194,
                            EntityType = "Nutrient",
                            Name = "Fett",
                            NormalizedName = "fett",
                            Url = "fett"
                        },
                        new
                        {
                            Id = 195,
                            EntityType = "Nutrient",
                            Name = "Mettet fett",
                            NormalizedName = "mettet fett",
                            Url = "mettet-fett"
                        },
                        new
                        {
                            Id = 196,
                            EntityType = "Nutrient",
                            Name = "Enumettet fett",
                            NormalizedName = "enumettet fett",
                            Url = "enumettet-fett"
                        },
                        new
                        {
                            Id = 197,
                            EntityType = "Nutrient",
                            Name = "Flerumettet fett",
                            NormalizedName = "flerumettet fett",
                            Url = "flerumettet-fett"
                        },
                        new
                        {
                            Id = 198,
                            EntityType = "Nutrient",
                            Name = "Transfett",
                            NormalizedName = "transfett",
                            Url = "transfett"
                        },
                        new
                        {
                            Id = 199,
                            EntityType = "Nutrient",
                            Name = "Vitamin A, retinol",
                            NormalizedName = "vitamin a retinol",
                            Url = "vitamin-a-retinol"
                        },
                        new
                        {
                            Id = 200,
                            EntityType = "Nutrient",
                            Name = "Vitamin B1, tiamin",
                            NormalizedName = "vitamin b1 tiamin",
                            Url = "vitamin-b1-tiamin"
                        },
                        new
                        {
                            Id = 201,
                            EntityType = "Nutrient",
                            Name = "Vitamin B2, riboflavin",
                            NormalizedName = "vitamin b2 riboflavin",
                            Url = "vitamin-b2-riboflavin"
                        },
                        new
                        {
                            Id = 202,
                            EntityType = "Nutrient",
                            Name = "Vitamin B3, niacin",
                            NormalizedName = "vitamin b3 niacin",
                            Url = "vitamin-b3-niacin"
                        },
                        new
                        {
                            Id = 203,
                            EntityType = "Nutrient",
                            Name = "Vitamin B5, pantotensyre",
                            NormalizedName = "vitamin b5 pantotensyre",
                            Url = "vitamin-b5-pantotensyre"
                        },
                        new
                        {
                            Id = 204,
                            EntityType = "Nutrient",
                            Name = "Vitamin B7, biotin",
                            NormalizedName = "vitamin b7 biotin",
                            Url = "vitamin-b7-biotin"
                        },
                        new
                        {
                            Id = 205,
                            EntityType = "Nutrient",
                            Name = "Vitamin B9, folat",
                            NormalizedName = "vitamin b9 folat",
                            Url = "vitamin-b9-folat"
                        },
                        new
                        {
                            Id = 206,
                            EntityType = "Nutrient",
                            Name = "Vitamin B12, kobalamin",
                            NormalizedName = "vitamin b12 kobalamin",
                            Url = "vitamin-b12-kobalamin"
                        },
                        new
                        {
                            Id = 207,
                            EntityType = "Nutrient",
                            Name = "Vitamin C, askorbinsyre",
                            NormalizedName = "vitamin c askorbinsyre",
                            Url = "vitamin-c-askorbinsyre"
                        },
                        new
                        {
                            Id = 208,
                            EntityType = "Nutrient",
                            Name = "Vitamin D2, ergokalsiferol",
                            NormalizedName = "vitamin d2 ergokalsiferol",
                            Url = "vitamin-d2-ergokalsiferol"
                        },
                        new
                        {
                            Id = 209,
                            EntityType = "Nutrient",
                            Name = "Vitamin D3, kolikalsiferol",
                            NormalizedName = "vitamin d3 kolikalsiferol",
                            Url = "vitamin-d3-kolikalsiferol"
                        },
                        new
                        {
                            Id = 210,
                            EntityType = "Nutrient",
                            Name = "Vitamin E, tokoferol (E306)",
                            NormalizedName = "vitamin e tokoferol e306",
                            Url = "vitamin-e-tokoferol-e306"
                        },
                        new
                        {
                            Id = 211,
                            EntityType = "Nutrient",
                            Name = "Vitamin K1, fyllokinon",
                            NormalizedName = "vitamin k1 fyllokinon",
                            Url = "vitamin-k1-fyllokinon"
                        },
                        new
                        {
                            Id = 212,
                            EntityType = "Nutrient",
                            Name = "Vitamin K2, menakinon",
                            NormalizedName = "vitamin k2 menakinon",
                            Url = "vitamin-k2-menakinon"
                        },
                        new
                        {
                            Id = 213,
                            EntityType = "Nutrient",
                            Name = "Kalium",
                            NormalizedName = "kalium",
                            Url = "kalium"
                        },
                        new
                        {
                            Id = 214,
                            EntityType = "Nutrient",
                            Name = "Klorin",
                            NormalizedName = "klorin",
                            Url = "klorin"
                        },
                        new
                        {
                            Id = 215,
                            EntityType = "Nutrient",
                            Name = "Natrium",
                            NormalizedName = "natrium",
                            Url = "natrium"
                        },
                        new
                        {
                            Id = 216,
                            EntityType = "Nutrient",
                            Name = "Kalsium",
                            NormalizedName = "kalsium",
                            Url = "kalsium"
                        },
                        new
                        {
                            Id = 217,
                            EntityType = "Nutrient",
                            Name = "Fosfor",
                            NormalizedName = "fosfor",
                            Url = "fosfor"
                        },
                        new
                        {
                            Id = 218,
                            EntityType = "Nutrient",
                            Name = "Magnesium",
                            NormalizedName = "magnesium",
                            Url = "magnesium"
                        },
                        new
                        {
                            Id = 219,
                            EntityType = "Nutrient",
                            Name = "Jern",
                            NormalizedName = "jern",
                            Url = "jern"
                        },
                        new
                        {
                            Id = 220,
                            EntityType = "Nutrient",
                            Name = "Sink",
                            NormalizedName = "sink",
                            Url = "sink"
                        },
                        new
                        {
                            Id = 221,
                            EntityType = "Nutrient",
                            Name = "Mangan",
                            NormalizedName = "mangan",
                            Url = "mangan"
                        },
                        new
                        {
                            Id = 222,
                            EntityType = "Nutrient",
                            Name = "Kobber",
                            NormalizedName = "kobber",
                            Url = "kobber"
                        },
                        new
                        {
                            Id = 223,
                            EntityType = "Nutrient",
                            Name = "Jod",
                            NormalizedName = "jod",
                            Url = "jod"
                        },
                        new
                        {
                            Id = 224,
                            EntityType = "Nutrient",
                            Name = "Molybden",
                            NormalizedName = "molybden",
                            Url = "molybden"
                        },
                        new
                        {
                            Id = 225,
                            EntityType = "Nutrient",
                            Name = "Selen",
                            NormalizedName = "selen",
                            Url = "selen"
                        },
                        new
                        {
                            Id = 226,
                            EntityType = "Nutrient",
                            Name = "Fluor",
                            NormalizedName = "fluor",
                            Url = "fluor"
                        },
                        new
                        {
                            Id = 227,
                            EntityType = "Nutrient",
                            Name = "Krom",
                            NormalizedName = "krom",
                            Url = "krom"
                        },
                        new
                        {
                            Id = 228,
                            EntityType = "Nutrient",
                            Name = "Nikkel",
                            NormalizedName = "nikkel",
                            Url = "nikkel"
                        },
                        new
                        {
                            Id = 229,
                            EntityType = "Nutrient",
                            Name = "Bor",
                            NormalizedName = "bor",
                            Url = "bor"
                        },
                        new
                        {
                            Id = 230,
                            EntityType = "Nutrient",
                            Name = "Silisium",
                            NormalizedName = "silisium",
                            Url = "silisium"
                        },
                        new
                        {
                            Id = 231,
                            EntityType = "Nutrient",
                            Name = "Vanadium",
                            NormalizedName = "vanadium",
                            Url = "vanadium"
                        },
                        new
                        {
                            Id = 232,
                            EntityType = "Nutrient",
                            Name = "Salt",
                            NormalizedName = "salt",
                            Url = "salt"
                        },
                        new
                        {
                            Id = 233,
                            EntityType = "Allergen",
                            Name = "Krepsdyr",
                            NormalizedName = "krepsdyr",
                            Url = "krepsdyr"
                        },
                        new
                        {
                            Id = 234,
                            EntityType = "Allergen",
                            Name = "Sesamfrø",
                            NormalizedName = "sesamfrø",
                            Url = "sesamfro"
                        },
                        new
                        {
                            Id = 235,
                            EntityType = "Allergen",
                            Name = "Nøtter",
                            NormalizedName = "nøtter",
                            Url = "notter"
                        },
                        new
                        {
                            Id = 236,
                            EntityType = "Allergen",
                            Name = "Gluten",
                            NormalizedName = "gluten",
                            Url = "gluten"
                        },
                        new
                        {
                            Id = 237,
                            EntityType = "Allergen",
                            Name = "Egg",
                            NormalizedName = "egg",
                            Url = "egg"
                        },
                        new
                        {
                            Id = 238,
                            EntityType = "Allergen",
                            Name = "Fisk",
                            NormalizedName = "fisk",
                            Url = "fisk"
                        },
                        new
                        {
                            Id = 239,
                            EntityType = "Allergen",
                            Name = "Skalldyr",
                            NormalizedName = "skalldyr",
                            Url = "skalldyr"
                        },
                        new
                        {
                            Id = 240,
                            EntityType = "Allergen",
                            Name = "Sennep",
                            NormalizedName = "sennep",
                            Url = "sennep"
                        },
                        new
                        {
                            Id = 241,
                            EntityType = "Allergen",
                            Name = "Selleri",
                            NormalizedName = "selleri",
                            Url = "selleri"
                        },
                        new
                        {
                            Id = 242,
                            EntityType = "Allergen",
                            Name = "Peanøtter",
                            NormalizedName = "peanøtter",
                            Url = "peanotter"
                        },
                        new
                        {
                            Id = 243,
                            EntityType = "Allergen",
                            Name = "Melk",
                            NormalizedName = "melk",
                            Url = "melk"
                        },
                        new
                        {
                            Id = 244,
                            EntityType = "Allergen",
                            Name = "Sulfitt",
                            NormalizedName = "sulfitt",
                            Url = "sulfitt"
                        },
                        new
                        {
                            Id = 245,
                            EntityType = "Allergen",
                            Name = "Soya",
                            NormalizedName = "soya",
                            Url = "soya"
                        },
                        new
                        {
                            Id = 246,
                            EntityType = "Allergen",
                            Name = "Lupin",
                            NormalizedName = "lupin",
                            Url = "lupin"
                        });
                });

            modelBuilder.Entity("MenuPlanner.Models.Entities.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("Facebook")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("HasBackgropImage")
                        .HasColumnType("bit");

                    b.Property<bool>("HasProfileImage")
                        .HasColumnType("bit");

                    b.Property<string>("Instagram")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Introduction")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TwitterX")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Website")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("MenuPlanner.Models.Entities.IngredientAllergen", b =>
                {
                    b.HasOne("MenuPlanner.Models.Entities.Allergen", "Allergen")
                        .WithMany()
                        .HasForeignKey("AllergenId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MenuPlanner.Models.Entities.Ingredient", "Ingredient")
                        .WithMany("IngredientAllergens")
                        .HasForeignKey("IngredientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Allergen");

                    b.Navigation("Ingredient");
                });

            modelBuilder.Entity("MenuPlanner.Models.Entities.IngredientNutrient", b =>
                {
                    b.HasOne("MenuPlanner.Models.Entities.Ingredient", "Ingredient")
                        .WithMany("IngredientNutrients")
                        .HasForeignKey("IngredientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MenuPlanner.Models.Entities.Nutrient", "Nutrient")
                        .WithMany()
                        .HasForeignKey("NutrientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ingredient");

                    b.Navigation("Nutrient");
                });

            modelBuilder.Entity("MenuPlanner.Models.Entities.Recipe", b =>
                {
                    b.HasOne("MenuPlanner.Models.Entities.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryCode");

                    b.HasOne("MenuPlanner.Models.Entities.Recipe", null)
                        .WithMany("SubRecipes")
                        .HasForeignKey("ParentRecipeId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("MenuPlanner.Models.Entities.User", "User")
                        .WithMany("Recipes")
                        .HasForeignKey("UserId");

                    b.Navigation("Country");

                    b.Navigation("User");
                });

            modelBuilder.Entity("MenuPlanner.Models.Entities.RecipeIngredient", b =>
                {
                    b.HasOne("MenuPlanner.Models.Entities.Ingredient", "Ingredient")
                        .WithMany("RecipeIngredients")
                        .HasForeignKey("IngredientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MenuPlanner.Models.Entities.Recipe", "Recipe")
                        .WithMany("RecipeIngredients")
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ingredient");

                    b.Navigation("Recipe");
                });

            modelBuilder.Entity("MenuPlanner.Models.Entities.RecipeStep", b =>
                {
                    b.HasOne("MenuPlanner.Models.Entities.Recipe", "Recipe")
                        .WithMany("Steps")
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Recipe");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("MenuPlanner.Models.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("MenuPlanner.Models.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MenuPlanner.Models.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("MenuPlanner.Models.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MenuPlanner.Models.Entities.Ingredient", b =>
                {
                    b.Navigation("IngredientAllergens");

                    b.Navigation("IngredientNutrients");

                    b.Navigation("RecipeIngredients");
                });

            modelBuilder.Entity("MenuPlanner.Models.Entities.Recipe", b =>
                {
                    b.Navigation("RecipeIngredients");

                    b.Navigation("Steps");

                    b.Navigation("SubRecipes");
                });

            modelBuilder.Entity("MenuPlanner.Models.Entities.User", b =>
                {
                    b.Navigation("Recipes");
                });
#pragma warning restore 612, 618
        }
    }
}
