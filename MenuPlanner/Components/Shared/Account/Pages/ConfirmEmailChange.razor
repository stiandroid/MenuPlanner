@page "/Account/ConfirmEmailChange"

@using System.Text
@using Microsoft.AspNetCore.Identity
@using Microsoft.AspNetCore.WebUtilities
@using MenuPlanner.Data

@inject UserManager<User> UserManager
@inject SignInManager<User> SignInManager
@inject IdentityRedirectManager RedirectManager

<PageTitle>Bekreft endring av e-postadresse</PageTitle>

<h1>Bekreft endring av e-postadresse</h1>

<StatusMessage Message="@message" Type=messageType />

@code {
    private string? message;

    [CascadingParameter]
    private HttpContext HttpContext { get; set; } = default!;

    [SupplyParameterFromQuery]
    private string? UserId { get; set; }

    [SupplyParameterFromQuery]
    private string? Email { get; set; }

    [SupplyParameterFromQuery]
    private string? Code { get; set; }

    MessageType? messageType;

    protected override async Task OnInitializedAsync()
    {
        if (UserId is null || Email is null || Code is null)
        {
            RedirectManager.RedirectToWithStatus(
                "Account/Login",
                "Ugyldig lenke for bekreftelse av endring av e-postadresse.", 
                HttpContext,
                MessageType.Danger);
        }

        var user = await UserManager.FindByIdAsync(UserId);
        if (user is null)
        {
            messageType = MessageType.Danger;
            message = "Finner ikke bruker med Id '{userId}'";
            return;
        }

        var code = Encoding.UTF8.GetString(WebEncoders.Base64UrlDecode(Code));
        var result = await UserManager.ChangeEmailAsync(user, Email, code);
        if (!result.Succeeded)
        {
            messageType = MessageType.Danger;
            message = "En feil oppstod under endring av e-postadresse.";
            return;
        }

        // In our UI email and user name are one and the same, so when we update the email
        // we need to update the user name.
        var setUserNameResult = await UserManager.SetUserNameAsync(user, Email);
        if (!setUserNameResult.Succeeded)
        {
            messageType = MessageType.Danger;
            message = "En feil oppstod under endring av brukernavn.";
            return;
        }

        await SignInManager.RefreshSignInAsync(user);
        messageType = MessageType.Success;
        message = "Takk for at du bekreftet endring av e-postadressen din.";
    }
}
