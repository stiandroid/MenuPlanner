@page "/admin"
@attribute [Authorize(Roles = "SysAdmin,UserAdmin,RecipeEditor,RecipePublisher,IngredientEditor,IngredientPublisher,NutrientEditor,NutrientPublisher,AllergenEditor,AllergenPublisher")]
@inject IUserService UserService
@inject IRecipeService RecipeService
@inject IIngredientService IngredientService
@inject INutrientService NutrientService
@inject IAllergenService AllergenService

<PageTitle>Admin - oversikt</PageTitle>
<h1>Oversikt</h1>

<div class="d-flex flex-row flex-wrap gap-3">
    <div class="alert alert-primary p-2 rounded">
        <UsersOverview Total="@totalUsers" />
    </div>
    <div class="alert alert-primary p-2 rounded">
        <EntityOverview 
            Entity="Recipe"
            Total="@recipesTotal" 
            Current="@recipesCurrent"
            Drafts="@recipesDrafts"
            Archived="@recipesArchived"
            Withdrawn="@recipesWithdrawn" />
    </div>
    <div class="alert alert-primary p-2 rounded">
        <EntityOverview 
            Entity="Ingredient"
            Total="@ingredientsTotal" 
            Current="@ingredientsCurrent"
            Drafts="@ingredientsDrafts"
            Archived="@ingredientsArchived"
            Withdrawn="@ingredientsWithdrawn" />
    </div>
    <div class="alert alert-primary p-2 rounded">
        <EntityOverview 
            Entity="Nutrient"
            Total="@nutrientsTotal" 
            Current="@nutrientsCurrent"
            Drafts="@nutrientsDrafts"
            Archived="@nutrientsArchived"
            Withdrawn="@nutrientsWithdrawn" />
    </div>
    <div class="alert alert-primary p-2 rounded">
        <EntityOverview 
            Entity="Allergen"
            Total="@allergensTotal" 
            Current="@allergensCurrent"
            Drafts="@allergensDrafts"
            Archived="@allergensArchived"
            Withdrawn="@allergensWithdrawn" />
    </div>
</div>

@code {
    // USERS
    int totalUsers;

    // RECIPES
    int recipesTotal;
    int recipesCurrent;
    int recipesDrafts;
    int recipesArchived;
    int recipesWithdrawn;

    // INGREDIENTS
    int ingredientsTotal;
    int ingredientsCurrent;
    int ingredientsDrafts;
    int ingredientsArchived;
    int ingredientsWithdrawn;

    // NUTRIENTS
    int nutrientsTotal;
    int nutrientsCurrent;
    int nutrientsDrafts;
    int nutrientsArchived;
    int nutrientsWithdrawn;

    // ALLERGENS
    int allergensTotal;
    int allergensCurrent;
    int allergensDrafts;
    int allergensArchived;
    int allergensWithdrawn;

    protected override async Task OnInitializedAsync()
    {
        totalUsers = await UserService.CountTotal();

        recipesCurrent = await RecipeService.Count(LifecycleState.Current);
        recipesDrafts = await RecipeService.Count(LifecycleState.Draft);
        recipesWithdrawn = await RecipeService.Count(LifecycleState.Withdrawn);
        recipesArchived = await RecipeService.Count(LifecycleState.Archived);
        recipesTotal = recipesCurrent + recipesDrafts + recipesWithdrawn + recipesArchived;

        nutrientsCurrent = await NutrientService.Count(LifecycleState.Current);
        nutrientsDrafts = await NutrientService.Count(LifecycleState.Draft);
        nutrientsWithdrawn = await NutrientService.Count(LifecycleState.Withdrawn);
        nutrientsArchived = await NutrientService.Count(LifecycleState.Archived);
        nutrientsTotal = nutrientsCurrent + nutrientsDrafts + nutrientsWithdrawn + nutrientsArchived;

        ingredientsCurrent = await IngredientService.Count(LifecycleState.Current);
        ingredientsDrafts = await IngredientService.Count(LifecycleState.Draft);
        ingredientsWithdrawn = await IngredientService.Count(LifecycleState.Withdrawn);
        ingredientsArchived = await IngredientService.Count(LifecycleState.Archived);
        ingredientsTotal = ingredientsCurrent + ingredientsDrafts + ingredientsWithdrawn + ingredientsArchived;

        allergensCurrent = await AllergenService.Count(LifecycleState.Current);
        allergensDrafts = await AllergenService.Count(LifecycleState.Draft);
        allergensWithdrawn = await AllergenService.Count(LifecycleState.Withdrawn);
        allergensArchived = await AllergenService.Count(LifecycleState.Archived);
        allergensTotal = allergensCurrent + allergensDrafts + allergensWithdrawn + allergensArchived;
    }
}
